[
    {
        "id": "3fcf2083427dc55b",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fa3e27c91475fbd2",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "24c14c0242eb8549",
        "type": "tab",
        "label": "Summary Mindsphere",
        "disabled": false,
        "info": ""
    },
    {
        "id": "53e108dc1c13c742",
        "type": "tab",
        "label": "Multiwire",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e82425116e2bf396",
        "type": "tab",
        "label": "Insulaton",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a6ca620fd0ddad19",
        "type": "tab",
        "label": "buncher",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7a010fde9cc08f8c",
        "type": "tab",
        "label": "Coiling",
        "disabled": false,
        "info": ""
    },
    {
        "id": "61a9ab317891e053",
        "type": "tab",
        "label": "Energy",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9b7e6180dfe7188a",
        "type": "tab",
        "label": "Ping Check",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a00f5ebc02ec2834",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7249182939857684",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "5457d47d.44534c",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.201",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "5000",
        "name": "MMW 24",
        "vartable": [
            {
                "addr": "DB50,INT172",
                "name": "Line Speed Act1"
            },
            {
                "addr": "DB50,INT180",
                "name": "Line Speed MAX1"
            },
            {
                "addr": "M46.7",
                "name": "Machine Status1"
            },
            {
                "addr": "DB50,INT308",
                "name": "LURICANT TEMPERATURE1"
            },
            {
                "addr": "DB50,WORD320",
                "name": "GEAR OIL TEMPERATURE1"
            },
            {
                "addr": "DB50,X103.1",
                "name": "SPOOLER 1 SELECTION1"
            },
            {
                "addr": "DB50,X103.2",
                "name": "SPOOLER 2 SELECTION1"
            },
            {
                "addr": "DB60,X9.0",
                "name": "ANNEALER SELECTION1"
            },
            {
                "addr": "DB50,INT292",
                "name": "NO OF WIRES1"
            },
            {
                "addr": "DB50,DWORD244",
                "name": "WIRE SIZE1"
            },
            {
                "addr": "DB50,DWORD430",
                "name": "SPOOLER 1 LENGTH ACTUAL1"
            },
            {
                "addr": "DB50,DWORD434",
                "name": "SPOOLER 1 LAST SPOOL LENGTH1"
            },
            {
                "addr": "DB50,DWORD470",
                "name": "SPOOLER 2 LENGTH ACTUAL1"
            },
            {
                "addr": "DB50,DWORD474",
                "name": "SPOOLERR 2 LAST SPOOL LENGTH1"
            },
            {
                "addr": "DB50,INT344",
                "name": "REASON OF STOP1"
            },
            {
                "addr": "DB60,INT204",
                "name": "ANNEALER"
            },
            {
                "addr": "DB50,BYTE1",
                "name": "MACHINE_START"
            },
            {
                "addr": "DB50,INT280",
                "name": "NOW_SPOOL11"
            },
            {
                "addr": "DB50,INT282",
                "name": "NOW_SPOOL21"
            }
        ]
    },
    {
        "id": "dd59cd5.02de73",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.202",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "2000",
        "timeout": "2000",
        "name": "MMW 32-1",
        "vartable": [
            {
                "addr": "DB50,INT172",
                "name": "Line Speed Act2"
            },
            {
                "addr": "DB50,INT180",
                "name": "Line Speed MAX2"
            },
            {
                "addr": "M46.7",
                "name": "Machine Status2"
            },
            {
                "addr": "DB50,INT308",
                "name": "LURICANT TEMPERATURE2"
            },
            {
                "addr": "DB50,WORD320",
                "name": "GEAR OIL TEMPERATURE2"
            },
            {
                "addr": "DB50,X103.1",
                "name": "SPOOLER 1 SELECTION2"
            },
            {
                "addr": "DB50,X103.2",
                "name": "SPOOLER 2 SELECTION2"
            },
            {
                "addr": "DB60,X9.0",
                "name": "ANNEALER SELECTION2"
            },
            {
                "addr": "DB50,INT292",
                "name": "NO OF WIRES2"
            },
            {
                "addr": "DB50,DWORD244",
                "name": "WIRE SIZE2"
            },
            {
                "addr": "DB50,DWORD430",
                "name": "SPOOLER 1 LENGTH ACTUAL2"
            },
            {
                "addr": "DB50,DWORD434",
                "name": "SPOOLER 1 LAST SPOOL LENGTH2"
            },
            {
                "addr": "DB50,DWORD470",
                "name": "SPOOLER 2 LENGTH ACTUAL2"
            },
            {
                "addr": "DB50,DWORD474",
                "name": "SPOOLERR 2 LAST SPOOL LENGTH2"
            },
            {
                "addr": "DB50,INT344",
                "name": "REASON OF STOP2"
            },
            {
                "addr": "DB60,INT206",
                "name": "ANNEALER2"
            },
            {
                "addr": "DB50,INT280",
                "name": "NOW_SPOOL12"
            },
            {
                "addr": "DB50,INT282",
                "name": "NOW_SPOOL22"
            }
        ]
    },
    {
        "id": "b1c26c5b.ed17c",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.203",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "MMW 32-2",
        "vartable": [
            {
                "addr": "DB50,INT172",
                "name": "Line Speed Act3"
            },
            {
                "addr": "DB50,INT180",
                "name": "Line Speed MAX3"
            },
            {
                "addr": "M46.7",
                "name": "Machine Status3"
            },
            {
                "addr": "DB50,INT308",
                "name": "LURICANT TEMPERATURE3"
            },
            {
                "addr": "DB50,WORD320",
                "name": "GEAR OIL TEMPERATURE3"
            },
            {
                "addr": "DB50,X103.1",
                "name": "SPOOLER 1 SELECTION3"
            },
            {
                "addr": "DB50,X103.2",
                "name": "SPOOLER 2 SELECTION3"
            },
            {
                "addr": "DB60,X9.0",
                "name": "ANNEALER SELECTION3"
            },
            {
                "addr": "DB50,INT292",
                "name": "NO OF WIRES3"
            },
            {
                "addr": "DB50,DWORD244",
                "name": "WIRE SIZE3"
            },
            {
                "addr": "DB50,DWORD430",
                "name": "SPOOLER 1 LENGTH ACTUAL3"
            },
            {
                "addr": "DB50,DWORD434",
                "name": "SPOOLER 1 LAST SPOOL LENGTH3"
            },
            {
                "addr": "DB50,DWORD470",
                "name": "SPOOLER 2 LENGTH ACTUAL3"
            },
            {
                "addr": "DB50,DWORD474",
                "name": "SPOOLERR 2 LAST SPOOL LENGTH3"
            },
            {
                "addr": "DB50,INT344",
                "name": "REASON OF STOP3"
            },
            {
                "addr": "DB60,INT204",
                "name": "ANNEALER3"
            },
            {
                "addr": "DB50,INT280",
                "name": "NOW_SPOOL13"
            },
            {
                "addr": "DB50,INT282",
                "name": "NOW_SPOOL23"
            }
        ]
    },
    {
        "id": "4a2ef312.10170c",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.204",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "MMW 32-3",
        "vartable": [
            {
                "addr": "DB50,INT172",
                "name": "Line Speed Act4"
            },
            {
                "addr": "DB50,INT180",
                "name": "Line Speed MAX4"
            },
            {
                "addr": "M46.7",
                "name": "Machine Status4"
            },
            {
                "addr": "DB50,INT308",
                "name": "LURICANT TEMPERATURE4"
            },
            {
                "addr": "DB50,WORD320",
                "name": "GEAR OIL TEMPERATURE4"
            },
            {
                "addr": "DB50,X103.1",
                "name": "SPOOLER 1 SELECTION4"
            },
            {
                "addr": "DB50,X103.2",
                "name": "SPOOLER 2 SELECTION4"
            },
            {
                "addr": "DB60,X9.0",
                "name": "ANNEALER SELECTION4"
            },
            {
                "addr": "DB50,INT292",
                "name": "NO OF WIRES4"
            },
            {
                "addr": "DB50,DWORD244",
                "name": "WIRE SIZE4"
            },
            {
                "addr": "DB50,DWORD430",
                "name": "SPOOLER 1 LENGTH ACTUAL4"
            },
            {
                "addr": "DB50,DWORD434",
                "name": "SPOOLER 1 LAST SPOOL LENGTH4"
            },
            {
                "addr": "DB50,DWORD470",
                "name": "SPOOLER 2 LENGTH ACTUAL4"
            },
            {
                "addr": "DB50,DWORD474",
                "name": "SPOOLERR 2 LAST SPOOL LENGTH4"
            },
            {
                "addr": "DB50,INT344",
                "name": "REASON OF STOP4"
            },
            {
                "addr": "DB60,INT206",
                "name": "ANNEALER4"
            },
            {
                "addr": "DB50,INT280",
                "name": "NOW_SPOOL14"
            },
            {
                "addr": "DB50,INT282",
                "name": "NOW_SPOOL24"
            }
        ]
    },
    {
        "id": "22e4a0e1.d5074",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.211",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "5000",
        "name": "Buncher 1",
        "vartable": [
            {
                "addr": "DB74,INT124",
                "name": "TWIST PER MINUTE ACT1"
            },
            {
                "addr": "DB74,INT0",
                "name": "TWIST PER MINUTE MAX1"
            },
            {
                "addr": "DB74,INT150",
                "name": "LINE SPEED ACT1"
            },
            {
                "addr": "DB74,INT348",
                "name": "WIRE SIZE MM21"
            },
            {
                "addr": "DB74,DWORD168",
                "name": "LENGTH ACTUAL KM1"
            },
            {
                "addr": "DB74,DWORD172",
                "name": "LENGTH SET KM1"
            },
            {
                "addr": "DB74,INT142",
                "name": "LAY LENGTH MM1"
            },
            {
                "addr": "DB74,INT500",
                "name": "REASON OF STOP5"
            },
            {
                "addr": "M130.0",
                "name": "Status"
            }
        ]
    },
    {
        "id": "c420bee6.05eb8",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.212",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Buncher 2",
        "vartable": [
            {
                "addr": "DB74,INT124",
                "name": "TWIST PER MINUTE ACT2"
            },
            {
                "addr": "DB74,INT0",
                "name": "TWIST PER MINUTE MAX2"
            },
            {
                "addr": "DB74,INT150",
                "name": "LINE SPEED ACT2"
            },
            {
                "addr": "DB74,INT348",
                "name": "WIRE SIZE MM22"
            },
            {
                "addr": "DB74,DWORD168",
                "name": "LENGTH ACTUAL KM2"
            },
            {
                "addr": "DB74,DWORD172",
                "name": "LENGTH SET KM2"
            },
            {
                "addr": "DB74,INT142",
                "name": "LAY LENGTH MM2"
            },
            {
                "addr": "DB74,INT500",
                "name": "REASON OF STOP6"
            },
            {
                "addr": "M130.0",
                "name": "Status"
            }
        ]
    },
    {
        "id": "94cd6b93.18c038",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.213",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "5000",
        "name": "Buncher 3",
        "vartable": [
            {
                "addr": "DB74,INT124",
                "name": "TWIST PER MINUTE ACT3"
            },
            {
                "addr": "DB74,INT0",
                "name": "TWIST PER MINUTE MAX3"
            },
            {
                "addr": "DB74,INT150",
                "name": "LINE SPEED ACT3"
            },
            {
                "addr": "DB74,INT348",
                "name": "WIRE SIZE MM23"
            },
            {
                "addr": "DB74,DWORD168",
                "name": "LENGTH ACTUAL KM3"
            },
            {
                "addr": "DB74,DWORD172",
                "name": "LENGTH SET KM3"
            },
            {
                "addr": "DB74,INT142",
                "name": "LAY LENGTH MM3"
            },
            {
                "addr": "DB74,INT500",
                "name": "REASON OF STOP7"
            },
            {
                "addr": "M130.0",
                "name": "Status"
            }
        ]
    },
    {
        "id": "54313eb0.07354",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.214",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "2000",
        "timeout": "2000",
        "name": "Buncher 4",
        "vartable": [
            {
                "addr": "DB74,INT124",
                "name": "TWIST PER MINUTE ACT4"
            },
            {
                "addr": "DB74,INT0",
                "name": "TWIST PER MINUTE MAX4"
            },
            {
                "addr": "DB74,INT150",
                "name": "LINE SPEED ACT4"
            },
            {
                "addr": "DB74,INT348",
                "name": "WIRE SIZE MM24"
            },
            {
                "addr": "DB74,DWORD168",
                "name": "LENGTH ACTUAL KM4"
            },
            {
                "addr": "DB74,DWORD172",
                "name": "LENGTH SET KM4"
            },
            {
                "addr": "DB74,INT142",
                "name": "LAY LENGTH MM4"
            },
            {
                "addr": "DB74,INT500",
                "name": "REASON OF STOP8"
            },
            {
                "addr": "M130.0",
                "name": "Status"
            }
        ]
    },
    {
        "id": "54aeda8e.790844",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.215",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Buncher 5",
        "vartable": [
            {
                "addr": "DB74,INT124",
                "name": "TWIST PER MINUTE ACT5"
            },
            {
                "addr": "DB74,INT0",
                "name": "TWIST PER MINUTE MAX5"
            },
            {
                "addr": "DB74,INT150",
                "name": "LINE SPEED ACT5"
            },
            {
                "addr": "DB74,INT348",
                "name": "WIRE SIZE MM25"
            },
            {
                "addr": "DB74,DWORD168",
                "name": "LENGTH ACTUAL KM5"
            },
            {
                "addr": "DB74,DWORD172",
                "name": "LENGTH SET KM5"
            },
            {
                "addr": "DB74,INT142",
                "name": "LAY LENGTH MM5"
            },
            {
                "addr": "DB74,INT500",
                "name": "REASON OF STOP9"
            },
            {
                "addr": "M130.0",
                "name": "Status"
            }
        ]
    },
    {
        "id": "3747d5ad.4d191a",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.216",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Buncher 6",
        "vartable": [
            {
                "addr": "DB74,INT124",
                "name": "TWIST PER MINUTE ACT6"
            },
            {
                "addr": "DB74,INT0",
                "name": "TWIST PER MINUTE MAX6"
            },
            {
                "addr": "DB74,INT150",
                "name": "LINE SPEED ACT6"
            },
            {
                "addr": "DB74,INT348",
                "name": "WIRE SIZE MM26"
            },
            {
                "addr": "DB74,DWORD168",
                "name": "LENGTH ACTUAL KM6"
            },
            {
                "addr": "DB74,DWORD172",
                "name": "LENGTH SET KM6"
            },
            {
                "addr": "DB74,INT142",
                "name": "LAY LENGTH MM6"
            },
            {
                "addr": "DB74,INT500",
                "name": "REASON OF STOP10"
            },
            {
                "addr": "M130.0",
                "name": "Status"
            }
        ]
    },
    {
        "id": "14e769c9.163936",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.41",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "5000",
        "name": "Insulation 1",
        "vartable": [
            {
                "addr": "DB14,REAL4",
                "name": "Actual_LineSpeed1"
            },
            {
                "addr": "DB230,REAL6148",
                "name": "Actual_LineSpeed max1"
            },
            {
                "addr": "DB300,REAL620",
                "name": "CABLE_DIAMETER1"
            },
            {
                "addr": "DB10,REAL0",
                "name": "LENGTH_SET_METER1"
            },
            {
                "addr": "DB10,S610.254",
                "name": "RECIPE_NAME1"
            },
            {
                "addr": "DB10,S866.254",
                "name": "RECIPE_RECORD_NAME1"
            },
            {
                "addr": "DB11,REAL194",
                "name": "80MM_EXTRUDER_RPM_ACT1"
            },
            {
                "addr": "DB11,REAL648",
                "name": "45MM_EXTRUDER_RPM_ACT1"
            },
            {
                "addr": "MW210",
                "name": "REASON OF STOP1"
            },
            {
                "addr": "DB10,REAL4",
                "name": "LENGTH1"
            },
            {
                "addr": "DB14,X94.6",
                "name": "MACHINE START1"
            },
            {
                "addr": "DB260,X1104.0",
                "name": "Length_Changeover"
            }
        ]
    },
    {
        "id": "c292c19e.756e4",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.61",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "5000",
        "name": "Insulation 2",
        "vartable": [
            {
                "addr": "DB14,REAL4",
                "name": "Actual_LineSpeed2"
            },
            {
                "addr": "DB230,REAL6148",
                "name": "Actual_LineSpeed max2"
            },
            {
                "addr": "DB300,REAL620",
                "name": "CABLE_DIAMETER2"
            },
            {
                "addr": "DB10,REAL0",
                "name": "LENGTH_SET_METER2"
            },
            {
                "addr": "DB10,S610.254",
                "name": "RECIPE_NAME2"
            },
            {
                "addr": "DB10,S866.254",
                "name": "RECIPE_RECORD_NAME2"
            },
            {
                "addr": "DB11,REAL194",
                "name": "80MM_EXTRUDER_RPM_ACT2"
            },
            {
                "addr": "DB11,REAL648",
                "name": "45MM_EXTRUDER_RPM_ACT2"
            },
            {
                "addr": "MW210",
                "name": "REASON OF STOP2"
            },
            {
                "addr": "DB10,REAL4",
                "name": "LENGTH2"
            },
            {
                "addr": "DB14,X94.6",
                "name": "MACHINE START2"
            },
            {
                "addr": "DB260,X1104.0",
                "name": "Length_Changeover"
            }
        ]
    },
    {
        "id": "4a878182.02d27",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.81",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "5000",
        "name": "Insulation 3",
        "vartable": [
            {
                "addr": "DB14,REAL4",
                "name": "Actual_LineSpeed3"
            },
            {
                "addr": "DB230,REAL5598",
                "name": "Actual_LineSpeed max3"
            },
            {
                "addr": "DB300,REAL620",
                "name": "CABLE_DIAMETER3"
            },
            {
                "addr": "DB10,REAL0",
                "name": "LENGTH_SET_METER3"
            },
            {
                "addr": "DB10,S610.254",
                "name": "RECIPE_NAME3"
            },
            {
                "addr": "DB10,S866.254",
                "name": "RECIPE_RECORD_NAME3"
            },
            {
                "addr": "DB11,REAL194",
                "name": "80MM_EXTRUDER_RPM_ACT3"
            },
            {
                "addr": "DB11,REAL648",
                "name": "45MM_EXTRUDER_RPM_ACT3"
            },
            {
                "addr": "MW210",
                "name": "REASON OF STOP3"
            },
            {
                "addr": "DB10,REAL4",
                "name": "LENGTH3"
            },
            {
                "addr": "DB14,X94.6",
                "name": "MACHINE START3"
            },
            {
                "addr": "DB260,X1104.0",
                "name": "Length_Changeover"
            }
        ]
    },
    {
        "id": "ae21a4d2.0a4ac8",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.101",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Insulation 4",
        "vartable": [
            {
                "addr": "DB14,REAL4",
                "name": "Actual_LineSpeed4"
            },
            {
                "addr": "DB230,REAL5598",
                "name": "Actual_LineSpeed max4"
            },
            {
                "addr": "DB300,REAL620",
                "name": "CABLE_DIAMETER4"
            },
            {
                "addr": "DB10,REAL0",
                "name": "LENGTH_SET_METER4"
            },
            {
                "addr": "DB10,S610.254",
                "name": "RECIPE_NAME4"
            },
            {
                "addr": "DB10,S866.254",
                "name": "RECIPE_RECORD_NAME4"
            },
            {
                "addr": "DB11,REAL194",
                "name": "80MM_EXTRUDER_RPM_ACT4"
            },
            {
                "addr": "DB11,REAL648",
                "name": "45MM_EXTRUDER_RPM_ACT4"
            },
            {
                "addr": "MW210",
                "name": "REASON OF STOP4"
            },
            {
                "addr": "DB10,REAL4",
                "name": "LENGTH4"
            },
            {
                "addr": "DB14,X94.6",
                "name": "MACHINE START4"
            },
            {
                "addr": "DB260,X1104.0",
                "name": "Length_Changeover"
            }
        ]
    },
    {
        "id": "68a2bf26.1d2a",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.121",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Insulation 5",
        "vartable": [
            {
                "addr": "DB14,REAL4",
                "name": "Actual_LineSpeed5"
            },
            {
                "addr": "DB14,REAL32",
                "name": "Actual_LineSpeed max5"
            },
            {
                "addr": "DB300,REAL620",
                "name": "CABLE_DIAMETER5"
            },
            {
                "addr": "DB10,REAL0",
                "name": "LENGTH_SET_METER5"
            },
            {
                "addr": "DB10,S610.254",
                "name": "RECIPE_NAME5"
            },
            {
                "addr": "DB10,S866.254",
                "name": "RECIPE_RECORD_NAME5"
            },
            {
                "addr": "DB11,REAL198",
                "name": "80MM_EXTRUDER_RPM_ACT5"
            },
            {
                "addr": "DB11,REAL668",
                "name": "45MM_EXTRUDER_RPM_ACT5"
            },
            {
                "addr": "MW210",
                "name": "REASON OF STOP5"
            },
            {
                "addr": "DB10,REAL4",
                "name": "LENGTH5"
            },
            {
                "addr": "DB14,X94.6",
                "name": "MACHINE START5"
            },
            {
                "addr": "DB260,X1156.0",
                "name": "Length_Changeover"
            }
        ]
    },
    {
        "id": "33c3421c.5a099e",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.141",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Insulation 6",
        "vartable": [
            {
                "addr": "DB14,REAL4",
                "name": "Actual_LineSpeed6"
            },
            {
                "addr": "DB14,REAL32",
                "name": "Actual_LineSpeed max6"
            },
            {
                "addr": "DB300,REAL620",
                "name": "CABLE_DIAMETER6"
            },
            {
                "addr": "DB10,REAL0",
                "name": "LENGTH_SET_METER6"
            },
            {
                "addr": "DB10,S610.254",
                "name": "RECIPE_NAME6"
            },
            {
                "addr": "DB10,S866.254",
                "name": "RECIPE_RECORD_NAME6"
            },
            {
                "addr": "DB11,REAL198",
                "name": "80MM_EXTRUDER_RPM_ACT6"
            },
            {
                "addr": "DB11,REAL668",
                "name": "45MM_EXTRUDER_RPM_ACT6"
            },
            {
                "addr": "MW210",
                "name": "REASON OF STOP6"
            },
            {
                "addr": "DB10,REAL4",
                "name": "LENGTH6"
            },
            {
                "addr": "DB14,X94.6",
                "name": "MACHINE START6"
            },
            {
                "addr": "DB260,X1156.0",
                "name": "Length_Changeover"
            }
        ]
    },
    {
        "id": "9a57ab60.9ca2b8",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.161",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Insulation 7",
        "vartable": [
            {
                "addr": "DB14,REAL4",
                "name": "Actual_LineSpeed7"
            },
            {
                "addr": "DB14,REAL32",
                "name": "Actual_LineSpeed max7"
            },
            {
                "addr": "DB300,REAL620",
                "name": "CABLE_DIAMETER7"
            },
            {
                "addr": "DB10,REAL0",
                "name": "LENGTH_SET_METER7"
            },
            {
                "addr": "DB10,S610.254",
                "name": "RECIPE_NAME7"
            },
            {
                "addr": "DB10,S866.254",
                "name": "RECIPE_RECORD_NAME7"
            },
            {
                "addr": "DB11,REAL198",
                "name": "80MM_EXTRUDER_RPM_ACT7"
            },
            {
                "addr": "DB11,REAL668",
                "name": "45MM_EXTRUDER_RPM_ACT7"
            },
            {
                "addr": "MW210",
                "name": "REASON OF STOP7"
            },
            {
                "addr": "DB10,REAL4",
                "name": "LENGTH7"
            },
            {
                "addr": "DB14,X94.6",
                "name": "MACHINE START7"
            },
            {
                "addr": "DB260,X1156.0",
                "name": "Length_Changeover"
            }
        ]
    },
    {
        "id": "39dd4f1d.0fe3c",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.205",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "PDB1",
        "vartable": [
            {
                "addr": "DB1,REAL1100.30",
                "name": "TEST"
            }
        ]
    },
    {
        "id": "dbb74557.258908",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.206",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "PDB2",
        "vartable": [
            {
                "addr": "DB1,REAL1100.30",
                "name": "TEST"
            }
        ]
    },
    {
        "id": "41630707.fdef68",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.207",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "PDB3",
        "vartable": [
            {
                "addr": "DB1,REAL1100.30",
                "name": "TEST"
            }
        ]
    },
    {
        "id": "6b2d72c7.49f24c",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.208",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "",
        "vartable": [
            {
                "addr": "DB1,REAL1100.5",
                "name": "TEST"
            }
        ]
    },
    {
        "id": "4586ad2c.53c174",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.234",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "coiling 13-16",
        "vartable": [
            {
                "addr": "DB10,X70.1",
                "name": "Machine_Status1"
            },
            {
                "addr": "DB10,WORD60",
                "name": "Wire_Size1"
            },
            {
                "addr": "DB10,REAL20",
                "name": "Final_Length1"
            },
            {
                "addr": "DB10,REAL40",
                "name": "Production_Count1"
            },
            {
                "addr": "DB10,REAL0",
                "name": "Total_Length1"
            },
            {
                "addr": "MD30",
                "name": "Reason_of_Last_Stop1"
            },
            {
                "addr": "DB10,X70.0",
                "name": "Production_Change1"
            },
            {
                "addr": "DB10,X70.2",
                "name": "Machine_Status2"
            },
            {
                "addr": "DB10,WORD62",
                "name": "Wire_Size2"
            },
            {
                "addr": "DB10,REAL24",
                "name": "Final_Length2"
            },
            {
                "addr": "DB10,REAL44",
                "name": "Production_Count2"
            },
            {
                "addr": "DB10,REAL4",
                "name": "Total_Length2"
            },
            {
                "addr": "MD34",
                "name": "Reason_of_Last_Stop2"
            },
            {
                "addr": "DB10,X70.5",
                "name": "Production_Change2"
            },
            {
                "addr": "DB10,X70.3",
                "name": "Machine_Status3"
            },
            {
                "addr": "DB10,WORD64",
                "name": "Wire_Size3"
            },
            {
                "addr": "DB10,REAL28",
                "name": "Final_Length3"
            },
            {
                "addr": "DB10,REAL48",
                "name": "Production_Count3"
            },
            {
                "addr": "DB10,REAL8",
                "name": "Total_Length3"
            },
            {
                "addr": "MD38",
                "name": "Reason_of_Last_Stop3"
            },
            {
                "addr": "DB10,X70.6",
                "name": "Production_Change3"
            },
            {
                "addr": "DB10,X70.4",
                "name": "Machine_Status4"
            },
            {
                "addr": "DB10,WORD66",
                "name": "Wire_Size4"
            },
            {
                "addr": "DB10,REAL32",
                "name": "Final_Length4"
            },
            {
                "addr": "DB10,REAL52",
                "name": "Production_Count4"
            },
            {
                "addr": "DB10,REAL12",
                "name": "Total_Length4"
            },
            {
                "addr": "MD42",
                "name": "Reason_of_Last_Stop4"
            },
            {
                "addr": "DB10,X70.7",
                "name": "Production_Change4"
            },
            {
                "addr": "DB123,REAL0",
                "name": "13_75"
            },
            {
                "addr": "DB123,REAL4",
                "name": "13_100"
            },
            {
                "addr": "DB123,REAL8",
                "name": "13_150"
            },
            {
                "addr": "DB123,REAL12",
                "name": "13_250"
            },
            {
                "addr": "DB123,REAL16",
                "name": "13_400"
            },
            {
                "addr": "DB123,REAL20",
                "name": "13_600"
            },
            {
                "addr": "DB124,REAL0",
                "name": "14_75"
            },
            {
                "addr": "DB124,REAL4",
                "name": "14_100"
            },
            {
                "addr": "DB124,REAL8",
                "name": "14_150"
            },
            {
                "addr": "DB124,REAL12",
                "name": "14_250"
            },
            {
                "addr": "DB124,REAL16",
                "name": "14_400"
            },
            {
                "addr": "DB124,REAL20",
                "name": "14_600"
            },
            {
                "addr": "DB125,REAL0",
                "name": "15_75"
            },
            {
                "addr": "DB125,REAL4",
                "name": "15_100"
            },
            {
                "addr": "DB125,REAL8",
                "name": "15_150"
            },
            {
                "addr": "DB125,REAL12",
                "name": "15_250"
            },
            {
                "addr": "DB125,REAL16",
                "name": "15_400"
            },
            {
                "addr": "DB125,REAL20",
                "name": "15_600"
            },
            {
                "addr": "DB126,REAL0",
                "name": "16_75"
            },
            {
                "addr": "DB126,REAL4",
                "name": "16_100"
            },
            {
                "addr": "DB126,REAL8",
                "name": "16_150"
            },
            {
                "addr": "DB126,REAL12",
                "name": "16_250"
            },
            {
                "addr": "DB126,REAL16",
                "name": "16_400"
            },
            {
                "addr": "DB126,REAL20",
                "name": "16_600"
            }
        ]
    },
    {
        "id": "93c3fe7a.57b17",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.231",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Coiling 1-4",
        "vartable": [
            {
                "addr": "DB10,X70.1",
                "name": "Machine_Status1"
            },
            {
                "addr": "DB10,WORD60",
                "name": "Wire_Size1"
            },
            {
                "addr": "DB10,REAL20",
                "name": "Final_Length1"
            },
            {
                "addr": "DB10,REAL40",
                "name": "Production_Count1"
            },
            {
                "addr": "DB10,REAL0",
                "name": "Total_Length1"
            },
            {
                "addr": "MD30",
                "name": "Reason_of_Last_Stop1"
            },
            {
                "addr": "DB10,X70.0",
                "name": "Production_Change1"
            },
            {
                "addr": "DB10,X70.2",
                "name": "Machine_Status2"
            },
            {
                "addr": "DB10,WORD62",
                "name": "Wire_Size2"
            },
            {
                "addr": "DB10,REAL24",
                "name": "Final_Length2"
            },
            {
                "addr": "DB10,REAL44",
                "name": "Production_Count2"
            },
            {
                "addr": "DB10,REAL4",
                "name": "Total_Length2"
            },
            {
                "addr": "MD34",
                "name": "Reason_of_Last_Stop2"
            },
            {
                "addr": "DB10,X70.5",
                "name": "Production_Change2"
            },
            {
                "addr": "DB10,X70.3",
                "name": "Machine_Status3"
            },
            {
                "addr": "DB10,WORD64",
                "name": "Wire_Size3"
            },
            {
                "addr": "DB10,REAL28",
                "name": "Final_Length3"
            },
            {
                "addr": "DB10,REAL48",
                "name": "Production_Count3"
            },
            {
                "addr": "DB10,REAL8",
                "name": "Total_Length3"
            },
            {
                "addr": "MD38",
                "name": "Reason_of_Last_Stop3"
            },
            {
                "addr": "DB10,X70.6",
                "name": "Production_Change3"
            },
            {
                "addr": "DB10,X70.4",
                "name": "Machine_Status4"
            },
            {
                "addr": "DB10,WORD66",
                "name": "Wire_Size4"
            },
            {
                "addr": "DB10,REAL32",
                "name": "Final_Length4"
            },
            {
                "addr": "DB10,REAL52",
                "name": "Production_Count4"
            },
            {
                "addr": "DB10,REAL12",
                "name": "Total_Length4"
            },
            {
                "addr": "MD42",
                "name": "Reason_of_Last_Stop4"
            },
            {
                "addr": "DB10,X70.7",
                "name": "Production_Change4"
            },
            {
                "addr": "DB111,REAL0",
                "name": "1_75"
            },
            {
                "addr": "DB111,REAL4",
                "name": "1_100"
            },
            {
                "addr": "DB111,REAL8",
                "name": "1_150"
            },
            {
                "addr": "DB111,REAL12",
                "name": "1_250"
            },
            {
                "addr": "DB111,REAL16",
                "name": "1_400"
            },
            {
                "addr": "DB111,REAL20",
                "name": "1_600"
            },
            {
                "addr": "DB112,REAL0",
                "name": "2_75"
            },
            {
                "addr": "DB112,REAL4",
                "name": "2_100"
            },
            {
                "addr": "DB112,REAL8",
                "name": "2_150"
            },
            {
                "addr": "DB112,REAL12",
                "name": "2_250"
            },
            {
                "addr": "DB112,REAL16",
                "name": "2_400"
            },
            {
                "addr": "DB112,REAL20",
                "name": "2_600"
            },
            {
                "addr": "DB113,REAL0",
                "name": "3_75"
            },
            {
                "addr": "DB113,REAL4",
                "name": "3_100"
            },
            {
                "addr": "DB113,REAL8",
                "name": "3_150"
            },
            {
                "addr": "DB113,REAL12",
                "name": "3_250"
            },
            {
                "addr": "DB113,REAL16",
                "name": "3_400"
            },
            {
                "addr": "DB113,REAL20",
                "name": "3_600"
            },
            {
                "addr": "DB114,REAL0",
                "name": "4_75"
            },
            {
                "addr": "DB114,REAL4",
                "name": "4_100"
            },
            {
                "addr": "DB114,REAL8",
                "name": "4_150"
            },
            {
                "addr": "DB114,REAL12",
                "name": "4_250"
            },
            {
                "addr": "DB114,REAL16",
                "name": "4_400"
            },
            {
                "addr": "DB114,REAL20",
                "name": "4_600"
            }
        ]
    },
    {
        "id": "a9a7d818.c90068",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.232",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Coiling 5-8",
        "vartable": [
            {
                "addr": "DB10,X70.1",
                "name": "Machine_Status1"
            },
            {
                "addr": "DB10,WORD60",
                "name": "Wire_Size1"
            },
            {
                "addr": "DB10,REAL20",
                "name": "Final_Length1"
            },
            {
                "addr": "DB10,REAL40",
                "name": "Production_Count1"
            },
            {
                "addr": "DB10,REAL0",
                "name": "Total_Length1"
            },
            {
                "addr": "MD30",
                "name": "Reason_of_Last_Stop1"
            },
            {
                "addr": "DB10,X70.0",
                "name": "Production_Change1"
            },
            {
                "addr": "DB10,X70.2",
                "name": "Machine_Status2"
            },
            {
                "addr": "DB10,WORD62",
                "name": "Wire_Size2"
            },
            {
                "addr": "DB10,REAL24",
                "name": "Final_Length2"
            },
            {
                "addr": "DB10,REAL44",
                "name": "Production_Count2"
            },
            {
                "addr": "DB10,REAL4",
                "name": "Total_Length2"
            },
            {
                "addr": "MD34",
                "name": "Reason_of_Last_Stop2"
            },
            {
                "addr": "DB10,X70.5",
                "name": "Production_Change2"
            },
            {
                "addr": "DB10,X70.3",
                "name": "Machine_Status3"
            },
            {
                "addr": "DB10,WORD64",
                "name": "Wire_Size3"
            },
            {
                "addr": "DB10,REAL28",
                "name": "Final_Length3"
            },
            {
                "addr": "DB10,REAL48",
                "name": "Production_Count3"
            },
            {
                "addr": "DB10,REAL8",
                "name": "Total_Length3"
            },
            {
                "addr": "MD38",
                "name": "Reason_of_Last_Stop3"
            },
            {
                "addr": "DB10,X70.6",
                "name": "Production_Change3"
            },
            {
                "addr": "DB10,X70.4",
                "name": "Machine_Status4"
            },
            {
                "addr": "DB10,WORD66",
                "name": "Wire_Size4"
            },
            {
                "addr": "DB10,REAL32",
                "name": "Final_Length4"
            },
            {
                "addr": "DB10,REAL52",
                "name": "Production_Count4"
            },
            {
                "addr": "DB10,REAL12",
                "name": "Total_Length4"
            },
            {
                "addr": "MD42",
                "name": "Reason_of_Last_Stop4"
            },
            {
                "addr": "DB10,X70.7",
                "name": "Production_Change4"
            },
            {
                "addr": "DB115,REAL0",
                "name": "5_75"
            },
            {
                "addr": "DB115,REAL4",
                "name": "5_100"
            },
            {
                "addr": "DB115,REAL8",
                "name": "5_150"
            },
            {
                "addr": "DB115,REAL12",
                "name": "5_250"
            },
            {
                "addr": "DB115,REAL16",
                "name": "5_400"
            },
            {
                "addr": "DB115,REAL20",
                "name": "5_600"
            },
            {
                "addr": "DB116,REAL0",
                "name": "6_75"
            },
            {
                "addr": "DB116,REAL4",
                "name": "6_100"
            },
            {
                "addr": "DB116,REAL8",
                "name": "6_150"
            },
            {
                "addr": "DB116,REAL12",
                "name": "6_250"
            },
            {
                "addr": "DB116,REAL16",
                "name": "6_400"
            },
            {
                "addr": "DB116,REAL20",
                "name": "6_600"
            },
            {
                "addr": "DB117,REAL0",
                "name": "7_75"
            },
            {
                "addr": "DB117,REAL4",
                "name": "7_100"
            },
            {
                "addr": "DB117,REAL8",
                "name": "7_150"
            },
            {
                "addr": "DB117,REAL12",
                "name": "7_250"
            },
            {
                "addr": "DB117,REAL16",
                "name": "7_400"
            },
            {
                "addr": "DB117,REAL20",
                "name": "7_600"
            },
            {
                "addr": "DB118,REAL0",
                "name": "8_75"
            },
            {
                "addr": "DB118,REAL4",
                "name": "8_100"
            },
            {
                "addr": "DB118,REAL8",
                "name": "8_150"
            },
            {
                "addr": "DB118,REAL12",
                "name": "8_250"
            },
            {
                "addr": "DB118,REAL16",
                "name": "8_400"
            },
            {
                "addr": "DB118,REAL20",
                "name": "8_600"
            }
        ]
    },
    {
        "id": "ec53c49d.a911b8",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.233",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "Coiling 9-12",
        "vartable": [
            {
                "addr": "DB10,X70.1",
                "name": "Machine_Status1"
            },
            {
                "addr": "DB10,WORD60",
                "name": "Wire_Size1"
            },
            {
                "addr": "DB10,REAL20",
                "name": "Final_Length1"
            },
            {
                "addr": "DB10,REAL40",
                "name": "Production_Count1"
            },
            {
                "addr": "DB10,REAL0",
                "name": "Total_Length1"
            },
            {
                "addr": "MD30",
                "name": "Reason_of_Last_Stop1"
            },
            {
                "addr": "DB10,X70.0",
                "name": "Production_Change1"
            },
            {
                "addr": "DB10,X70.2",
                "name": "Machine_Status2"
            },
            {
                "addr": "DB10,WORD62",
                "name": "Wire_Size2"
            },
            {
                "addr": "DB10,REAL24",
                "name": "Final_Length2"
            },
            {
                "addr": "DB10,REAL44",
                "name": "Production_Count2"
            },
            {
                "addr": "DB10,REAL4",
                "name": "Total_Length2"
            },
            {
                "addr": "MD34",
                "name": "Reason_of_Last_Stop2"
            },
            {
                "addr": "DB10,X70.5",
                "name": "Production_Change2"
            },
            {
                "addr": "DB10,X70.3",
                "name": "Machine_Status3"
            },
            {
                "addr": "DB10,WORD64",
                "name": "Wire_Size3"
            },
            {
                "addr": "DB10,REAL28",
                "name": "Final_Length3"
            },
            {
                "addr": "DB10,REAL48",
                "name": "Production_Count3"
            },
            {
                "addr": "DB10,REAL8",
                "name": "Total_Length3"
            },
            {
                "addr": "MD38",
                "name": "Reason_of_Last_Stop3"
            },
            {
                "addr": "DB10,X70.6",
                "name": "Production_Change3"
            },
            {
                "addr": "DB10,X70.4",
                "name": "Machine_Status4"
            },
            {
                "addr": "DB10,WORD66",
                "name": "Wire_Size4"
            },
            {
                "addr": "DB10,REAL32",
                "name": "Final_Length4"
            },
            {
                "addr": "DB10,REAL52",
                "name": "Production_Count4"
            },
            {
                "addr": "DB10,REAL12",
                "name": "Total_Length4"
            },
            {
                "addr": "MD42",
                "name": "Reason_of_Last_Stop4"
            },
            {
                "addr": "DB10,X70.7",
                "name": "Production_Change4"
            },
            {
                "addr": "DB119,REAL0",
                "name": "9_75"
            },
            {
                "addr": "DB119,REAL4",
                "name": "9_100"
            },
            {
                "addr": "DB119,REAL8",
                "name": "9_150"
            },
            {
                "addr": "DB119,REAL12",
                "name": "9_250"
            },
            {
                "addr": "DB119,REAL16",
                "name": "9_400"
            },
            {
                "addr": "DB119,REAL20",
                "name": "9_600"
            },
            {
                "addr": "DB120,REAL0",
                "name": "10_75"
            },
            {
                "addr": "DB120,REAL4",
                "name": "10_100"
            },
            {
                "addr": "DB120,REAL8",
                "name": "10_150"
            },
            {
                "addr": "DB120,REAL12",
                "name": "10_250"
            },
            {
                "addr": "DB120,REAL16",
                "name": "10_400"
            },
            {
                "addr": "DB120,REAL20",
                "name": "10_600"
            },
            {
                "addr": "DB121,REAL0",
                "name": "11_75"
            },
            {
                "addr": "DB121,REAL4",
                "name": "11_100"
            },
            {
                "addr": "DB121,REAL8",
                "name": "11_150"
            },
            {
                "addr": "DB121,REAL12",
                "name": "11_250"
            },
            {
                "addr": "DB121,REAL16",
                "name": "11_400"
            },
            {
                "addr": "DB121,REAL20",
                "name": "11_600"
            },
            {
                "addr": "DB122,REAL0",
                "name": "12_75"
            },
            {
                "addr": "DB122,REAL4",
                "name": "12_100"
            },
            {
                "addr": "DB122,REAL8",
                "name": "12_150"
            },
            {
                "addr": "DB122,REAL12",
                "name": "12_250"
            },
            {
                "addr": "DB122,REAL16",
                "name": "12_400"
            },
            {
                "addr": "DB122,REAL20",
                "name": "12_600"
            }
        ]
    },
    {
        "id": "276b5669.9c170a",
        "type": "local-storage",
        "name": "Prevous Value"
    },
    {
        "id": "0e49ca065caee2b5",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.10.203",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "1000",
        "timeout": "2000",
        "name": "",
        "vartable": [
            {
                "addr": "M46.7",
                "name": "Status"
            }
        ]
    },
    {
        "id": "65259f5475f08b96",
        "type": "inject",
        "z": "fa3e27c91475fbd2",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD322NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "92a36225cb713f18"
            ]
        ]
    },
    {
        "id": "92a36225cb713f18",
        "type": "get item",
        "z": "fa3e27c91475fbd2",
        "name": "MWD322 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "d5929b677b207846",
                "d000ffd2401dbf04"
            ]
        ]
    },
    {
        "id": "d5929b677b207846",
        "type": "file in",
        "z": "fa3e27c91475fbd2",
        "name": "Read  MWD322Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 640,
        "y": 340,
        "wires": [
            [
                "87dee5d2e9ff41d7",
                "600b13699f0dbec7"
            ]
        ]
    },
    {
        "id": "87dee5d2e9ff41d7",
        "type": "function",
        "z": "fa3e27c91475fbd2",
        "name": "Save & log Shift1 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION3\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n                                            \n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                        { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                        { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n                        { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                        { dataPointId: \"1639466796553\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                        { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                        { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                        { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                     ];\n                //msg = null;\n                msg.payload = values;\n                //msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 340,
        "wires": [
            [],
            [
                "01c2b6d20220ddd0"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "d96685d22e7d8955",
        "type": "catch",
        "z": "fa3e27c91475fbd2",
        "name": "",
        "scope": [
            "d5929b677b207846"
        ],
        "uncaught": false,
        "x": 690,
        "y": 300,
        "wires": [
            [
                "87dee5d2e9ff41d7"
            ]
        ]
    },
    {
        "id": "cb34041fb2a28d48",
        "type": "remove item",
        "z": "fa3e27c91475fbd2",
        "name": "Delete MWD322 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 670,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6056c533f2ca6368",
        "type": "function",
        "z": "fa3e27c91475fbd2",
        "name": "Save & log Shift2 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL3\"].toString()},//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION3\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                    { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                    { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n                    { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                    { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                    { dataPointId: \"1639466806458\", qualityCode: \"1\", value: length1.toString()},//Spooler 2 length\n                    { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                    { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                  ];\n                //msg = null;\n                msg.payload = values;\n                //msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [],
            [
                "47b81b1eb0285a4d"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "d000ffd2401dbf04",
        "type": "file in",
        "z": "fa3e27c91475fbd2",
        "name": "Read  MWD322Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 640,
        "y": 380,
        "wires": [
            [
                "6056c533f2ca6368",
                "995fc5dc649a1890"
            ]
        ]
    },
    {
        "id": "a0dd424c341d1220",
        "type": "catch",
        "z": "fa3e27c91475fbd2",
        "name": "",
        "scope": [
            "d000ffd2401dbf04"
        ],
        "uncaught": false,
        "x": 690,
        "y": 420,
        "wires": [
            [
                "6056c533f2ca6368"
            ]
        ]
    },
    {
        "id": "47b81b1eb0285a4d",
        "type": "debug",
        "z": "fa3e27c91475fbd2",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 440,
        "wires": []
    },
    {
        "id": "01c2b6d20220ddd0",
        "type": "debug",
        "z": "fa3e27c91475fbd2",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 340,
        "wires": []
    },
    {
        "id": "600b13699f0dbec7",
        "type": "debug",
        "z": "fa3e27c91475fbd2",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "995fc5dc649a1890",
        "type": "debug",
        "z": "fa3e27c91475fbd2",
        "name": "debug 50",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 440,
        "wires": []
    },
    {
        "id": "7ed96d95306fb917",
        "type": "inject",
        "z": "fa3e27c91475fbd2",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD322NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1040,
        "y": 780,
        "wires": [
            [
                "e9e4eaa70469fd85"
            ]
        ]
    },
    {
        "id": "e9e4eaa70469fd85",
        "type": "get item",
        "z": "fa3e27c91475fbd2",
        "name": "MWD322 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1290,
        "y": 820,
        "wires": [
            [
                "75a337e33b4fa394",
                "5f798cdb3f500eee"
            ]
        ]
    },
    {
        "id": "75a337e33b4fa394",
        "type": "file in",
        "z": "fa3e27c91475fbd2",
        "name": "Read  MWD322Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 800,
        "wires": [
            [
                "68513f4eeeea2c1e"
            ]
        ]
    },
    {
        "id": "68513f4eeeea2c1e",
        "type": "function",
        "z": "fa3e27c91475fbd2",
        "name": "Save & log Shift1 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION3\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n                                            \n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                        { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                        { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n                        { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                        { dataPointId: \"1639466796553\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                        { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                        { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                        { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                     ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 800,
        "wires": [
            [],
            [
                "c09382bec78413c2"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "b28d6934d5632b04",
        "type": "catch",
        "z": "fa3e27c91475fbd2",
        "name": "",
        "scope": [
            "75a337e33b4fa394"
        ],
        "uncaught": false,
        "x": 1610,
        "y": 760,
        "wires": [
            [
                "68513f4eeeea2c1e"
            ]
        ]
    },
    {
        "id": "bf528b5769fd3dcb",
        "type": "remove item",
        "z": "fa3e27c91475fbd2",
        "name": "Delete MWD322 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1590,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "ad434af023552fe5",
        "type": "file",
        "z": "fa3e27c91475fbd2",
        "name": "Write  MWD322Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2320,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "db4e2d0c94c9182b",
        "type": "function",
        "z": "fa3e27c91475fbd2",
        "name": "Save & log Shift2 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL3\"].toString()},//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION3\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                    { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                    { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n                    { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                    { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                    { dataPointId: \"1639466806458\", qualityCode: \"1\", value: length1.toString()},//Spooler 2 length\n                    { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                    { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                  ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 840,
        "wires": [
            [],
            [
                "66af4c9c8f1df39a"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "5f798cdb3f500eee",
        "type": "file in",
        "z": "fa3e27c91475fbd2",
        "name": "Read  MWD322Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 840,
        "wires": [
            [
                "db4e2d0c94c9182b"
            ]
        ]
    },
    {
        "id": "d319d21a0f59efc2",
        "type": "file",
        "z": "fa3e27c91475fbd2",
        "name": "Write  MWD322Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2300,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "311145d52d3f7ea5",
        "type": "catch",
        "z": "fa3e27c91475fbd2",
        "name": "",
        "scope": [
            "5f798cdb3f500eee"
        ],
        "uncaught": false,
        "x": 1610,
        "y": 880,
        "wires": [
            [
                "db4e2d0c94c9182b"
            ]
        ]
    },
    {
        "id": "32c9e4f594433c94",
        "type": "inject",
        "z": "fa3e27c91475fbd2",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD322NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1040,
        "y": 820,
        "wires": [
            [
                "e9e4eaa70469fd85"
            ]
        ]
    },
    {
        "id": "599ccf64d4c193bd",
        "type": "inject",
        "z": "fa3e27c91475fbd2",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD322NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1040,
        "y": 860,
        "wires": [
            [
                "e9e4eaa70469fd85"
            ]
        ]
    },
    {
        "id": "66af4c9c8f1df39a",
        "type": "debug",
        "z": "fa3e27c91475fbd2",
        "name": "debug 51",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 900,
        "wires": []
    },
    {
        "id": "c09382bec78413c2",
        "type": "debug",
        "z": "fa3e27c91475fbd2",
        "name": "debug 52",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 800,
        "wires": []
    },
    {
        "id": "32c24e4e648b58ef",
        "type": "function",
        "z": "fa3e27c91475fbd2",
        "name": "Debug_Sp1",
        "func": "msg.payload = \n{\n    \"data\": msg.payload,\n    \"_time\" : msg._time\n    };\nmsg.filename = \"/home/unit7iiot/MWDDebugSP1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 600,
        "wires": [
            [
                "bacd5028c6042ae2"
            ]
        ]
    },
    {
        "id": "87a7ee39347c183d",
        "type": "function",
        "z": "fa3e27c91475fbd2",
        "name": "Debug_SP2",
        "func": "msg.payload =\n{\n    \"data\": msg.payload,\n    \"_time\": msg._time\n};\nmsg.filename = \"/home/unit7iiot/MWDDebugSP2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 640,
        "wires": [
            [
                "6eabb7967005aeee"
            ]
        ]
    },
    {
        "id": "bacd5028c6042ae2",
        "type": "file",
        "z": "fa3e27c91475fbd2",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2220,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "6eabb7967005aeee",
        "type": "file",
        "z": "fa3e27c91475fbd2",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2220,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "786b28575a305c6d",
        "type": "inject",
        "z": "fa3e27c91475fbd2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1550,
        "y": 460,
        "wires": [
            [
                "a584f203dfc40f5d"
            ]
        ]
    },
    {
        "id": "a584f203dfc40f5d",
        "type": "debug",
        "z": "fa3e27c91475fbd2",
        "name": "debug 53",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 460,
        "wires": []
    },
    {
        "id": "a108a1f0f7dff3af",
        "type": "mindconnect",
        "z": "24c14c0242eb8549",
        "name": "Summary",
        "configtype": "SHARED_SECRET",
        "agentconfig": "{  \"content\": {    \"baseUrl\": \"https://southgate.eu1.mindsphere.io\",    \"iat\": \"eyJraWQiOiJrZXktaWQtMSIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJpc3MiOiJTQ0kiLCJzdWIiOiJjNmYzYzk3NjZjMTg0Y2Y0OTRlYTYzMzY0ODc0Zjc0MCIsImF1ZCI6IkFJQU0iLCJpYXQiOjE2NjUzODQ3NTAsIm5iZiI6MTY2NTM4NDc1MCwiZXhwIjoxNjY1OTg5NTUwLCJqdGkiOiI4MzJlNWQzMS0xNzhiLTQ5ODEtODcwYy04NjA4ZDI5MzhmODEiLCJzY29wZSI6IklBVCIsInRlbiI6ImlvdGFwcCIsInRlbl9jdHgiOiJtYWluLXRlbmFudCIsImNsaWVudF9jcmVkZW50aWFsc19wcm9maWxlIjpbIlNIQVJFRF9TRUNSRVQiXSwic2NoZW1hcyI6WyJ1cm46c2llbWVuczptaW5kc3BoZXJlOnYxIl19.ABhD1NtwZAZnDZgubeiOA-LR1sRnqQDLak7602P9XhHcP9Mq1jhu9FnezNiquFZZ_vZWL2eoTA6ZRd-q7uvcdeT8CRq_lEzk_Zztlne2_SwB2X7KhZY-MYNW1IwdG_n4ubuW9c1J8XeshtrVFTg1uKwn53JOk2jkO7DdmQlJm9L7RE_TIxipDTEg4NZlNBIaEgdikbTMKBSDuDzJ3PIngCeN2E6dNeeXITqXvyun4m6wmNS4uFEGp5_3ZQitGOYn0JwO1FwD4GymdVyzd8GR9MDBNC3L2xnyHg8vL00pJMaqYF19kRPsw22oTxN3XandhEvXVUG2K9GhqcyADOQCIg\",    \"clientCredentialProfile\": [      \"SHARED_SECRET\"    ],    \"clientId\": \"c6f3c9766c184cf494ea63364874f740\",    \"tenant\": \"iotapp\"  },  \"expiration\": \"2022-10-17T06:52:30.000Z\"}",
        "privatekey": "",
        "model": "",
        "validate": true,
        "validateevent": true,
        "chunk": false,
        "disablekeepalive": false,
        "emitcontrol": false,
        "datalakeonly": false,
        "supressverbosity": false,
        "retry": 3,
        "parallel": 1,
        "asyncduration": 10,
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "c77a639ff6a32f65"
            ]
        ]
    },
    {
        "id": "9e4324344cd9da23",
        "type": "link in",
        "z": "24c14c0242eb8549",
        "name": "",
        "links": [
            "10cca341.2be24d",
            "14490523.17b0db",
            "37da3af4.c191b6",
            "2addf005.dc66a",
            "f585274b.717428",
            "b83af314.4c95b",
            "d2d42fea.0e793",
            "2e5de4ca.aff27c",
            "232868dd.857498",
            "444588ea.166178",
            "f3492c75.31bb2",
            "b57caac8.c60448",
            "308045a7.3a6f9a",
            "5b9563ea.fbe07c",
            "1f2b25bf.01186a",
            "67d5045c.58fa3c",
            "5995d061.c82d3",
            "94fa3d80.e3155",
            "d2dc906f.46364",
            "8a9c9819.3fd148",
            "5b785672.cf1348",
            "f5ebe124.15744",
            "16672eb5.06b3a1",
            "b26e609c.395b9",
            "10c1a1d5.cb3a7e",
            "b8142ff2.f62e",
            "f83de275.e5b4c",
            "7c689915.b8c218",
            "aa643155.c6df2",
            "3735e36.6f05b1c",
            "15bee248.5ba45e",
            "32b019d3.81bef6",
            "13efbf01.973c41",
            "616274c6.df009c",
            "f5faa49b.de9568",
            "a896e875.663108",
            "f56ea3d3.d2fbf",
            "1b196d72.a90933",
            "1eb69583.ef514a",
            "4d7f7292.5391ec",
            "89ad2b7.9d9dcd8",
            "9d86fabc.b519d8",
            "c67338.f11f4cc8",
            "2c0213f.ff0bfec",
            "36549215.dd547e",
            "7689f42.a1b2f0c",
            "13fa9df7.683d92",
            "6866c789.32f658",
            "cae02763.2da168",
            "466a3dca.92ae64",
            "539ec9828656dc45",
            "47d604072e9af094",
            "6fab1886e03f5188",
            "3e829141bdf6ea2d",
            "f147c639049851dc",
            "7d5f5db324548af4",
            "240e14a43899c2d2",
            "0f99bb66c771df20",
            "84668362d32e753a",
            "c6a09745f26b78b2",
            "5be032e2306e7beb",
            "50af620a260a6838",
            "1212fc73bbbfd335",
            "ac9f658ee42ac725",
            "691c1a69d3d75b6b",
            "8d3d543f6ffb22c0",
            "0fbbed72e070061f",
            "9a0903b6.c23dd",
            "e6066ce90cf732bd",
            "a5cbe7aa905bac19",
            "113275048b84afcd",
            "09ee7d5f1d5a3f0d",
            "e91d50634a7cc6f8",
            "e2a23003266c9602",
            "514e375e68ed5ce3",
            "c3455000e72bc117",
            "39c87186eb2a3bb9",
            "aec5fabdfadf8da2",
            "5b65361bc68a48ec",
            "9390dcd1a76b91bd",
            "2f131850ef6ed550",
            "13cf78062c4fdc2c",
            "af4964fb139ada06",
            "bfba881e6ec4cf43",
            "5b3eb04da6cf8976",
            "994e682da72ed312",
            "caec20bb10b6b1c0",
            "813ac92408bf7231",
            "94eedf55ab0acb27"
        ],
        "x": 655,
        "y": 380,
        "wires": [
            [
                "d2ed63697784bb5f",
                "b959d3eff0892938"
            ]
        ]
    },
    {
        "id": "d2ed63697784bb5f",
        "type": "q-gate",
        "z": "24c14c0242eb8549",
        "name": "",
        "controlTopic": "control",
        "defaultState": "queueing",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "25000",
        "keepNewest": false,
        "qToggle": false,
        "persist": true,
        "storeName": "memory",
        "x": 810,
        "y": 380,
        "wires": [
            [
                "a108a1f0f7dff3af"
            ]
        ]
    },
    {
        "id": "80a508765d3e1a59",
        "type": "inject",
        "z": "24c14c0242eb8549",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1.3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "trigger",
        "payloadType": "str",
        "x": 240,
        "y": 520,
        "wires": [
            [
                "55119c6ed68fd0ee"
            ]
        ]
    },
    {
        "id": "b7d2d49adbb12018",
        "type": "inject",
        "z": "24c14c0242eb8549",
        "name": "queue",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "queue",
        "payloadType": "str",
        "x": 240,
        "y": 580,
        "wires": [
            [
                "6393a84dbc149708"
            ]
        ]
    },
    {
        "id": "6393a84dbc149708",
        "type": "is online",
        "z": "24c14c0242eb8549",
        "name": "If Offline",
        "url": "www.google.com",
        "action": "2",
        "x": 410,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "55119c6ed68fd0ee",
        "type": "is online",
        "z": "24c14c0242eb8549",
        "name": "If online",
        "url": "www.google.com",
        "action": "1",
        "x": 410,
        "y": 520,
        "wires": [
            [
                "9cc1c515ad951ec8",
                "6c514f1836efcaf2"
            ]
        ]
    },
    {
        "id": "c77a639ff6a32f65",
        "type": "switch",
        "z": "24c14c0242eb8549",
        "name": "Control",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "control",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1180,
        "y": 380,
        "wires": [
            [],
            [
                "bffd58a5bcdeb41e"
            ]
        ]
    },
    {
        "id": "bffd58a5bcdeb41e",
        "type": "switch",
        "z": "24c14c0242eb8549",
        "name": "",
        "property": "_mindsphereStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 500,
        "wires": [
            [],
            [
                "d2ed63697784bb5f"
            ]
        ]
    },
    {
        "id": "0bc6328e4b30db6f",
        "type": "mindconnect",
        "z": "24c14c0242eb8549",
        "name": "1 min Logging",
        "configtype": "SHARED_SECRET",
        "agentconfig": "{  \"content\": {    \"baseUrl\": \"https://southgate.eu1.mindsphere.io\",    \"iat\": \"eyJraWQiOiJrZXktaWQtMSIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJpc3MiOiJTQ0kiLCJzdWIiOiIwMmNiNDRkYWE3NTE0MzE3OWEwNmY0NmVmNzY0ZGM3ZiIsImF1ZCI6IkFJQU0iLCJpYXQiOjE2ODE0NzQxNzIsIm5iZiI6MTY4MTQ3NDE3MiwiZXhwIjoxNjgyMDc4OTcyLCJqdGkiOiI0ZDUxZjc0OC03NzU2LTQ4YTEtOGViZi1kODI5MmM3OGZiYWUiLCJzY29wZSI6IklBVCIsInRlbiI6ImlvdGFwcCIsInRlbl9jdHgiOiJtYWluLXRlbmFudCIsImNsaWVudF9jcmVkZW50aWFsc19wcm9maWxlIjpbIlNIQVJFRF9TRUNSRVQiXSwic2NoZW1hcyI6WyJ1cm46c2llbWVuczptaW5kc3BoZXJlOnYxIl19.RwqrFlw3UN3a7uWUWtFLKpNvxdx-9awP31BORgXuyQsJlfx-C5s4iIO6kIkQL94nqeeDudMI6ls9ldMeJ5cvxhdHmI9QJRxU0-lnl742ji_NaQXH7sDDBAAhwrspYiXrjbmlMJOiLlv7OK8PlJZqVFj2GtTAJ2TmzNRT4sRviHOG5B3YmT4-RV_Y71FBwLLMR7882xxyy2rXG3o9SAxF5ibDyzYSzZX-T4b3N3bSPrn0U2xgWPk4hZAV_mW1y2gDZyl3JRlDmLoYSMTBFteDyXvCwpTVPlNGvxVL0hUE_lwA1bqMw0gtG7sZbGo-TH-k_TlI_zm60zHh79FqYf3N6g\",    \"clientCredentialProfile\": [      \"SHARED_SECRET\"    ],    \"clientId\": \"02cb44daa75143179a06f46ef764dc7f\",    \"tenant\": \"iotapp\"  },  \"expiration\": \"2023-04-21T12:09:32.000Z\"}",
        "privatekey": "",
        "model": "",
        "validate": true,
        "validateevent": true,
        "chunk": false,
        "disablekeepalive": false,
        "emitcontrol": false,
        "datalakeonly": false,
        "supressverbosity": false,
        "retry": "3",
        "parallel": 1,
        "asyncduration": 10,
        "x": 1020,
        "y": 640,
        "wires": [
            [
                "aa90f10eb73f55da"
            ]
        ]
    },
    {
        "id": "e25038b33fab932d",
        "type": "link in",
        "z": "24c14c0242eb8549",
        "name": "",
        "links": [
            "b01d8005.c419",
            "8f27af0c83cb14d7",
            "9e510f1e.90cd1",
            "5931293e.2472e8",
            "4dc3a47.346675c",
            "9bc6aa9.98f1d58",
            "2d077a41.a150b6",
            "fbc02681.12b018",
            "37b768b5.36cbe8",
            "ce96e035.59a6e",
            "42644d78.aceee4",
            "a237840.ae4758",
            "3f5d64c6.8b146c",
            "cbdcb5fd.798aa8",
            "719bec20.c29604",
            "9f1e96eb.8dfb48",
            "fb4c0ffe.86e4c",
            "1102feeb.8fa8d1",
            "b1aa134e.0209d",
            "16576336.7200bd",
            "74e5ad45.9af5c4",
            "d118603.2eac3a",
            "15e78a05.27fde6",
            "38c5ee45.e351a2",
            "98d7329.3b16ad",
            "4be229ce.bf37f8",
            "dc66113c.366fe",
            "15869704.f04169",
            "7e16a6d5.375618",
            "12fdd15.b41792f",
            "55595ccb.7f9204",
            "6852ea78.e03024",
            "3a240a0f.252036",
            "974dd045.18ec",
            "1e787f89.c3706",
            "b1c8d872.489d68",
            "c9f1e694.0c0998",
            "22b6bb14.7345b4",
            "b0b79b37.fb5d58",
            "b05a4c2.53ab4b",
            "5a5458b.6ac55a8",
            "895a6510.6babb8",
            "9e876a25.519288",
            "1e1cacbe.92d8f3",
            "c63c944a.fe6478",
            "8c692596.e98de8",
            "c3b4aa08.1676e8",
            "c9d2cad8.06cef8",
            "d3684309.65099",
            "ec13eb20.084338",
            "90d8a713.3af808",
            "bc67d6ec.ff0a78",
            "b89da008.b422a",
            "47cec2fd.762e4c",
            "2f31cf13.89278",
            "169e564c.7d6bda",
            "940a1da7.e4634",
            "7e43b982.980778",
            "9b53fb1c.ffe0e8",
            "95c424ae.314698",
            "ecf86996.179fb8",
            "9204fb4a.650b78",
            "c0f6266.3fc79d8",
            "35866a07.93fa36",
            "b8abcb6f.c83f68",
            "7de1f16.e01361",
            "2a08f52b.d0f4da",
            "dbce13ec.56105",
            "e1326efc.2f457",
            "e2650438.e8c3c8",
            "d3758f80.c1deb",
            "f573dd88.d1293",
            "19e60584.29adca",
            "cfe18ca7.f342d",
            "8803236.4c116e",
            "4903a832.0229f8",
            "7cf16084.7393c",
            "36839eff.12afe2",
            "70479586.da1f4c",
            "d1020049.781b3",
            "c915eed0.d7412",
            "25a6927c.3d3b1e",
            "77bdb639.0477b8",
            "5f3afdbc.bb5fe4",
            "fcf2e3a8.ee861",
            "555114e.3567eec",
            "fda66f36.9975d",
            "3367a15b.bf1d2e",
            "72a39179.51cd6",
            "93ea87ae.a08218",
            "311b705b.9afef",
            "590653f8.96e48c",
            "10fdc8f2.b0c0b7",
            "1f69c50d.85463b",
            "3131b387.deebec",
            "82cbd6bc.d14918",
            "28252f5e.e49ee",
            "a99c8fa8.3e294",
            "69780e74.cd2c6",
            "ad7ee564.8e8fd8",
            "f2770327.5c412",
            "629ecb46.2e8fc4",
            "672d518c.14a3d",
            "6b70f870.e75c58",
            "7201f11d.82729",
            "8719c4c4.9efb18",
            "bf6cda95.29bee8",
            "ca7557e4.3635e8",
            "19cfeeda.92e231",
            "c0c2d827.2f4ea8",
            "ac06c2ea.6b2a8",
            "8f4f85c7.8802f8",
            "19544208.221b8e",
            "82352c1e.4c75",
            "b8f58647.705608",
            "94bb0005.63c3",
            "9fa7264a.bd6ad8",
            "75f288fe.6763a8",
            "a9b80888.31edf8",
            "db3c2e7b.af68d",
            "a8ed6634.1fe558",
            "457d86d9.793cb8",
            "92f96775.fd5ef8",
            "226fc804.0444e8",
            "8acfd527.292408",
            "dc48b2f3.c8f5a",
            "8f3e446e.01dd88",
            "3e9438b2.99ce38",
            "bebccb31.96c548",
            "5327ffa3.c15dd",
            "13dc7094.5fcd2f",
            "761fb22b.9cc1ec",
            "ecf6eca4.77f15",
            "fe193938.03b4c8",
            "900ae5b2.5a3c88",
            "3bc45aac.739db6",
            "7a64baee.6349a4",
            "401a9b09.b43e84",
            "58012d62.8253c4",
            "821f0235.3ac5f",
            "865681a4.c82b4",
            "16a09bf7.035d84",
            "f5603295.4e74d",
            "ac9354c7.04f118",
            "9c8d6959.0a17f8",
            "af551bf9.6245c8",
            "232acdd3.a64252",
            "2295eaa3.6503a6",
            "cd59fffb.f7afa",
            "2b5d1e72.55a742",
            "6b78971b.8c9298",
            "3a8be4f6.220f3c",
            "808969a3.73dc08",
            "51375fd7.19e7e",
            "1f367a1.987ec86",
            "ccad19c93f3f8977",
            "c3d29e0f283e9c99",
            "43e253f328bd0533",
            "e173069f49ee1bbe",
            "17833fbebf4291c8",
            "6c0dbfef78868ab3",
            "5f65e0fecd638ffb",
            "f1a299139f3f4f2e",
            "79625b8b5c4599fc",
            "cde764805425f220",
            "4cff22a6b6d65d14",
            "95f3b169153887ea",
            "2119c3779bac1a8a",
            "bba29722c4e5c9f6",
            "9c4643d714678988",
            "4364d26898f8da40",
            "34d7fd4c4d2b3e9d",
            "48ac06239ca5bc74",
            "d58168b9c5867c41",
            "b8ee15c01cad9148",
            "1fc93ec6064158f5",
            "6fb1e63ea4814683",
            "04ca838030852c1d",
            "52a67c10d26b4af2",
            "a3efeea30c58d43c",
            "a75d0d87080b19f3",
            "87285b51a54254cc",
            "8e8a5d9d28da0992",
            "6a085cd01caac47e",
            "ecfe089e84bcd9ac",
            "f33766f58ff29415",
            "9f17a62cf5a21df9",
            "55f58b6ee7b26b39",
            "be0c648ecd7a4c2d",
            "c28e8756b293fad1",
            "e1806d45d3732e72",
            "945ef7b2223bb26e",
            "bdeca417d66d48a0",
            "13d9dde4279e4afe",
            "3aa3546f73607e37",
            "5a9b47fc65836ec7",
            "93c3111f6b790377",
            "0ade41f3f6df2085",
            "5583efb7960c6ff4",
            "4db89e2ea0af48b2",
            "60e9a2b017b37700",
            "321ce2314a309762",
            "1530dd7bd62eba5b",
            "6d961ff420447992",
            "39efdb7406aaa6fc",
            "4e40866d6a24bb9d",
            "c1bf0897c050f912",
            "8ed64c194034cb63",
            "47222e376794fe0f",
            "b73f2f648c63e7a5",
            "578ecd32b8c4fa7a",
            "8c05bc614c7409a2",
            "0e932eef1c455bfc",
            "5aba5f53e8355720",
            "17beb36d.aebf0d",
            "65db7b671b505332",
            "9eac62ce42f2da60",
            "fca98e248d76599f",
            "63f687cd.bcb8f8",
            "8f69f38f434da7d8",
            "8d1abb3de8eb0a1c",
            "ee350b3fd432d242",
            "a83723fe440e5b2c",
            "2d1b016f.85e56e",
            "f7c05c89.0338",
            "0c8aa2d6ece1caac",
            "4a753a0e.0c9134",
            "12ad328d40ea0711",
            "46515cf9.f1a914",
            "205052354de4e665",
            "d10e50c9207109fc",
            "aa31a65949d3c073",
            "262b595f53a8084d",
            "4a2fa24cc3598168",
            "af3d38ef4294de4f",
            "d0cd7dd0367738ed",
            "c0d5da081598af04",
            "102ce88a959c5aa4",
            "6073270290df1e34",
            "423f359a656f15d4",
            "5e79dd14ba590c79",
            "92086396adf53832",
            "e51e35c562fc5114",
            "aece47835c161af3",
            "40867710c057cc1e",
            "c2b533ebf9739e16",
            "7f4af97c40120b6f",
            "3c37212e6105618e",
            "8b35426568c6623f",
            "ea5ab02ef25906ae",
            "f6e0143eba4e36cd",
            "c1bb997349edbbec",
            "c795be902b5d4ad6",
            "56d7741d07a36ce7",
            "24abd6dfb7309772",
            "e69da5507606cc74",
            "2db7f61d8465f498",
            "66d61eea5c3fba60",
            "da454d50dcbc1f43"
        ],
        "x": 655,
        "y": 640,
        "wires": [
            [
                "6c514f1836efcaf2"
            ]
        ]
    },
    {
        "id": "aa90f10eb73f55da",
        "type": "switch",
        "z": "24c14c0242eb8549",
        "name": "Control",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "control",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1240,
        "y": 640,
        "wires": [
            [],
            [
                "bc0ec82291a9b3dc",
                "cb31fc9b2d6aca9a"
            ]
        ]
    },
    {
        "id": "6c514f1836efcaf2",
        "type": "q-gate",
        "z": "24c14c0242eb8549",
        "name": "",
        "controlTopic": "control",
        "defaultState": "queueing",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "25000",
        "keepNewest": false,
        "qToggle": false,
        "persist": true,
        "storeName": "memory",
        "x": 810,
        "y": 640,
        "wires": [
            [
                "0bc6328e4b30db6f"
            ]
        ]
    },
    {
        "id": "bc0ec82291a9b3dc",
        "type": "switch",
        "z": "24c14c0242eb8549",
        "name": "",
        "property": "_mindsphereStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 760,
        "wires": [
            [],
            [
                "b0a632d79ed09b20"
            ]
        ]
    },
    {
        "id": "b959d3eff0892938",
        "type": "debug",
        "z": "24c14c0242eb8549",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 340,
        "wires": []
    },
    {
        "id": "eee40374a62bb4a2",
        "type": "comment",
        "z": "24c14c0242eb8549",
        "name": "Set interval to 1.3 Sec when in use",
        "info": "",
        "x": 340,
        "y": 460,
        "wires": []
    },
    {
        "id": "9cc1c515ad951ec8",
        "type": "delay",
        "z": "24c14c0242eb8549",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 590,
        "y": 500,
        "wires": [
            [
                "d2ed63697784bb5f"
            ]
        ]
    },
    {
        "id": "7c92b3c46ee96cb2",
        "type": "inject",
        "z": "24c14c0242eb8549",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1180,
        "y": 940,
        "wires": [
            [
                "ad509efbc185e1bf"
            ]
        ]
    },
    {
        "id": "ad509efbc185e1bf",
        "type": "debug",
        "z": "24c14c0242eb8549",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 920,
        "wires": []
    },
    {
        "id": "8335c78075b3ae33",
        "type": "debug",
        "z": "24c14c0242eb8549",
        "name": "debug 58",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 740,
        "wires": []
    },
    {
        "id": "e2106d9cbb783c2e",
        "type": "inject",
        "z": "24c14c0242eb8549",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 810,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "cb31fc9b2d6aca9a",
        "type": "debug",
        "z": "24c14c0242eb8549",
        "name": "debug 61",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 580,
        "wires": []
    },
    {
        "id": "b0a632d79ed09b20",
        "type": "switch",
        "z": "24c14c0242eb8549",
        "name": "",
        "property": "_error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "the payload was not recognized",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1170,
        "y": 760,
        "wires": [
            [],
            [
                "6c514f1836efcaf2",
                "8335c78075b3ae33"
            ]
        ],
        "info": "the payload was not recognized as an event, file, datapoints, assetinfo message or scripts. See node help for proper msg.payload.formats (see msg._errorObject for all errors)"
    },
    {
        "id": "7a60ba684fce148c",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 32-1",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status2\"] == true)\n{\n    status = \"true\";\n    down= Number(global.get(\"mmw321down\") + 1);\n    global.set(\"mmw321down\",down);\n    flow.set(\"MWD321_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL2\"].toString());\n    flow.set(\"MWD321_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL2\"].toString());\n    const values = [\n    //MMW32-1\n    { dataPointId: \"DP-Line_Speed_Act00002\", qualityCode: \"1\", value: msg.payload[\"Line Speed Act2\"].toString()},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00002\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX2\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00002\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00002\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE2\"].toString() },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00002\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE2\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION2\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION2\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00002\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION2\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00002\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES2\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00002\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE2\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL2\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH2\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL2\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH2\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00008\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP2\"].toString() },//Reason of stop\n    { dataPointId: \"1627109250060\", qualityCode: \"1\", value: msg.payload[\"ANNEALER2\"].toString() },//spool1 total\n    { dataPointId: \"1629541753513\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637134363960\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL12\"].toString() },//Reason of stop\n    { dataPointId: \"1637134370126\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL22\"].toString() }//Reason of stop\n \n   ];\n    \n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1260,
        "wires": [
            [
                "8f27af0c83cb14d7"
            ]
        ]
    },
    {
        "id": "8f27af0c83cb14d7",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1395,
        "y": 1260,
        "wires": []
    },
    {
        "id": "2e537a8f0e48b6aa",
        "type": "trigger",
        "z": "53e108dc1c13c742",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1010,
        "y": 1260,
        "wires": [
            [
                "7a60ba684fce148c"
            ]
        ]
    },
    {
        "id": "80e3966f9059947d",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status2\"]",
        "topi": "topic",
        "x": 1010,
        "y": 1220,
        "wires": [
            [
                "1baed3944e86a4fa"
            ]
        ]
    },
    {
        "id": "1baed3944e86a4fa",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 32-1",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status2\"] == false)\n{\n    status = \"false\";\n    flow.set(\"MWD321_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL2\"].toString());\n    flow.set(\"MWD321_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL2\"].toString());\n    \n    const values = [\n    //MMW32-1\n    { dataPointId: \"DP-Line_Speed_Act00002\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00002\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX2\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00002\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00002\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE2\"].toString() },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00002\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE2\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION2\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION2\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00002\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION2\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00002\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES2\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00002\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE2\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL2\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH2\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL2\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00002\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH2\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00008\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP2\"].toString() },//Reason of stop\n    { dataPointId: \"1627109250060\", qualityCode: \"1\", value: msg.payload[\"ANNEALER2\"].toString() },//spool1 total\n    { dataPointId: \"1629541753513\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637134363960\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL12\"].toString() },//Reason of stop\n    { dataPointId: \"1637134370126\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL22\"].toString() }//Reason of stop\n \n   ];\n    \n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1220,
        "wires": [
            [
                "8f27af0c83cb14d7"
            ]
        ]
    },
    {
        "id": "258c6636d00b73ed",
        "type": "s7 in",
        "z": "53e108dc1c13c742",
        "endpoint": "5457d47d.44534c",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "MMW24",
        "x": 800,
        "y": 400,
        "wires": [
            [
                "069ee2eea4891a8c",
                "2977e48414c86f44",
                "c2470e91cd79fb47",
                "9abeed5cf3b40bf3",
                "404abb96ce84a5c7",
                "c10b5c02e2b9a2ba",
                "8e116078fd73dc85"
            ]
        ]
    },
    {
        "id": "01c628d7f632f781",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 24",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status1\"] == true)\n{\n    status = \"true\";\n    down= Number(global.get(\"mmw24down\") + 1);\n    global.set(\"mmw24down\",down);\n    flow.set(\"MWD24_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL1\"].toString());\n    flow.set(\"MWD24_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL1\"].toString());\n    const values = [\n    //MMW24\n    { dataPointId: \"DP-Line_Speed_Act00001\", qualityCode: \"1\", value: msg.payload[\"Line Speed Act1\"].toString()},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00001\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX1\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00001\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00001\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE1\"].toString() },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00001\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE1\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION1\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION1\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00001\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION1\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00001\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES1\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00001\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE1\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH1\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH1\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00007\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP1\"].toString() },//Reason of stop\n    { dataPointId: \"1627109152030\", qualityCode: \"1\", value: msg.payload[\"ANNEALER\"].toString() },//spool1 total\n    { dataPointId: \"1629541738065\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637131764514\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL11\"].toString() },//Reason of stop\n    { dataPointId: \"1637131771686\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL21\"].toString() }//Reason of stop\n   ];\n    //MMW32-1\n    \n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 360,
        "wires": [
            [
                "0c8aa2d6ece1caac"
            ]
        ]
    },
    {
        "id": "0c8aa2d6ece1caac",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1415,
        "y": 340,
        "wires": []
    },
    {
        "id": "069ee2eea4891a8c",
        "type": "trigger",
        "z": "53e108dc1c13c742",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1090,
        "y": 360,
        "wires": [
            [
                "01c628d7f632f781"
            ]
        ]
    },
    {
        "id": "2977e48414c86f44",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status1\"]",
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "e745d63d4dbb325f"
            ]
        ]
    },
    {
        "id": "e745d63d4dbb325f",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 24",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status1\"] == false)\n{\n    status = \"false\";\n    flow.set(\"MWD24_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL1\"].toString());\n    flow.set(\"MWD24_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL1\"].toString());\n    \n    const values = [\n    //MMW24\n    { dataPointId: \"DP-Line_Speed_Act00001\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00001\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX1\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00001\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00001\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE1\"].toString() },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00001\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE1\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION1\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION1\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00001\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION1\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00001\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES1\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00001\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE1\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH1\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00001\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH1\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00007\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP1\"].toString() },//Reason of stop\n    { dataPointId: \"1627109152030\", qualityCode: \"1\", value: msg.payload[\"ANNEALER\"].toString() },//spool1 total\n    { dataPointId: \"1629541738065\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637131764514\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL11\"].toString() },//Reason of stop\n    { dataPointId: \"1637131771686\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL21\"].toString() }//Reason of stop\n   ];\n    //MMW32-1\n    \n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 320,
        "wires": [
            [
                "0c8aa2d6ece1caac"
            ]
        ]
    },
    {
        "id": "521a56fcc530c864",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 32-2",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status3\"] == true)\n{\n    status = \"true\";\n    down= Number(global.get(\"mmw322down\") + 1);\n    global.set(\"mmw322down\",down);\n    flow.set(\"MWD322_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL3\"].toString());\n    flow.set(\"MWD322_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL3\"].toString());\n    const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-Line_Speed_Act00003\", qualityCode: \"1\", value: msg.payload[\"Line Speed Act3\"].toString()},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00003\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX3\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00003\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00003\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE3\"].toString()},//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00003\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE3\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION3\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION3\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00003\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION3\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00003\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES3\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00003\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE3\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH3\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL3\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH3\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00009\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP3\"].toString() },//Reason of stop\n    { dataPointId: \"1627109364475\", qualityCode: \"1\", value: msg.payload[\"ANNEALER3\"].toString() },//spool1 total\n    { dataPointId: \"1629541759766\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637134381783\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL13\"].toString() },//Reason of stop\n    { dataPointId: \"1637134387716\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL23\"].toString() }//Reason of stop\n \n   ];\n   \n \n\n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 2240,
        "wires": [
            [
                "12ad328d40ea0711"
            ]
        ]
    },
    {
        "id": "12ad328d40ea0711",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1495,
        "y": 2240,
        "wires": []
    },
    {
        "id": "43cfe8d26f0949a4",
        "type": "trigger",
        "z": "53e108dc1c13c742",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1110,
        "y": 2240,
        "wires": [
            [
                "521a56fcc530c864"
            ]
        ]
    },
    {
        "id": "b71ced4d05d9fa21",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status3\"]",
        "topi": "topic",
        "x": 1090,
        "y": 2200,
        "wires": [
            [
                "530495d64aafd864"
            ]
        ]
    },
    {
        "id": "530495d64aafd864",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 32-2",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status3\"] == false)\n{\n    status = \"false\";\n    flow.set(\"MWD322_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL3\"].toString());\n    flow.set(\"MWD322_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL3\"].toString());\n    \n    const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-Line_Speed_Act00003\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00003\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX3\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00003\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00003\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE3\"].toString()},//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00003\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE3\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION3\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION3\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00003\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION3\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00003\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES3\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00003\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE3\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH3\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL3\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00003\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH3\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00009\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP3\"].toString() },//Reason of stop\n    { dataPointId: \"1627109364475\", qualityCode: \"1\", value: msg.payload[\"ANNEALER3\"].toString() },//spool1 total\n    { dataPointId: \"1629541759766\", qualityCode: \"1\", value: \"0\"},\n    { dataPointId: \"1637134381783\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL13\"].toString() },//Reason of stop\n    { dataPointId: \"1637134387716\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL23\"].toString() }//Reason of stop\n \n   ];\n   \n \n\n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2200,
        "wires": [
            [
                "12ad328d40ea0711"
            ]
        ]
    },
    {
        "id": "6161a4fc23ba87a5",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 32-3",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status4\"] == true)\n{\n    status = \"true\";\n    down= Number(global.get(\"mmw323down\") + 1);\n    global.set(\"mmw323down\",down);\n    flow.set(\"MWD323_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL4\"].toString());\n    flow.set(\"MWD323_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL4\"].toString());\n    const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-Line_Speed_Act00004\", qualityCode: \"1\", value: msg.payload[\"Line Speed Act4\"].toString()},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00004\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX4\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00004\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00004\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE4\"].toString() },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00004\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE4\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION4\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION4\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00004\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION4\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00004\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES4\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00004\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE4\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL4\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH4\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL4\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH4\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00010\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP4\"].toString() },//Reason of stop\n    { dataPointId: \"1627109391001\", qualityCode: \"1\", value: msg.payload[\"ANNEALER4\"].toString() },//Reason of stop\n    { dataPointId: \"1629541767189\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637134397360\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL14\"].toString() },//Reason of stop\n    { dataPointId: \"1637134403372\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL24\"].toString() }//Reason of stop\n \n   ];\n    \n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 3080,
        "wires": [
            [
                "205052354de4e665"
            ]
        ]
    },
    {
        "id": "205052354de4e665",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1535,
        "y": 3080,
        "wires": []
    },
    {
        "id": "e054ab76e90ee0c3",
        "type": "trigger",
        "z": "53e108dc1c13c742",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1070,
        "y": 3080,
        "wires": [
            [
                "6161a4fc23ba87a5"
            ]
        ]
    },
    {
        "id": "4111d6ceb007d68e",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status4\"]",
        "topi": "topic",
        "x": 1070,
        "y": 3040,
        "wires": [
            [
                "eccb272c2d5006a8"
            ]
        ]
    },
    {
        "id": "eccb272c2d5006a8",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Multi Wire 32-3",
        "func": "var bool = [\"true\",\"false\"];\nvar status;\nvar down;\nif(msg.payload[\"Machine Status4\"] == false)\n{\n    status = \"false\";\n    \n    flow.set(\"MWD323_1_len\",msg.payload[\"SPOOLER 1 LENGTH ACTUAL4\"].toString());\n    flow.set(\"MWD323_2_len\",msg.payload[\"SPOOLER 2 LENGTH ACTUAL4\"].toString());\n    const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-Line_Speed_Act00004\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00004\", qualityCode: \"1\", value: msg.payload[\"Line Speed MAX4\"].toString() },//Line Speed max\n    { dataPointId: \"DP-Machine_status00004\", qualityCode: \"1\", value: status },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00004\", qualityCode: \"1\", value: msg.payload[\"LURICANT TEMPERATURE4\"].toString() },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00004\", qualityCode: \"1\", value: msg.payload[\"GEAR OIL TEMPERATURE4\"].toString() },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 SELECTION4\"].toString() },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 SELECTION4\"].toString() },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00004\", qualityCode: \"1\", value: msg.payload[\"ANNEALER SELECTION4\"].toString() },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00004\", qualityCode: \"1\", value: msg.payload[\"NO OF WIRES4\"].toString() },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00004\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE4\"].toString() },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LENGTH ACTUAL4\"].toString() },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 1 LAST SPOOL LENGTH4\"].toString() },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLER 2 LENGTH ACTUAL4\"].toString() },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00004\", qualityCode: \"1\", value: msg.payload[\"SPOOLERR 2 LAST SPOOL LENGTH4\"].toString() },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00010\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP4\"].toString() },//Reason of stop\n    { dataPointId: \"1627109391001\", qualityCode: \"1\", value: msg.payload[\"ANNEALER4\"].toString() },//Reason of stop\n    { dataPointId: \"1629541767189\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637134397360\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL14\"].toString() },//Reason of stop\n    { dataPointId: \"1637134403372\", qualityCode: \"1\", value: msg.payload[\"NOW_SPOOL24\"].toString() }//Reason of stop\n \n   ];\n    \n\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\nelse{\n    status = \"false\";\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 3040,
        "wires": [
            [
                "205052354de4e665"
            ]
        ]
    },
    {
        "id": "4e46824518bab825",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "06:59",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "260498cd82aaaa5d",
                "bad4fd1ad5ec04e7",
                "3e84fa20add3f567",
                "da013658e1922d90"
            ]
        ]
    },
    {
        "id": "49993c66e9f99e7c",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "14.59",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "260498cd82aaaa5d",
                "bad4fd1ad5ec04e7",
                "3e84fa20add3f567",
                "da013658e1922d90"
            ]
        ]
    },
    {
        "id": "266a211757633354",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "22:59",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "260498cd82aaaa5d",
                "bad4fd1ad5ec04e7",
                "3e84fa20add3f567",
                "da013658e1922d90"
            ]
        ]
    },
    {
        "id": "3e84fa20add3f567",
        "type": "adv ping",
        "z": "53e108dc1c13c742",
        "name": "MMW32-2",
        "host": "192.168.10.203",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "2f2be76dc8eac3dc"
            ]
        ]
    },
    {
        "id": "260498cd82aaaa5d",
        "type": "adv ping",
        "z": "53e108dc1c13c742",
        "name": "MMW24",
        "host": "192.168.10.201",
        "x": 340,
        "y": 40,
        "wires": [
            [
                "d7d2f7da75b5fc75"
            ]
        ]
    },
    {
        "id": "bad4fd1ad5ec04e7",
        "type": "adv ping",
        "z": "53e108dc1c13c742",
        "name": "MMW32-1",
        "host": "192.168.10.202",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "1d609579050b15ee"
            ]
        ]
    },
    {
        "id": "da013658e1922d90",
        "type": "adv ping",
        "z": "53e108dc1c13c742",
        "name": "MMW32-3",
        "host": "192.168.10.204",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "6b04a3a939d4a515"
            ]
        ]
    },
    {
        "id": "d7d2f7da75b5fc75",
        "type": "switch",
        "z": "53e108dc1c13c742",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1d609579050b15ee",
        "type": "switch",
        "z": "53e108dc1c13c742",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 527.765625,
        "y": 103.75,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2f2be76dc8eac3dc",
        "type": "switch",
        "z": "53e108dc1c13c742",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b04a3a939d4a515",
        "type": "switch",
        "z": "53e108dc1c13c742",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fc3940c42ca22476",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD323\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD323Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 3180,
        "wires": [
            [
                "90a071ba04ebd119"
            ]
        ]
    },
    {
        "id": "d7e013469b87d29f",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "d52ba09b6ac0a659"
        ],
        "uncaught": false,
        "x": 2070,
        "y": 3140,
        "wires": [
            [
                "54579afc08a72cb1"
            ]
        ]
    },
    {
        "id": "d52ba09b6ac0a659",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD323Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1860,
        "y": 3180,
        "wires": [
            [
                "54579afc08a72cb1"
            ]
        ]
    },
    {
        "id": "54579afc08a72cb1",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NO OF WIRES4\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL4\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n     ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION4\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NO OF WIRES4\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL4\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 3180,
        "wires": [
            [
                "3c308a8154cf6ba4"
            ],
            [
                "5b3eb04da6cf8976"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "90a071ba04ebd119",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD323 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1330,
        "y": 3180,
        "wires": [
            [
                "4a36902f256d47c4"
            ]
        ]
    },
    {
        "id": "4a36902f256d47c4",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD323\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION4\"] === true){\n        var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD323\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 3180,
        "wires": [
            [
                "60f43abc4fccba75"
            ],
            [
                "d52ba09b6ac0a659"
            ]
        ]
    },
    {
        "id": "60f43abc4fccba75",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD323 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1850,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "3c308a8154cf6ba4",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD323Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2440,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "5c1b578623a4eb5b",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NO OF WIRES4\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL4\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n       ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION4\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NO OF WIRES4\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL4\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 3260,
        "wires": [
            [
                "6c6b9990a21998b8"
            ],
            [
                "5b3eb04da6cf8976"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "b65d21eb907f4345",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD323\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD323Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 3260,
        "wires": [
            [
                "8b77be0bf3641395"
            ]
        ]
    },
    {
        "id": "8b77be0bf3641395",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD323 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1330,
        "y": 3260,
        "wires": [
            [
                "0e0f52ae123f9033"
            ]
        ]
    },
    {
        "id": "0e0f52ae123f9033",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD323\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 2 SELECTION4\"] === true){\n       var currentlen = Number(current[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n       var previouslen = Number(previous[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD323\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 3260,
        "wires": [
            [
                "34202c60da17b788"
            ],
            [
                "25831fff7a042da8"
            ]
        ]
    },
    {
        "id": "25831fff7a042da8",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD323Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1860,
        "y": 3260,
        "wires": [
            [
                "5c1b578623a4eb5b"
            ]
        ]
    },
    {
        "id": "34202c60da17b788",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD323 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1850,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "f1c00e94526944ee",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "25831fff7a042da8"
        ],
        "uncaught": false,
        "x": 2070,
        "y": 3220,
        "wires": [
            [
                "5c1b578623a4eb5b"
            ]
        ]
    },
    {
        "id": "6c6b9990a21998b8",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD323Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2440,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "07cef677aaf19810",
        "type": "s7 in",
        "z": "53e108dc1c13c742",
        "endpoint": "4a2ef312.10170c",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "",
        "x": 820,
        "y": 3120,
        "wires": [
            [
                "b65d21eb907f4345",
                "fc3940c42ca22476",
                "4111d6ceb007d68e",
                "e054ab76e90ee0c3",
                "d2f751a7b6185ad3",
                "599ff0d40d3e6384",
                "33885c4a8e16b618"
            ]
        ]
    },
    {
        "id": "5b3eb04da6cf8976",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2685,
        "y": 3200,
        "wires": []
    },
    {
        "id": "460f22516eb13587",
        "type": "s7 in",
        "z": "53e108dc1c13c742",
        "endpoint": "b1c26c5b.ed17c",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "MMW32-2",
        "x": 840,
        "y": 2300,
        "wires": [
            [
                "63ecc1359a806660",
                "a423ea6a43a5735b",
                "b71ced4d05d9fa21",
                "43cfe8d26f0949a4",
                "26feeec5a5b4e7ca",
                "6d0fcda5496ee278",
                "7c8717e0e5c3a6d7"
            ]
        ]
    },
    {
        "id": "63ecc1359a806660",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD322\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD322Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2340,
        "wires": [
            [
                "9c5a426ab7228f71"
            ]
        ]
    },
    {
        "id": "0d8b388f1acfc1f9",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "5d27d84972428c54"
        ],
        "uncaught": false,
        "x": 2090,
        "y": 2300,
        "wires": [
            [
                "daf3226c33277049"
            ]
        ]
    },
    {
        "id": "5d27d84972428c54",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD322Shift1",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1880,
        "y": 2340,
        "wires": [
            [
                "daf3226c33277049"
            ]
        ]
    },
    {
        "id": "daf3226c33277049",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NO OF WIRES3\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION3\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NO OF WIRES3\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL3\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 2340,
        "wires": [
            [
                "24f9f63d560d12fe"
            ],
            [
                "994e682da72ed312"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "9c5a426ab7228f71",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD322 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1350,
        "y": 2340,
        "wires": [
            [
                "30023fc949f3d7cc"
            ]
        ]
    },
    {
        "id": "30023fc949f3d7cc",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD322\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION3\"] === true){\n        var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD322\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 2340,
        "wires": [
            [
                "4280f7ccb0174ba1"
            ],
            [
                "5d27d84972428c54"
            ]
        ]
    },
    {
        "id": "4280f7ccb0174ba1",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD322 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1870,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "24f9f63d560d12fe",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD322Shift1",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2460,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "37529c762d81849e",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NO OF WIRES3\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL3\"].toString()},//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION3\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NO OF WIRES3\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL3\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 2420,
        "wires": [
            [
                "6404d4f37bb73d87"
            ],
            [
                "994e682da72ed312"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "a423ea6a43a5735b",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD322\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD322Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2420,
        "wires": [
            [
                "4436767a26595b34"
            ]
        ]
    },
    {
        "id": "4436767a26595b34",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD322 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1350,
        "y": 2420,
        "wires": [
            [
                "8b45851392ef3361"
            ]
        ]
    },
    {
        "id": "8b45851392ef3361",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD322\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 2 SELECTION3\"] === true){\n        var currentlen = Number(current[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n        var previouslen = Number(previous[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD322\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 2420,
        "wires": [
            [
                "3a0064827fa065d3"
            ],
            [
                "3e6cd9a80a9c6615"
            ]
        ]
    },
    {
        "id": "3e6cd9a80a9c6615",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD322Shift2",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1880,
        "y": 2420,
        "wires": [
            [
                "37529c762d81849e"
            ]
        ]
    },
    {
        "id": "3a0064827fa065d3",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD322 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1870,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "c73fbdf691024a10",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "3e6cd9a80a9c6615"
        ],
        "uncaught": false,
        "x": 2090,
        "y": 2380,
        "wires": [
            [
                "37529c762d81849e"
            ]
        ]
    },
    {
        "id": "6404d4f37bb73d87",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD322Shift2",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2460,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "994e682da72ed312",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2695,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d430e821f6cdf7d9",
        "type": "comment",
        "z": "53e108dc1c13c742",
        "name": "MWD 321 Testing",
        "info": "",
        "x": 1420,
        "y": 1320,
        "wires": []
    },
    {
        "id": "2d693c5b35267079",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD321\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD321Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1420,
        "wires": [
            [
                "def9e0e5b465879f"
            ]
        ]
    },
    {
        "id": "6c106f9cc834da0e",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "b5f46d0a4f812a37"
        ],
        "uncaught": false,
        "x": 1980,
        "y": 1380,
        "wires": [
            [
                "94594d00b706f273"
            ]
        ]
    },
    {
        "id": "b5f46d0a4f812a37",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD321Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1770,
        "y": 1420,
        "wires": [
            [
                "94594d00b706f273"
            ]
        ]
    },
    {
        "id": "94594d00b706f273",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NO OF WIRES2\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL2\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from previous spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION2\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NO OF WIRES2\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL2\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 1420,
        "wires": [
            [
                "e96059647c154c1c"
            ],
            [
                "caec20bb10b6b1c0"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "def9e0e5b465879f",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD321 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1240,
        "y": 1420,
        "wires": [
            [
                "723ffc34b06ab712"
            ]
        ]
    },
    {
        "id": "723ffc34b06ab712",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD321\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION2\"] === true){\n        var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD321\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1420,
        "wires": [
            [
                "c913e859ae1bbb65"
            ],
            [
                "b5f46d0a4f812a37"
            ]
        ]
    },
    {
        "id": "c913e859ae1bbb65",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD321 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1760,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "e96059647c154c1c",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD321Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2350,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "dec229f7e75f3cc5",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NO OF WIRES2\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL2\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION2\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NO OF WIRES2\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL2\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 1500,
        "wires": [
            [
                "08bfffba711f4e1e"
            ],
            [
                "caec20bb10b6b1c0"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "9d5c4120b50c28d6",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD321\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD321Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1500,
        "wires": [
            [
                "8794b05f1afbe6cd"
            ]
        ]
    },
    {
        "id": "8794b05f1afbe6cd",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD321 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1240,
        "y": 1500,
        "wires": [
            [
                "7ac811c087bdea78"
            ]
        ]
    },
    {
        "id": "7ac811c087bdea78",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD321\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 2 SELECTION2\"] === true){\n       var currentlen = Number(current[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n       var previouslen = Number(previous[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD321\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1500,
        "wires": [
            [
                "06d8e2d017365e9a"
            ],
            [
                "73af84a8003a4a27"
            ]
        ]
    },
    {
        "id": "73af84a8003a4a27",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD321Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1770,
        "y": 1500,
        "wires": [
            [
                "dec229f7e75f3cc5"
            ]
        ]
    },
    {
        "id": "06d8e2d017365e9a",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD321 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1760,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "c5b84345ba653b4c",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "73af84a8003a4a27"
        ],
        "uncaught": false,
        "x": 1980,
        "y": 1460,
        "wires": [
            [
                "dec229f7e75f3cc5"
            ]
        ]
    },
    {
        "id": "08bfffba711f4e1e",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD321Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2350,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "8298291af8121b29",
        "type": "s7 in",
        "z": "53e108dc1c13c742",
        "endpoint": "dd59cd5.02de73",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "",
        "x": 800,
        "y": 1360,
        "wires": [
            [
                "9d5c4120b50c28d6",
                "2d693c5b35267079",
                "80e3966f9059947d",
                "2e537a8f0e48b6aa",
                "58d2b0083f24fa0e",
                "3c268dfec710014c",
                "11a3276c19d38114"
            ]
        ]
    },
    {
        "id": "caec20bb10b6b1c0",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2615,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9dd93aa506fd82fd",
        "type": "comment",
        "z": "53e108dc1c13c742",
        "name": "MWD 323 Testing",
        "info": "",
        "x": 1440,
        "y": 420,
        "wires": []
    },
    {
        "id": "c2470e91cd79fb47",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "acda9fa09694976c"
            ]
        ]
    },
    {
        "id": "9db48d84f682145f",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "18e858c49a61380d"
        ],
        "uncaught": false,
        "x": 1980,
        "y": 440,
        "wires": [
            [
                "50babe8a6beb4e95"
            ]
        ]
    },
    {
        "id": "18e858c49a61380d",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD24Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1820,
        "y": 480,
        "wires": [
            [
                "50babe8a6beb4e95"
            ]
        ]
    },
    {
        "id": "50babe8a6beb4e95",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NO OF WIRES1\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL1\"].toString()  },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\"},//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from previous spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NO OF WIRES1\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n         ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL1\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 480,
        "wires": [
            [
                "0c5ca06fab9795b2"
            ],
            [
                "813ac92408bf7231"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "acda9fa09694976c",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD24 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1300,
        "y": 480,
        "wires": [
            [
                "a3254724f83d4ac2"
            ]
        ]
    },
    {
        "id": "a3254724f83d4ac2",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD24\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION1\"] === true){\n        var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD24\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 480,
        "wires": [
            [
                "0c73dcc122d55c07"
            ],
            [
                "18e858c49a61380d"
            ]
        ]
    },
    {
        "id": "0c73dcc122d55c07",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD24 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1800,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0c5ca06fab9795b2",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD24Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2370,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "36c0a359f4a5260f",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NO OF WIRES1\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\"},//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL1\"].toString()  },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NO OF WIRES1\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n              ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL1\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 560,
        "wires": [
            [
                "e48ec50854d79073"
            ],
            [
                "813ac92408bf7231"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "9abeed5cf3b40bf3",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 560,
        "wires": [
            [
                "0424867ac077b7cb"
            ]
        ]
    },
    {
        "id": "0424867ac077b7cb",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD24 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1300,
        "y": 560,
        "wires": [
            [
                "dd8afcb08857becc"
            ]
        ]
    },
    {
        "id": "dd8afcb08857becc",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD24\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 2 SELECTION1\"] === true){\n       var currentlen = Number(current[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n       var previouslen = Number(previous[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD24\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 560,
        "wires": [
            [
                "567897f5053b683b"
            ],
            [
                "4b2108f1ed16e396"
            ]
        ]
    },
    {
        "id": "4b2108f1ed16e396",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read MWD24Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1820,
        "y": 560,
        "wires": [
            [
                "36c0a359f4a5260f"
            ]
        ]
    },
    {
        "id": "567897f5053b683b",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "Set MWD24 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1800,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "b4ceb7e6fb336362",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "4b2108f1ed16e396"
        ],
        "uncaught": false,
        "x": 1980,
        "y": 520,
        "wires": [
            [
                "36c0a359f4a5260f"
            ]
        ]
    },
    {
        "id": "e48ec50854d79073",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write MWD24Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2370,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "813ac92408bf7231",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2665,
        "y": 520,
        "wires": []
    },
    {
        "id": "222446166843ed43",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD24Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD24Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD24NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1540,
        "y": 220,
        "wires": [
            [
                "158e0a90140d0baf"
            ]
        ]
    },
    {
        "id": "158e0a90140d0baf",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD24 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1780,
        "y": 260,
        "wires": [
            [
                "d2d3875744456795",
                "bf17f1d7408568b5",
                "d1d37ce07d5d9f10"
            ]
        ]
    },
    {
        "id": "d2d3875744456795",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD24Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2060,
        "y": 240,
        "wires": [
            [
                "08ab2b72436d0ce1"
            ]
        ]
    },
    {
        "id": "08ab2b72436d0ce1",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift1 Lenght (C)",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NO OF WIRES1\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION1\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                     { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NO OF WIRES1\"].toString() },//No of Wire\n                     { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n                     { dataPointId: \"1639464280864\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                     { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                     { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n                //msg = null;\n                msg.payload = values;\n                //Uncommented msg._time by BKV\n                msg._time = new Date(); //Mindsphere might consider timestamp as unique, so to differentiate btw SP1 and SP2 both actual times are taken.\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 240,
        "wires": [
            [
                "33829f1b988bad50"
            ],
            [
                "0c60d7632d5a0603",
                "813ac92408bf7231"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "ac36371765a1bfca",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "d2d3875744456795"
        ],
        "uncaught": false,
        "x": 2110,
        "y": 200,
        "wires": [
            [
                "08ab2b72436d0ce1"
            ]
        ]
    },
    {
        "id": "bf17f1d7408568b5",
        "type": "remove item",
        "z": "53e108dc1c13c742",
        "name": "Delete MWD24 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2090,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "33829f1b988bad50",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD24Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "404abb96ce84a5c7",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"MWD24NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "6680c8e628b379f7",
                "658a4dcba0803eeb"
            ]
        ]
    },
    {
        "id": "6680c8e628b379f7",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "MWD24 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1260,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a1403f49dfb279dd",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift2 Lenght (C)",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NO OF WIRES1\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    //Changed uncommented msg._time by BKV\n    msg._time = new Date(); //Mindsphere might consider timestamp as unique, so to differentiate btw SP1 and SP2 both actual times are taken.\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION1\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                     { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NO OF WIRES1\"].toString() },//No of Wire\n                     { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n                     { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                     { dataPointId: \"1639464288450\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                     { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n          ];\n                //msg = null;\n                msg.payload = values;\n                //msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 280,
        "wires": [
            [
                "815b9f7fe7b2239f"
            ],
            [
                "6c6e0204526c4729",
                "813ac92408bf7231"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "b457ab18a13f7fc5",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD24Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2060,
        "y": 280,
        "wires": [
            [
                "a1403f49dfb279dd"
            ]
        ]
    },
    {
        "id": "815b9f7fe7b2239f",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD24Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2590,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5a7eb9af9be0a658",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "b457ab18a13f7fc5"
        ],
        "uncaught": false,
        "x": 2110,
        "y": 320,
        "wires": [
            [
                "a1403f49dfb279dd"
            ]
        ]
    },
    {
        "id": "195c392ccfd48f2d",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD24Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD24Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD24NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1540,
        "y": 260,
        "wires": [
            [
                "158e0a90140d0baf"
            ]
        ]
    },
    {
        "id": "bf407195cdbfb4b2",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD24Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD24Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD24NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1540,
        "y": 300,
        "wires": [
            [
                "158e0a90140d0baf"
            ]
        ]
    },
    {
        "id": "6c6e0204526c4729",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 340,
        "wires": []
    },
    {
        "id": "0c60d7632d5a0603",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 240,
        "wires": []
    },
    {
        "id": "d2f751a7b6185ad3",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 2960,
        "wires": []
    },
    {
        "id": "9d16e3fb449f3eae",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD321Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD321Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD321NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1560,
        "y": 1160,
        "wires": [
            [
                "9862f8eafe8202b0"
            ]
        ]
    },
    {
        "id": "9862f8eafe8202b0",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD321 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1810,
        "y": 1200,
        "wires": [
            [
                "8e3556b2575737f3",
                "b154ac51c3fe170c",
                "a22e58334559b02c"
            ]
        ]
    },
    {
        "id": "8e3556b2575737f3",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD321Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2080,
        "y": 1180,
        "wires": [
            [
                "f6144b4a5ae4397e"
            ]
        ]
    },
    {
        "id": "f6144b4a5ae4397e",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift1 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NO OF WIRES2\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL2\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n          ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION2\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                     { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NO OF WIRES2\"].toString() },//No of Wire\n                     { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n                     { dataPointId: \"1639466733175\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                     { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                     { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n         ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1180,
        "wires": [
            [
                "1eed9250aeeee806"
            ],
            [
                "b2f5079116a45e39",
                "caec20bb10b6b1c0",
                "ef3ec70c5aa9a4ec"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "b81feadd6d3f0150",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "8e3556b2575737f3"
        ],
        "uncaught": false,
        "x": 2130,
        "y": 1140,
        "wires": [
            [
                "f6144b4a5ae4397e"
            ]
        ]
    },
    {
        "id": "b154ac51c3fe170c",
        "type": "remove item",
        "z": "53e108dc1c13c742",
        "name": "Delete MWD321 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2110,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "1eed9250aeeee806",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD321Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2620,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "623027d3a55d0775",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift2 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NO OF WIRES2\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL2\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION2\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                     { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NO OF WIRES2\"].toString() },//No of Wire\n                     { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n                     { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\"},//Spooler 1 Length\n                     { dataPointId: \"1639466740414\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                     { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n          ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1220,
        "wires": [
            [
                "78420f9a1e3fce22"
            ],
            [
                "4c7f2212ce44c9e5",
                "caec20bb10b6b1c0",
                "a06a30a6a3d0c95c"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "bb6c377ec7aeb793",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD321Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2080,
        "y": 1220,
        "wires": [
            [
                "623027d3a55d0775"
            ]
        ]
    },
    {
        "id": "78420f9a1e3fce22",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD321Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2620,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "4f58c05781ce54fe",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "bb6c377ec7aeb793"
        ],
        "uncaught": false,
        "x": 2130,
        "y": 1260,
        "wires": [
            [
                "623027d3a55d0775"
            ]
        ]
    },
    {
        "id": "c3b6638a96e0fbf7",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD321Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD321Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD321NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1560,
        "y": 1200,
        "wires": [
            [
                "9862f8eafe8202b0"
            ]
        ]
    },
    {
        "id": "7c0f5a967f6cb01e",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD321Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD321Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD321NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1560,
        "y": 1240,
        "wires": [
            [
                "9862f8eafe8202b0"
            ]
        ]
    },
    {
        "id": "4c7f2212ce44c9e5",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b2f5079116a45e39",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 1180,
        "wires": []
    },
    {
        "id": "58d2b0083f24fa0e",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"MWD321NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1180,
        "wires": [
            [
                "018df31e4afb6699"
            ]
        ]
    },
    {
        "id": "018df31e4afb6699",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "MWD321 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1290,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "b3996310e184752b",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD322NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 2140,
        "wires": [
            [
                "1a7f6ad531737a3c"
            ]
        ]
    },
    {
        "id": "1a7f6ad531737a3c",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD322 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1910,
        "y": 2180,
        "wires": [
            [
                "9bc4d06c38406d6a",
                "a5220dbda4934e96",
                "192322782ecc44a8"
            ]
        ]
    },
    {
        "id": "9bc4d06c38406d6a",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD322Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2180,
        "y": 2160,
        "wires": [
            [
                "100c6b7e02553751"
            ]
        ]
    },
    {
        "id": "100c6b7e02553751",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift1 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NO OF WIRES3\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION3\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n                                            \n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                        { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NO OF WIRES3\"].toString() },//No of Wire\n                        { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                        { dataPointId: \"1639466796553\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                        { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                        { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                        { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                     ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 2160,
        "wires": [
            [
                "794037189c4211fa"
            ],
            [
                "096a23fdc29d81ef",
                "994e682da72ed312",
                "1114a3cb4f2ef9cd"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "25a6a7a0ddd9de22",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "9bc4d06c38406d6a"
        ],
        "uncaught": false,
        "x": 2230,
        "y": 2120,
        "wires": [
            [
                "100c6b7e02553751"
            ]
        ]
    },
    {
        "id": "a5220dbda4934e96",
        "type": "remove item",
        "z": "53e108dc1c13c742",
        "name": "Delete MWD322 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2210,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "794037189c4211fa",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD322Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2720,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "9c3c9d0dd492bd82",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift2 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NO OF WIRES3\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL3\"].toString()},//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION3\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                    { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NO OF WIRES3\"].toString() },//No of Wire\n                    { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                    { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                    { dataPointId: \"1639466806458\", qualityCode: \"1\", value: length1.toString()},//Spooler 2 length\n                    { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                    { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                  ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 2200,
        "wires": [
            [
                "5d57e0a9a28be135"
            ],
            [
                "7c799594616df414",
                "994e682da72ed312",
                "179e27ce164838ef"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "1dbfbcdfdb3f9ea6",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD322Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2180,
        "y": 2200,
        "wires": [
            [
                "9c3c9d0dd492bd82"
            ]
        ]
    },
    {
        "id": "5d57e0a9a28be135",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD322Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2720,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "5263d1daba451290",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "1dbfbcdfdb3f9ea6"
        ],
        "uncaught": false,
        "x": 2230,
        "y": 2240,
        "wires": [
            [
                "9c3c9d0dd492bd82"
            ]
        ]
    },
    {
        "id": "ed475403c0b0ed4e",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD322NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 2180,
        "wires": [
            [
                "1a7f6ad531737a3c"
            ]
        ]
    },
    {
        "id": "2f56f72a6b7619ea",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD322NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 2220,
        "wires": [
            [
                "1a7f6ad531737a3c"
            ]
        ]
    },
    {
        "id": "7c799594616df414",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2680,
        "y": 2240,
        "wires": []
    },
    {
        "id": "096a23fdc29d81ef",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2680,
        "y": 2160,
        "wires": []
    },
    {
        "id": "26feeec5a5b4e7ca",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"MWD322NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 2160,
        "wires": [
            [
                "9789ee54d0a7e68e"
            ]
        ]
    },
    {
        "id": "9789ee54d0a7e68e",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "MWD322 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1390,
        "y": 2160,
        "wires": [
            [
                "7dbd2cc94c975d69"
            ]
        ]
    },
    {
        "id": "6d0fcda5496ee278",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2120,
        "wires": []
    },
    {
        "id": "b15aa6be45163bcb",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD323Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD323Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD323NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1640,
        "y": 2960,
        "wires": [
            [
                "baf1f7f4273bfd38"
            ]
        ]
    },
    {
        "id": "baf1f7f4273bfd38",
        "type": "get item",
        "z": "53e108dc1c13c742",
        "name": "MWD323 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1890,
        "y": 3000,
        "wires": [
            [
                "f4e34aedab4e764e",
                "eaca90029e0e1abf",
                "344aa8f19029e7c0"
            ]
        ]
    },
    {
        "id": "f4e34aedab4e764e",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD323Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2160,
        "y": 2980,
        "wires": [
            [
                "253a1099d0165d40"
            ]
        ]
    },
    {
        "id": "253a1099d0165d40",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift1 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NO OF WIRES4\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL4\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION4\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                     { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NO OF WIRES4\"].toString() },//No of Wire\n                     { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n                     { dataPointId: \"1639466848841\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                     { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                     { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 2980,
        "wires": [
            [
                "337e16ea097e04de"
            ],
            [
                "93ac7cb60a0c3e54",
                "5b3eb04da6cf8976"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "77dd38a889ebd233",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "f4e34aedab4e764e"
        ],
        "uncaught": false,
        "x": 2210,
        "y": 2940,
        "wires": [
            [
                "253a1099d0165d40"
            ]
        ]
    },
    {
        "id": "eaca90029e0e1abf",
        "type": "remove item",
        "z": "53e108dc1c13c742",
        "name": "Delete MWD323 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2190,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "337e16ea097e04de",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD323Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2700,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "7e3466dbd80a57f0",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Save & log Shift2 Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NO OF WIRES4\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\"},//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL4\"].toString()  },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n     ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION4\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                     { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NO OF WIRES4\"].toString() },//No of Wire\n                     { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n                     { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                     { dataPointId: \"1639466866192\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                     { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 3020,
        "wires": [
            [
                "f89ecf0d1b7ce9eb"
            ],
            [
                "af567d4bbbacd87a",
                "5b3eb04da6cf8976"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "49188f50ed5f98fe",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD323Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2160,
        "y": 3020,
        "wires": [
            [
                "7e3466dbd80a57f0"
            ]
        ]
    },
    {
        "id": "f89ecf0d1b7ce9eb",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "Write  MWD323Shift2",
        "filename": "filename2",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2700,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "0edf551f216ca2cb",
        "type": "catch",
        "z": "53e108dc1c13c742",
        "name": "",
        "scope": [
            "49188f50ed5f98fe"
        ],
        "uncaught": false,
        "x": 2210,
        "y": 3060,
        "wires": [
            [
                "7e3466dbd80a57f0"
            ]
        ]
    },
    {
        "id": "332077d5a6f7a786",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD323Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD323Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD323NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1640,
        "y": 3000,
        "wires": [
            [
                "baf1f7f4273bfd38"
            ]
        ]
    },
    {
        "id": "b3e2563a2b522164",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD323Shift1.js",
                "vt": "str"
            },
            {
                "p": "filename2",
                "v": "/home/unit7iiot/node-red/MWD323Shift2.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"MWD323NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "57 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1640,
        "y": 3040,
        "wires": [
            [
                "baf1f7f4273bfd38"
            ]
        ]
    },
    {
        "id": "af567d4bbbacd87a",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2660,
        "y": 3080,
        "wires": []
    },
    {
        "id": "93ac7cb60a0c3e54",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2660,
        "y": 2980,
        "wires": []
    },
    {
        "id": "599ff0d40d3e6384",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"MWD323NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3000,
        "wires": [
            [
                "2ae2b6f5aa627138"
            ]
        ]
    },
    {
        "id": "2ae2b6f5aa627138",
        "type": "set item",
        "z": "53e108dc1c13c742",
        "name": "MWD323 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1370,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "658a4dcba0803eeb",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 42",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 140,
        "wires": []
    },
    {
        "id": "ef3ec70c5aa9a4ec",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Debug_Sp1",
        "func": "msg.payload = \n{\n    \"data\": msg.payload,\n    \"_time\" : msg._time\n    };\nmsg.filename = \"/home/unit7iiot/MWD322DebugSP1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 980,
        "wires": [
            [
                "6f845d7b126f5906"
            ]
        ]
    },
    {
        "id": "a06a30a6a3d0c95c",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Debug_SP2",
        "func": "msg.payload =\n{\n    \"data\": msg.payload,\n    \"_time\": msg._time\n};\nmsg.filename = \"/home/unit7iiot/MWD322DebugSP2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 1020,
        "wires": [
            [
                "4eafc9cbe07d97e4"
            ]
        ]
    },
    {
        "id": "6f845d7b126f5906",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2600,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "4eafc9cbe07d97e4",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2600,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "5dfcf49548181d9e",
        "type": "file in",
        "z": "53e108dc1c13c742",
        "name": "Read  MWD322Shift1",
        "filename": "filename1",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2180,
        "y": 1800,
        "wires": [
            [
                "bc5077089b419f32"
            ]
        ]
    },
    {
        "id": "2c4b64214ae34114",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename1",
                "v": "/home/unit7iiot/node-red/MWD322Shift2.js",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1800,
        "y": 1800,
        "wires": [
            [
                "5dfcf49548181d9e"
            ]
        ]
    },
    {
        "id": "bc5077089b419f32",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2360,
        "y": 1800,
        "wires": []
    },
    {
        "id": "1114a3cb4f2ef9cd",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Debug_Sp1",
        "func": "msg.payload = \n{\n    \"data\": msg.payload,\n    \"_time\" : msg._time\n    };\nmsg.filename = \"/home/unit7iiot/MWDDebugSP1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 1960,
        "wires": [
            [
                "84ccb935acc750d1"
            ]
        ]
    },
    {
        "id": "179e27ce164838ef",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "Debug_SP2",
        "func": "msg.payload =\n{\n    \"data\": msg.payload,\n    \"_time\": msg._time\n};\nmsg.filename = \"/home/unit7iiot/MWDDebugSP2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 2000,
        "wires": [
            [
                "8e417a830af24c28"
            ]
        ]
    },
    {
        "id": "84ccb935acc750d1",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2840,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "8e417a830af24c28",
        "type": "file",
        "z": "53e108dc1c13c742",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2840,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "192322782ecc44a8",
        "type": "delay",
        "z": "53e108dc1c13c742",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1950,
        "y": 2240,
        "wires": [
            [
                "1dbfbcdfdb3f9ea6"
            ]
        ]
    },
    {
        "id": "a22e58334559b02c",
        "type": "delay",
        "z": "53e108dc1c13c742",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1850,
        "y": 1260,
        "wires": [
            [
                "bb6c377ec7aeb793"
            ]
        ]
    },
    {
        "id": "d1d37ce07d5d9f10",
        "type": "delay",
        "z": "53e108dc1c13c742",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1810,
        "y": 320,
        "wires": [
            [
                "b457ab18a13f7fc5"
            ]
        ]
    },
    {
        "id": "344aa8f19029e7c0",
        "type": "delay",
        "z": "53e108dc1c13c742",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1910,
        "y": 3060,
        "wires": [
            [
                "49188f50ed5f98fe"
            ]
        ]
    },
    {
        "id": "7dbd2cc94c975d69",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 55",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 2060,
        "wires": []
    },
    {
        "id": "3c268dfec710014c",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 56",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c274f6dd6489bc1c",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 2",
        "func": "if (msg.payload[\"Machine Status1\"] == false){\n    global.set(\"M24\", new Date());\n}\nif (msg.payload[\"Machine Status1\"] == true){\n    var previous= global.get(\"M24\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP1\"].toString() },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD24\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 680,
        "wires": [
            [
                "262b595f53a8084d"
            ]
        ]
    },
    {
        "id": "c10b5c02e2b9a2ba",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status1\"]",
        "topi": "topic",
        "x": 970,
        "y": 680,
        "wires": [
            [
                "3c91c30828da968c"
            ]
        ]
    },
    {
        "id": "8e116078fd73dc85",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 57",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "262b595f53a8084d",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1265,
        "y": 680,
        "wires": []
    },
    {
        "id": "c30caa6e1d379a0a",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 3",
        "func": "if (msg.payload[\"Machine Status2\"] == false){\n    global.set(\"M321\", new Date());\n}\nif (msg.payload[\"Machine Status2\"] == true){\n    var previous= global.get(\"M321\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP2\"].toString() },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD321\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1580,
        "wires": [
            [
                "4a2fa24cc3598168"
            ]
        ]
    },
    {
        "id": "11a3276c19d38114",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status2\"]",
        "topi": "topic",
        "x": 970,
        "y": 1580,
        "wires": [
            [
                "ff8e73283b43e0bf"
            ]
        ]
    },
    {
        "id": "4a2fa24cc3598168",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1265,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0e4f69ae3891fc2b",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 4",
        "func": "if (msg.payload[\"Machine Status3\"] == false){\n    global.set(\"M322\", new Date());\n}\nif (msg.payload[\"Machine Status3\"] == true){\n    var previous= global.get(\"M322\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP3\"].toString() },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD322\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2480,
        "wires": [
            [
                "af3d38ef4294de4f"
            ]
        ]
    },
    {
        "id": "7c8717e0e5c3a6d7",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status3\"]",
        "topi": "topic",
        "x": 1050,
        "y": 2480,
        "wires": [
            [
                "50abd6b0af05b770"
            ]
        ]
    },
    {
        "id": "af3d38ef4294de4f",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1345,
        "y": 2480,
        "wires": []
    },
    {
        "id": "ed9cc1bcb9c7170b",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 5",
        "func": "if (msg.payload[\"Machine Status4\"] == false){\n    global.set(\"M323\", new Date());\n}\nif (msg.payload[\"Machine Status4\"] == true){\n    var previous= global.get(\"M323\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP4\"].toString() },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD323\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3320,
        "wires": [
            [
                "d0cd7dd0367738ed"
            ]
        ]
    },
    {
        "id": "33885c4a8e16b618",
        "type": "rbe",
        "z": "53e108dc1c13c742",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine Status4\"]",
        "topi": "topic",
        "x": 1050,
        "y": 3320,
        "wires": [
            [
                "4306a90c822f560f"
            ]
        ]
    },
    {
        "id": "d0cd7dd0367738ed",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1345,
        "y": 3320,
        "wires": []
    },
    {
        "id": "0f4d7a5e1bc88776",
        "type": "ping",
        "z": "53e108dc1c13c742",
        "protocol": "IPv4",
        "mode": "timed",
        "name": "",
        "host": "192.168.10.204",
        "timer": "20",
        "inputs": 0,
        "x": 190,
        "y": 2980,
        "wires": [
            [
                "a229dcc5ef8f7cfe"
            ]
        ]
    },
    {
        "id": "a229dcc5ef8f7cfe",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 59",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 2980,
        "wires": []
    },
    {
        "id": "444f14bba33efd0d",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 19",
        "func": "\n    var previous= global.get(\"M24\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD24\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"M24\", new Date());\n         return msg;\n     }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1724,
        "y": 134,
        "wires": [
            [
                "ea5ab02ef25906ae"
            ]
        ]
    },
    {
        "id": "ea5ab02ef25906ae",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1865,
        "y": 120,
        "wires": []
    },
    {
        "id": "67992b32bfd810f9",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 20",
        "func": "\n    var previous= global.get(\"M321\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     msg.payload = final.toString();\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD321\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"M321\", new Date());\n         return msg;\n     }\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1080,
        "wires": [
            [
                "f6e0143eba4e36cd",
                "81b04a1109427a04"
            ]
        ]
    },
    {
        "id": "f6e0143eba4e36cd",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1845,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2d0f8dabf23e346d",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 21",
        "func": "\n    var previous= global.get(\"M322\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD322\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"M322\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 2080,
        "wires": [
            [
                "c1bb997349edbbec"
            ]
        ]
    },
    {
        "id": "c1bb997349edbbec",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1955,
        "y": 2080,
        "wires": []
    },
    {
        "id": "4fd2de5b4431d2ce",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "function 22",
        "func": "\n    var previous= global.get(\"M323\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681370249375\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD323\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"M323\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2920,
        "wires": [
            [
                "c795be902b5d4ad6"
            ]
        ]
    },
    {
        "id": "c795be902b5d4ad6",
        "type": "link out",
        "z": "53e108dc1c13c742",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1935,
        "y": 2920,
        "wires": []
    },
    {
        "id": "d0e80e98569c5eaa",
        "type": "inject",
        "z": "53e108dc1c13c742",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1490,
        "y": 940,
        "wires": [
            [
                "67992b32bfd810f9"
            ]
        ]
    },
    {
        "id": "81b04a1109427a04",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 940,
        "wires": []
    },
    {
        "id": "4306a90c822f560f",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "MWD323",
        "func": "if (msg.payload[\"Machine Status4\"] == false) {\n    global.set(\"M323\", new Date());\n}\nif (msg.payload[\"Machine Status4\"] == true) {\n    var previous = global.get(\"M323\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    if (final > 10) {\n        var d = new Date();\n        var test = new Date(global.get(\"M323\"));\n        var start_time = test.getTime()\n        d = new Date();\n        var end_time = d.getTime()\n        var difference = end_time - start_time\n        var d1 = new Date();\n        d1.setDate(d1.getDate() + 1);\n        var current = new Date(d1.getFullYear(), d1.getMonth(), d1.getDate(), 7, 0, 0)\n        var currentDiff = current.getTime() - start_time;\n        var dt = new Date()\n        if (dt.getHours() < 7) {\n            dt.setDate(dt.getDate() - 1)\n        }\n        var firstshift = new Date(dt.getFullYear(), dt.getMonth(), dt.getDate(), 7, 0, 0)\n        var diff = end_time - firstshift.getTime()\n        var firstshiftdifference = msToTime(end_time - firstshift.getTime())\n        var difference1 = msToTime(difference);\n        flow.set(\"CurrentMWD323\", msg.payload[\"REASON OF STOP4\"].toString());\n        if (difference1 > firstshiftdifference) {\n            var Difference_In_Days = (currentDiff / (1000 * 3600 * 24)).toFixed(2)\n            var data = Difference_In_Days.split('.')\n            var days = parseFloat(data[0]) + (parseFloat(data[1]) > 0 ? 1 : 0)\n            for (var i = 0; i < days; i++) {\n                var addDate = new Date(addDays(test));\n                var nextdate = new Date(addDate.getFullYear(), addDate.getMonth(), addDate.getDate(), 6, 59, 0)\n                var dateDiff = msToTime(nextdate.getTime() - test.getTime());\n                if (i == days - 1) {\n                    dateDiff = firstshiftdifference;\n                    nextdate = new Date()\n                }\n                const values = [\n                    { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD323\").toString() },\n                    { dataPointId: \"1681370242503\", qualityCode: \"1\", value: dateDiff.toString() },\n                    { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD323\" }\n                ];\n                msg._time = nextdate;\n                msg.payload = values;\n                test = nextdate\n                node.send(msg);\n            }\n            flow.set(\"CurrentMWD323\", undefined);\n        } else {\n            //Direct to Mindsphere\n            const values = [\n                { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD323\").toString() },\n                { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n                { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD323\" }\n            ];\n            msg._time = new Date()\n            msg.payload = values;\n            node.send(msg);\n            flow.set(\"CurrentMWD323\", undefined);\n        }\n\n    }\n}\n\nfunction msToTime(duration) {\n    var minutes = Math.floor(duration / (1000 * 60))\n    return minutes;\n}\n\nfunction addDays(date) {\n    var dt = new Date(date);\n    dt.setDate(dt.getDate() + 1);\n    return dt;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3380,
        "wires": [
            [
                "d0cd7dd0367738ed"
            ]
        ]
    },
    {
        "id": "50abd6b0af05b770",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "MWD322",
        "func": "if (msg.payload[\"Machine Status3\"] == false) {\n    global.set(\"M322\", new Date());\n}\nif (msg.payload[\"Machine Status3\"] == true) {\n    var previous = global.get(\"M322\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    if (final > 10) {\n        var d = new Date();\n        var test = new Date(global.get(\"M322\"));\n        var start_time = test.getTime()\n        d = new Date();\n        var end_time = d.getTime()\n        var difference = end_time - start_time\n        var d1 = new Date();\n        d1.setDate(d1.getDate() + 1);\n        var current = new Date(d1.getFullYear(), d1.getMonth(), d1.getDate(), 7, 0, 0)\n        var currentDiff = current.getTime() - start_time;\n        var dt = new Date()\n        if (dt.getHours() < 7) {\n            dt.setDate(dt.getDate() - 1)\n        }\n        var firstshift = new Date(dt.getFullYear(), dt.getMonth(), dt.getDate(), 7, 0, 0)\n        var diff = end_time - firstshift.getTime()\n        var firstshiftdifference = msToTime(end_time - firstshift.getTime())\n        var difference1 = msToTime(difference);\n        flow.set(\"CurrentMWD322\", msg.payload[\"REASON OF STOP3\"].toString());\n        if (difference1 > firstshiftdifference) {\n            var Difference_In_Days = (currentDiff / (1000 * 3600 * 24)).toFixed(2)\n            var data = Difference_In_Days.split('.')\n            var days = parseFloat(data[0]) + (parseFloat(data[1]) > 0 ? 1 : 0)\n            for (var i = 0; i < days; i++) {\n                var addDate = new Date(addDays(test));\n                var nextdate = new Date(addDate.getFullYear(), addDate.getMonth(), addDate.getDate(), 6, 59, 0)\n                var dateDiff = msToTime(nextdate.getTime() - test.getTime());\n                if (i == days - 1) {\n                    dateDiff = firstshiftdifference;\n                    nextdate = new Date()\n                }\n                const values = [\n                    { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD322\").toString() },\n                    { dataPointId: \"1681370242503\", qualityCode: \"1\", value: dateDiff.toString() },\n                    { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD322\" }\n                ];\n                msg._time = nextdate;\n                msg.payload = values;\n                test = nextdate\n                node.send(msg);\n            }\n            flow.set(\"CurrentMWD322\", undefined);\n        } else {\n            //Direct to Mindsphere\n            const values = [\n                { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD322\").toString() },\n                { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n                { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD322\" }\n            ];\n            msg._time = new Date()\n            msg.payload = values;\n            node.send(msg);\n            flow.set(\"CurrentMWD322\", undefined);\n        }\n\n    }\n}\n\nfunction msToTime(duration) {\n    var minutes = Math.floor(duration / (1000 * 60))\n    return minutes;\n}\n\nfunction addDays(date) {\n    var dt = new Date(date);\n    dt.setDate(dt.getDate() + 1);\n    return dt;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2540,
        "wires": [
            [
                "af3d38ef4294de4f"
            ]
        ]
    },
    {
        "id": "ff8e73283b43e0bf",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "MWD321",
        "func": "if (msg.payload[\"Machine Status2\"] == false) {\n    global.set(\"M321\", new Date());\n}\nif (msg.payload[\"Machine Status2\"] == true) {\n    var previous = global.get(\"M321\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    if (final > 10) {\n        var d = new Date();\n        var test = new Date(global.get(\"M321\"));\n        var start_time = test.getTime()\n        d = new Date();\n        var end_time = d.getTime()\n        var difference = end_time - start_time\n        var d1 = new Date();\n        d1.setDate(d1.getDate() + 1);\n        var current = new Date(d1.getFullYear(), d1.getMonth(), d1.getDate(), 7, 0, 0)\n        var currentDiff = current.getTime() - start_time;\n        var dt = new Date()\n        if (dt.getHours() < 7) {\n            dt.setDate(dt.getDate() - 1)\n        }\n        var firstshift = new Date(dt.getFullYear(), dt.getMonth(), dt.getDate(), 7, 0, 0)\n        var diff = end_time - firstshift.getTime()\n        var firstshiftdifference = msToTime(end_time - firstshift.getTime())\n        var difference1 = msToTime(difference);\n        flow.set(\"CurrentMWD321\", msg.payload[\"REASON OF STOP2\"].toString());\n        if (difference1 > firstshiftdifference) {\n            var Difference_In_Days = (currentDiff / (1000 * 3600 * 24)).toFixed(2)\n            var data = Difference_In_Days.split('.')\n            var days = parseFloat(data[0]) + (parseFloat(data[1]) > 0 ? 1 : 0)\n            for (var i = 0; i < days; i++) {\n                var addDate = new Date(addDays(test));\n                var nextdate = new Date(addDate.getFullYear(), addDate.getMonth(), addDate.getDate(), 6, 59, 0)\n                var dateDiff = msToTime(nextdate.getTime() - test.getTime());\n                if (i == days - 1) {\n                    dateDiff = firstshiftdifference;\n                    nextdate = new Date()\n                }\n                const values = [\n                    { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD321\").toString() },\n                    { dataPointId: \"1681370242503\", qualityCode: \"1\", value: dateDiff.toString() },\n                    { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD321\" }\n                ];\n                msg._time = nextdate;\n                msg.payload = values;\n                test = nextdate\n                node.send(msg);\n            }\n            flow.set(\"CurrentMWD321\", undefined);\n        } else {\n            //Direct to Mindsphere\n            const values = [\n                { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD321\").toString() },\n                { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n                { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD321\" }\n            ];\n            msg._time = new Date()\n            msg.payload = values;\n            node.send(msg);\n            flow.set(\"CurrentMWD321\", undefined);\n        }\n\n    }\n}\n\nfunction msToTime(duration) {\n    var minutes = Math.floor(duration / (1000 * 60))\n    return minutes;\n}\n\nfunction addDays(date) {\n    var dt = new Date(date);\n    dt.setDate(dt.getDate() + 1);\n    return dt;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1640,
        "wires": [
            [
                "4a2fa24cc3598168"
            ]
        ]
    },
    {
        "id": "3c91c30828da968c",
        "type": "function",
        "z": "53e108dc1c13c742",
        "name": "MWD24",
        "func": "if (msg.payload[\"Machine Status1\"] == false) {\n    global.set(\"M24\", new Date());\n}\nif (msg.payload[\"Machine Status1\"] == true) {\n    var previous = global.get(\"M24\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    if (final > 10) {\n        var d = new Date();\n        var test = new Date(global.get(\"M24\"));\n        var start_time = test.getTime()\n        d = new Date();\n        var end_time = d.getTime()\n        var difference = end_time - start_time\n        var d1 = new Date();\n        d1.setDate(d1.getDate() + 1);\n        var current = new Date(d1.getFullYear(), d1.getMonth(), d1.getDate(), 7, 0, 0)\n        var currentDiff = current.getTime() - start_time;\n        var dt = new Date()\n        if (dt.getHours() < 7) {\n            dt.setDate(dt.getDate() - 1)\n        }\n        var firstshift = new Date(dt.getFullYear(), dt.getMonth(), dt.getDate(), 7, 0, 0)\n        var diff = end_time - firstshift.getTime()\n        var firstshiftdifference = msToTime(end_time - firstshift.getTime())\n        var difference1 = msToTime(difference);\n        flow.set(\"CurrentMWD24\", msg.payload[\"REASON OF STOP1\"].toString());\n        if (difference1 > firstshiftdifference) {\n            var Difference_In_Days = (currentDiff / (1000 * 3600 * 24)).toFixed(2)\n            var data = Difference_In_Days.split('.')\n            var days = parseFloat(data[0]) + (parseFloat(data[1]) > 0 ? 1 : 0)\n            for (var i = 0; i < days; i++) {\n                var addDate = new Date(addDays(test));\n                var nextdate = new Date(addDate.getFullYear(), addDate.getMonth(), addDate.getDate(), 6, 59, 0)\n                var dateDiff = msToTime(nextdate.getTime() - test.getTime());\n                if (i == days - 1) {\n                    dateDiff = firstshiftdifference;\n                    nextdate = new Date()\n                }\n                const values = [\n                    { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD24\").toString() },\n                    { dataPointId: \"1681370242503\", qualityCode: \"1\", value: dateDiff.toString() },\n                    { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD24\" }\n                ];\n                msg._time = nextdate;\n                msg.payload = values;\n                test = nextdate\n                node.send(msg);\n            }\n            flow.set(\"CurrentMWD24\", undefined);\n        } else {\n            //Direct to Mindsphere\n            const values = [\n                { dataPointId: \"1681370249375\", qualityCode: \"1\", value: flow.get(\"CurrentMWD24\").toString() },\n                { dataPointId: \"1681370242503\", qualityCode: \"1\", value: final.toString() },\n                { dataPointId: \"1681370228330\", qualityCode: \"1\", value: \"MWD24\" }\n            ];\n            msg._time = new Date()\n            msg.payload = values;\n            node.send(msg);\n            flow.set(\"CurrentMWD24\", undefined);\n        }\n\n    }\n}\n\nfunction msToTime(duration) {\n    var minutes = Math.floor(duration / (1000 * 60))\n    return minutes;\n}\n\nfunction addDays(date) {\n    var dt = new Date(date);\n    dt.setDate(dt.getDate() + 1);\n    return dt;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 760,
        "wires": [
            [
                "262b595f53a8084d"
            ]
        ]
    },
    {
        "id": "d33c182f0e561347",
        "type": "s7 in",
        "z": "53e108dc1c13c742",
        "endpoint": "0e49ca065caee2b5",
        "mode": "single",
        "variable": "",
        "diff": true,
        "name": "",
        "x": 710,
        "y": 2480,
        "wires": [
            [
                "40aa0e53c6af44f2"
            ]
        ]
    },
    {
        "id": "40aa0e53c6af44f2",
        "type": "debug",
        "z": "53e108dc1c13c742",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 2560,
        "wires": []
    },
    {
        "id": "fc60fea9fde75dad",
        "type": "s7 in",
        "z": "e82425116e2bf396",
        "endpoint": "4a878182.02d27",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Insulation 3",
        "x": 910,
        "y": 1840,
        "wires": [
            [
                "dbc890bd99a36518",
                "4b19eb9c8ea7ec64",
                "4417c4ccea52d08c",
                "7fa5f5bea7337509",
                "a97a8fe8f4e41e6c"
            ]
        ]
    },
    {
        "id": "0fbbed72e070061f",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2585,
        "y": 1960,
        "wires": []
    },
    {
        "id": "42ad53d369295401",
        "type": "s7 in",
        "z": "e82425116e2bf396",
        "endpoint": "14e769c9.163936",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "",
        "x": 910,
        "y": 280,
        "wires": [
            [
                "9c93977f44636407",
                "02a60a43fc8bb703",
                "4d8be6bfa8d3f19b",
                "046c8e2482951b11",
                "771a4ab63f8588ad",
                "a473a5dd2bc99e82"
            ]
        ]
    },
    {
        "id": "e6066ce90cf732bd",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2555,
        "y": 1240,
        "wires": []
    },
    {
        "id": "40ec2e915964073e",
        "type": "s7 in",
        "z": "e82425116e2bf396",
        "endpoint": "c292c19e.756e4",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "",
        "x": 890,
        "y": 1100,
        "wires": [
            [
                "4680289bc2765c65",
                "b0d0c97fed320550",
                "0b6cef97e2dd452e",
                "9c431576befc609e",
                "49ae7fa619768ff2",
                "fc26aab4962bf32d"
            ]
        ]
    },
    {
        "id": "f32af18240b285b8",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 1",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START1\"]==true){\n    down= 0;\n    global.set(\"Insulation1down\",down);\n    \n    const values1 = [\n    \n    { dataPointId: \"1628141625886\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP1\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628141619349\", qualityCode: \"1\", value: msg.payload[\"MACHINE START1\"].toString() },//MACHINE_START\n    { dataPointId: \"1628141609886\", qualityCode: \"1\", value: msg.payload[\"LENGTH1\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628141601590\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT1\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141595207\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT1\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141587382\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME1\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141580439\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME1\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628141573462\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER1\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141566461\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER1\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628141560077\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max1\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628141546625\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed1\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1629542057302\", qualityCode: \"1\", value: down.toString() }\n   ];\n   global.set(\"insulation1length\" ,msg.payload[\"LENGTH1\"] );\n   msg._time = new Date();\nmsg.payload = values1;\nreturn msg;\n}\n    \n    \n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "65db7b671b505332"
            ]
        ]
    },
    {
        "id": "65db7b671b505332",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1535,
        "y": 280,
        "wires": []
    },
    {
        "id": "02a60a43fc8bb703",
        "type": "trigger",
        "z": "e82425116e2bf396",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1150,
        "y": 280,
        "wires": [
            [
                "f32af18240b285b8"
            ]
        ]
    },
    {
        "id": "9c93977f44636407",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"MACHINE START1\"]",
        "topi": "topic",
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "9f6472df5f4e5706"
            ]
        ]
    },
    {
        "id": "9f6472df5f4e5706",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 1 stop",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START1\"]==false){\n   \n    \n    const values1 = [\n    \n    { dataPointId: \"1628141625886\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP1\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628141619349\", qualityCode: \"1\", value: msg.payload[\"MACHINE START1\"].toString() },//MACHINE_START\n    { dataPointId: \"1628141609886\", qualityCode: \"1\", value: msg.payload[\"LENGTH1\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628141601590\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT1\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141595207\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT1\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141587382\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME1\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141580439\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME1\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628141573462\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER1\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141566461\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER1\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628141560077\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max1\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628141546625\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1629542057302\", qualityCode: \"1\", value: \"0\" }\n   ];\n   global.set(\"insulation1length\" ,msg.payload[\"LENGTH1\"] );\n   msg._time = new Date();\nmsg.payload = values1;\nreturn msg;\n}\n    \n    \n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "65db7b671b505332"
            ]
        ]
    },
    {
        "id": "be9fa01bf933990c",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 2",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START2\"]==true){\n    down= 0;\n    global.set(\"Insulation2down\",down);\n    const values2 = [\n    \n    { dataPointId: \"1628141831910\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP2\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628141788878\", qualityCode: \"1\", value: msg.payload[\"MACHINE START2\"].toString() },//MACHINE_START\n    { dataPointId: \"1628141776182\", qualityCode: \"1\", value: msg.payload[\"LENGTH2\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628141763870\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT2\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141747021\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT2\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141735573\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME2\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141727469\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME2\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628141716293\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER2\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141706021\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER2\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628141698229\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max2\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628141673848\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed2\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1629542062835\", qualityCode: \"1\", value: down.toString() }\n   ];\n   global.set(\"insulation2length\" ,msg.payload[\"LENGTH2\"] );\n   \nmsg._time = new Date();\nmsg.payload = values2;\nreturn msg;\n}\n    \n    \n\n   \n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1040,
        "wires": [
            [
                "9eac62ce42f2da60"
            ]
        ]
    },
    {
        "id": "9eac62ce42f2da60",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1475,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b0d0c97fed320550",
        "type": "trigger",
        "z": "e82425116e2bf396",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1090,
        "y": 1040,
        "wires": [
            [
                "be9fa01bf933990c"
            ]
        ]
    },
    {
        "id": "4680289bc2765c65",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"MACHINE START2\"]",
        "topi": "topic",
        "x": 1110,
        "y": 1000,
        "wires": [
            [
                "28d9d83cd9ae90f8",
                "ca96bdbdd21eee35"
            ]
        ]
    },
    {
        "id": "28d9d83cd9ae90f8",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 2 stop",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START2\"]==false){\n    \n    const values2 = [\n    \n    { dataPointId: \"1628141831910\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP2\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628141788878\", qualityCode: \"1\", value: msg.payload[\"MACHINE START2\"].toString() },//MACHINE_START\n    { dataPointId: \"1628141776182\", qualityCode: \"1\", value: msg.payload[\"LENGTH2\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628141763870\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT2\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141747021\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT2\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141735573\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME2\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141727469\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME2\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628141716293\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER2\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141706021\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER2\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628141698229\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max2\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628141673848\", qualityCode: \"1\", value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1629542062835\", qualityCode: \"1\", value: global.get(\"Insulation2down\").toString() }\n   ];\n   global.set(\"insulation2length\" ,msg.payload[\"LENGTH2\"] );\n   \nmsg._time = new Date();\nmsg.payload = values2;\nreturn msg;\n}\n    \n    \n\n   \n\n   \n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1000,
        "wires": [
            [
                "9eac62ce42f2da60"
            ]
        ]
    },
    {
        "id": "d522c47997aad464",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 3",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START3\"]==true){\n    down= 0;\n    global.set(\"Insulation3down\",down);\n    \n    const values3 = [\n    \n    { dataPointId: \"1628142015630\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP3\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142005221\", qualityCode: \"1\", value: msg.payload[\"MACHINE START3\"].toString() },//MACHINE_START\n    { dataPointId: \"1628141995438\", qualityCode: \"1\", value: msg.payload[\"LENGTH3\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628141983879\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT3\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141948438\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT3\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141938245\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME3\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141924893\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME3\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628141916118\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER3\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141909205\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER3\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628141898911\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max3\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628141886520\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed3\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1629542067827\", qualityCode: \"1\", value: down.toString() }\n   ];\n   global.set(\"insulation3length\" ,msg.payload[\"LENGTH3\"] );\nmsg._time = new Date();\nmsg.payload = values3;\nreturn msg;\n   \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1760,
        "wires": [
            [
                "fca98e248d76599f"
            ]
        ]
    },
    {
        "id": "fca98e248d76599f",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1495,
        "y": 1760,
        "wires": []
    },
    {
        "id": "4b19eb9c8ea7ec64",
        "type": "trigger",
        "z": "e82425116e2bf396",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1150,
        "y": 1760,
        "wires": [
            [
                "d522c47997aad464"
            ]
        ]
    },
    {
        "id": "dbc890bd99a36518",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Length_Changeover\"]",
        "x": 1130,
        "y": 1720,
        "wires": [
            [
                "177a3dbcaa351a2b"
            ]
        ]
    },
    {
        "id": "177a3dbcaa351a2b",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 3 stop",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START3\"]==true){\n    \n    \n    const values3 = [\n    \n    { dataPointId: \"1628142015630\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP3\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142005221\", qualityCode: \"1\", value: msg.payload[\"MACHINE START3\"].toString() },//MACHINE_START\n    { dataPointId: \"1628141995438\", qualityCode: \"1\", value: msg.payload[\"LENGTH3\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628141983879\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT3\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141948438\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT3\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141938245\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME3\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141924893\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME3\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628141916118\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER3\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141909205\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER3\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628141898911\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max3\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628141886520\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1629542067827\", qualityCode: \"1\", value: \"0\" }\n   ];\n   global.set(\"insulation3length\" ,msg.payload[\"LENGTH3\"] );\nmsg._time = new Date();\nmsg.payload = values3;\nreturn msg;\n   \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1720,
        "wires": [
            [
                "fca98e248d76599f"
            ]
        ]
    },
    {
        "id": "a5cbe7aa905bac19",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2585,
        "y": 2620,
        "wires": []
    },
    {
        "id": "113275048b84afcd",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2585,
        "y": 3240,
        "wires": []
    },
    {
        "id": "09ee7d5f1d5a3f0d",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2585,
        "y": 3960,
        "wires": []
    },
    {
        "id": "e91d50634a7cc6f8",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2585,
        "y": 4720,
        "wires": []
    },
    {
        "id": "a0e86f13b9e2cf3f",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 4",
        "func": "   var down;\n\nif(msg.payload[\"MACHINE START4\"]==true){\n    down= 0;\n    global.set(\"Insulation4down\",down);\n    \n    const values4 = [\n    \n    { dataPointId: \"1628142139141\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP4\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142129958\", qualityCode: \"1\", value: msg.payload[\"MACHINE START4\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142121318\", qualityCode: \"1\", value: msg.payload[\"LENGTH4\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142115182\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT4\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142105686\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT4\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142092366\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME4\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142082534\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME4\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142065550\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER4\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142057605\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER4\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142051046\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max4\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142039329\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed4\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1629542072619\", qualityCode: \"1\", value: down.toString() }\n   ];\n   global.set(\"insulation4length\" ,msg.payload[\"LENGTH4\"] );\n   msg._time = new Date();\nmsg.payload = values4;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2440,
        "wires": [
            [
                "8f69f38f434da7d8"
            ]
        ]
    },
    {
        "id": "8f69f38f434da7d8",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1495,
        "y": 2440,
        "wires": []
    },
    {
        "id": "e5d8a417ee500469",
        "type": "trigger",
        "z": "e82425116e2bf396",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1130,
        "y": 2440,
        "wires": [
            [
                "a0e86f13b9e2cf3f"
            ]
        ]
    },
    {
        "id": "8ab322dc98b260fa",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Length_Changeover\"]",
        "x": 1130,
        "y": 2400,
        "wires": [
            [
                "e74943dd0d806177"
            ]
        ]
    },
    {
        "id": "e74943dd0d806177",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 4 stop",
        "func": "   var down;\n\nif(msg.payload[\"MACHINE START4\"]==false){\n    \n    const values4 = [\n    \n    { dataPointId: \"1628142139141\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP4\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142129958\", qualityCode: \"1\", value: msg.payload[\"MACHINE START4\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142121318\", qualityCode: \"1\", value: msg.payload[\"LENGTH4\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142115182\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT4\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142105686\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT4\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142092366\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME4\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142082534\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME4\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142065550\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER4\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142057605\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER4\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142051046\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max4\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142039329\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1629542072619\", qualityCode: \"1\", value: \"0\" }\n   ];\n   global.set(\"insulation4length\" ,msg.payload[\"LENGTH4\"] );\n   msg._time = new Date();\nmsg.payload = values4;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 2400,
        "wires": [
            [
                "8f69f38f434da7d8"
            ]
        ]
    },
    {
        "id": "d6d12780e6fd4f34",
        "type": "s7 in",
        "z": "e82425116e2bf396",
        "endpoint": "ae21a4d2.0a4ac8",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Insulation 4",
        "x": 930,
        "y": 2480,
        "wires": [
            [
                "8ab322dc98b260fa",
                "e5d8a417ee500469",
                "658e4999f06818c7",
                "1f6bfb88472440eb",
                "656d55951da81382"
            ]
        ]
    },
    {
        "id": "84b657b7e0dfddde",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 5",
        "func": " var down;\n\nif(msg.payload[\"MACHINE START5\"]==true){\n    down= 0;\n    global.set(\"Insulation5down\",down);\n     const values5 = [\n    \n    { dataPointId: \"1628142658096\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP5\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142649471\", qualityCode: \"1\", value: msg.payload[\"MACHINE START5\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142639198\", qualityCode: \"1\", value: msg.payload[\"LENGTH5\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142632286\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT5\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142217368\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT5\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142206134\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME5\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142195709\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME5\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142188966\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER5\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142181093\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER5\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142173894\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max5\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142163286\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed5\"].toString() },//LINE_SPEED_ACT\n     { dataPointId: \"1629542077867\", qualityCode: \"1\", value: down.toString() }\n   ];\n   global.set(\"insulation5length\" ,msg.payload[\"LENGTH5\"] );\nmsg._time = new Date();\nmsg.payload = values5;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 3100,
        "wires": [
            [
                "8d1abb3de8eb0a1c"
            ]
        ]
    },
    {
        "id": "8d1abb3de8eb0a1c",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1535,
        "y": 3100,
        "wires": []
    },
    {
        "id": "4de19f674b540624",
        "type": "trigger",
        "z": "e82425116e2bf396",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1170,
        "y": 3100,
        "wires": [
            [
                "84b657b7e0dfddde"
            ]
        ]
    },
    {
        "id": "5c00891936ae1c26",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Length_Changeover\"]",
        "x": 1170,
        "y": 3060,
        "wires": [
            [
                "ec3106c8bc979486"
            ]
        ]
    },
    {
        "id": "ec3106c8bc979486",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 5 stop",
        "func": " var down;\n\nif(msg.payload[\"MACHINE START5\"]==false){\n    \n     const values5 = [\n    \n    { dataPointId: \"1628142658096\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP5\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142649471\", qualityCode: \"1\", value: msg.payload[\"MACHINE START5\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142639198\", qualityCode: \"1\", value: msg.payload[\"LENGTH5\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142632286\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT5\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142217368\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT5\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142206134\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME5\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142195709\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME5\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142188966\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER5\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142181093\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER5\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142173894\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max5\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142163286\", qualityCode: \"1\", value: \"0\"},//LINE_SPEED_ACT\n     { dataPointId: \"1629542077867\", qualityCode: \"1\", value: \"0\" }\n   ];\n   global.set(\"insulation5length\" ,msg.payload[\"LENGTH5\"] );\nmsg._time = new Date();\nmsg.payload = values5;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 3060,
        "wires": [
            [
                "8d1abb3de8eb0a1c"
            ]
        ]
    },
    {
        "id": "5489c612bd1fe87e",
        "type": "s7 in",
        "z": "e82425116e2bf396",
        "endpoint": "68a2bf26.1d2a",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Insulaion 5",
        "x": 940,
        "y": 3140,
        "wires": [
            [
                "5c00891936ae1c26",
                "4de19f674b540624",
                "83921c5ae5ac94c1",
                "f493be0393886048",
                "3091489c8e1f5565"
            ]
        ]
    },
    {
        "id": "4e7bcd4dccc5253c",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 6",
        "func": "   var down;\n\nif(msg.payload[\"MACHINE START6\"]==true){\n    down= 0;\n    global.set(\"Insulation6down\",down);\n    \n    const values6 = [\n    \n    { dataPointId: \"1628142818119\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP6\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142808670\", qualityCode: \"1\", value: msg.payload[\"MACHINE START6\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142798647\", qualityCode: \"1\", value: msg.payload[\"LENGTH6\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142791726\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT6\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142777297\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT6\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142723457\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME6\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142715103\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME6\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142708430\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER6\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142700105\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER6\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142678846\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max6\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142670999\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed6\"].toString() },//LINE_SPEED_ACT\n      { dataPointId: \"1629542083178\", qualityCode: \"1\", value: down.toString() }\n   ];\n   \n   global.set(\"insulation6length\" ,msg.payload[\"LENGTH6\"] );\n   msg._time = new Date();\nmsg.payload = values6;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 3820,
        "wires": [
            [
                "ee350b3fd432d242"
            ]
        ]
    },
    {
        "id": "ee350b3fd432d242",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1555,
        "y": 3820,
        "wires": []
    },
    {
        "id": "7b8c22baa956e213",
        "type": "trigger",
        "z": "e82425116e2bf396",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1190,
        "y": 3820,
        "wires": [
            [
                "4e7bcd4dccc5253c"
            ]
        ]
    },
    {
        "id": "913d068fea131405",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Length_Changeover\"]",
        "x": 1170,
        "y": 3780,
        "wires": [
            [
                "79c5706e05108659"
            ]
        ]
    },
    {
        "id": "79c5706e05108659",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 6 stop",
        "func": "   var down;\n\nif(msg.payload[\"MACHINE START6\"]==false){\n    \n    \n    const values6 = [\n    \n    { dataPointId: \"1628142818119\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP6\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142808670\", qualityCode: \"1\", value: msg.payload[\"MACHINE START6\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142798647\", qualityCode: \"1\", value: msg.payload[\"LENGTH6\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142791726\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT6\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142777297\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT6\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142723457\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME6\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142715103\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME6\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142708430\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER6\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142700105\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER6\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142678846\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max6\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142670999\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n      { dataPointId: \"1629542083178\", qualityCode: \"1\", value: \"0\" }\n   ];\n   \n   global.set(\"insulation6length\" ,msg.payload[\"LENGTH6\"] );\n   msg._time = new Date();\nmsg.payload = values6;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1448,
        "y": 3780,
        "wires": [
            [
                "ee350b3fd432d242"
            ]
        ]
    },
    {
        "id": "b48682101470e0fc",
        "type": "s7 in",
        "z": "e82425116e2bf396",
        "endpoint": "33c3421c.5a099e",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Insulation 6",
        "x": 950,
        "y": 3860,
        "wires": [
            [
                "913d068fea131405",
                "7b8c22baa956e213",
                "2d4c537530c9186e",
                "5d619e1e906ac072",
                "018bb537ccd056a9"
            ]
        ]
    },
    {
        "id": "4051bd3879fa0b2e",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 7",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START7\"]==true){\n    down= 0;\n    global.set(\"Insulation7down\",down);\n    \n    const values7 = [\n    \n    { dataPointId: \"1628142931326\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP7\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142917504\", qualityCode: \"1\", value: msg.payload[\"MACHINE START7\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142910407\", qualityCode: \"1\", value: msg.payload[\"LENGTH7\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142902822\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT7\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142893278\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT7\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142886333\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME7\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142875126\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME7\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142866422\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER7\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142860038\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER7\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142853726\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max7\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142845949\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed7\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1629542088778\", qualityCode: \"1\", value: down.toString() }\n   ];\n   global.set(\"insulation7length\" ,msg.payload[\"LENGTH7\"] );\n   \nmsg._time = new Date();\nmsg.payload = values7;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 4540,
        "wires": [
            [
                "a83723fe440e5b2c"
            ]
        ]
    },
    {
        "id": "a83723fe440e5b2c",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1555,
        "y": 4540,
        "wires": []
    },
    {
        "id": "cb9ff46fbcc499d2",
        "type": "trigger",
        "z": "e82425116e2bf396",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1190,
        "y": 4540,
        "wires": [
            [
                "4051bd3879fa0b2e"
            ]
        ]
    },
    {
        "id": "e00a8de03d6652a9",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Length_Changeover\"]",
        "x": 1190,
        "y": 4500,
        "wires": [
            [
                "af25c2858ba03c3e"
            ]
        ]
    },
    {
        "id": "af25c2858ba03c3e",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Insulation 7 stop",
        "func": "var down;\n\nif(msg.payload[\"MACHINE START7\"]==false){\n    \n    \n    const values7 = [\n    \n    { dataPointId: \"1628142931326\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP7\"].toString()},//REASON_OF_STOP\n    { dataPointId: \"1628142917504\", qualityCode: \"1\", value: msg.payload[\"MACHINE START7\"].toString() },//MACHINE_START\n    { dataPointId: \"1628142910407\", qualityCode: \"1\", value: msg.payload[\"LENGTH7\"].toString() },//ACTUAL_LENGTH\n    { dataPointId: \"1628142902822\", qualityCode: \"1\", value: msg.payload[\"45MM_EXTRUDER_RPM_ACT7\"].toString() },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142893278\", qualityCode: \"1\", value: msg.payload[\"80MM_EXTRUDER_RPM_ACT7\"].toString() },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142886333\", qualityCode: \"1\", value: msg.payload[\"RECIPE_RECORD_NAME7\"].toString() },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142875126\", qualityCode: \"1\", value: msg.payload[\"RECIPE_NAME7\"].toString() },//RECIPE_NAME\n    { dataPointId: \"1628142866422\", qualityCode: \"1\", value: msg.payload[\"LENGTH_SET_METER7\"].toString() },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142860038\", qualityCode: \"1\", value: msg.payload[\"CABLE_DIAMETER7\"].toString() },//CABLE_DIAMETER\n    { dataPointId: \"1628142853726\", qualityCode: \"1\", value: msg.payload[\"Actual_LineSpeed max7\"].toString() },//LINE_SPEED_MAX\n    { dataPointId: \"1628142845949\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1629542088778\", qualityCode: \"1\", value: \"0\" }\n   ];\n   global.set(\"insulation7length\" ,msg.payload[\"LENGTH7\"] );\n   \nmsg._time = new Date();\nmsg.payload = values7;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4500,
        "wires": [
            [
                "a83723fe440e5b2c"
            ]
        ]
    },
    {
        "id": "7a7011568c07f59e",
        "type": "s7 in",
        "z": "e82425116e2bf396",
        "endpoint": "9a57ab60.9ca2b8",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Insulation 7",
        "x": 950,
        "y": 4620,
        "wires": [
            [
                "cb9ff46fbcc499d2",
                "e00a8de03d6652a9",
                "22be065e17231f36",
                "19131e9e7d489688",
                "19089f2c7ef58b4f"
            ]
        ]
    },
    {
        "id": "7ef9d4544982583a",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "b812a2320b954320"
        ],
        "uncaught": false,
        "x": 1910,
        "y": 4700,
        "wires": [
            [
                "759bedd266d3bbc3"
            ]
        ]
    },
    {
        "id": "b812a2320b954320",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read I7shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1890,
        "y": 4740,
        "wires": [
            [
                "759bedd266d3bbc3"
            ]
        ]
    },
    {
        "id": "759bedd266d3bbc3",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\nvar wiresize = 0.0;\nif(previous[\"CABLE_DIAMETER7\"] >= 2.24 && previous[\"CABLE_DIAMETER7\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(previous[\"CABLE_DIAMETER7\"] >= 2.40 && previous[\"CABLE_DIAMETER7\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(previous[\"CABLE_DIAMETER7\"] >= 2.86 && previous[\"CABLE_DIAMETER7\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(previous[\"CABLE_DIAMETER7\"] >= 3.48 && previous[\"CABLE_DIAMETER7\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(previous[\"CABLE_DIAMETER7\"] >= 4.02 && previous[\"CABLE_DIAMETER7\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(previous[\"CABLE_DIAMETER7\"] >= 4.52 && previous[\"CABLE_DIAMETER7\"] < 4.65 ){\n    wiresize = 6.00;\n}\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1640341253191\", qualityCode: \"1\", value: previous[\"LENGTH7\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341309199\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341357000\", qualityCode: \"1\", value: previous[\"MACHINE START7\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH7\"]);\n    var previouslen = Number(previous[\"LENGTH7\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1640341253191\", qualityCode: \"1\", value: spoollen.toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341309199\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341357000\", qualityCode: \"1\", value: previous[\"MACHINE START7\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH7\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 4720,
        "wires": [
            [
                "8801d5cf0b06322a"
            ],
            [
                "e91d50634a7cc6f8"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "22be065e17231f36",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_I7\"};\nmsg.filename = \"/home/unit7iiot/node-red/I7Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 4680,
        "wires": [
            [
                "028b0c38e17848c1"
            ]
        ]
    },
    {
        "id": "028b0c38e17848c1",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I7 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1370,
        "y": 4680,
        "wires": [
            [
                "40778dbe2becd700"
            ]
        ]
    },
    {
        "id": "40778dbe2becd700",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_I7\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH7\"]);\n    var previouslen = Number(previous[\"LENGTH7\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_I7\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 4680,
        "wires": [
            [
                "192d00b1d34e67b7"
            ],
            [
                "b812a2320b954320"
            ]
        ]
    },
    {
        "id": "192d00b1d34e67b7",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "Set I7 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1930,
        "y": 4660,
        "wires": [
            []
        ]
    },
    {
        "id": "8801d5cf0b06322a",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I7Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2370,
        "y": 4680,
        "wires": [
            []
        ]
    },
    {
        "id": "d7c577f746af3970",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "b85b738d195c0492"
        ],
        "uncaught": false,
        "x": 1930,
        "y": 3940,
        "wires": [
            [
                "005788ac4009567a"
            ]
        ]
    },
    {
        "id": "b85b738d195c0492",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read I6shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1910,
        "y": 3980,
        "wires": [
            [
                "005788ac4009567a"
            ]
        ]
    },
    {
        "id": "005788ac4009567a",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\nvar wiresize = 0.0;\nif(previous[\"CABLE_DIAMETER6\"] >= 2.24 && previous[\"CABLE_DIAMETER6\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(previous[\"CABLE_DIAMETER6\"] >= 2.40 && previous[\"CABLE_DIAMETER6\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(previous[\"CABLE_DIAMETER6\"] >= 2.86 && previous[\"CABLE_DIAMETER6\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(previous[\"CABLE_DIAMETER6\"] >= 3.48 && previous[\"CABLE_DIAMETER6\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(previous[\"CABLE_DIAMETER6\"] >= 4.02 && previous[\"CABLE_DIAMETER6\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(previous[\"CABLE_DIAMETER6\"] >= 4.52 && previous[\"CABLE_DIAMETER6\"] < 4.65 ){\n    wiresize = 6.00;\n}\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1640341246496\", qualityCode: \"1\", value: previous[\"LENGTH6\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341303487\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341352128\", qualityCode: \"1\", value: previous[\"MACHINE START6\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH6\"]);\n    var previouslen = Number(previous[\"LENGTH6\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1640341246496\", qualityCode: \"1\", value: spoollen.toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341303487\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341352128\", qualityCode: \"1\", value: previous[\"MACHINE START6\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH6\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 3960,
        "wires": [
            [
                "806dd0c81abb052f"
            ],
            [
                "09ee7d5f1d5a3f0d"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "2d4c537530c9186e",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_I6\"};\nmsg.filename = \"/home/unit7iiot/node-red/I6Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3920,
        "wires": [
            [
                "346a7f1bad0d509c"
            ]
        ]
    },
    {
        "id": "346a7f1bad0d509c",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I6 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1390,
        "y": 3920,
        "wires": [
            [
                "52a5fe691b39fc0c"
            ]
        ]
    },
    {
        "id": "52a5fe691b39fc0c",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_I6\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH6\"]);\n    var previouslen = Number(previous[\"LENGTH6\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_I6\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 3920,
        "wires": [
            [
                "5e12ee1a19a56bd4"
            ],
            [
                "b85b738d195c0492"
            ]
        ]
    },
    {
        "id": "5e12ee1a19a56bd4",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "Set I6 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1950,
        "y": 3900,
        "wires": [
            []
        ]
    },
    {
        "id": "806dd0c81abb052f",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I6Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2390,
        "y": 3940,
        "wires": [
            []
        ]
    },
    {
        "id": "5d3ac4fe6ca4044f",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "275293a849ba33f8"
        ],
        "uncaught": false,
        "x": 1900,
        "y": 3220,
        "wires": [
            [
                "c70e83c853b70f17"
            ]
        ]
    },
    {
        "id": "275293a849ba33f8",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read I5shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1880,
        "y": 3260,
        "wires": [
            [
                "c70e83c853b70f17"
            ]
        ]
    },
    {
        "id": "c70e83c853b70f17",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\nvar wiresize = 0.0;\nif(previous[\"CABLE_DIAMETER5\"] >= 2.24 && previous[\"CABLE_DIAMETER5\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(previous[\"CABLE_DIAMETER5\"] >= 2.40 && previous[\"CABLE_DIAMETER5\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(previous[\"CABLE_DIAMETER5\"] >= 2.86 && previous[\"CABLE_DIAMETER5\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(previous[\"CABLE_DIAMETER5\"] >= 3.48 && previous[\"CABLE_DIAMETER5\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(previous[\"CABLE_DIAMETER5\"] >= 4.02 && previous[\"CABLE_DIAMETER5\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(previous[\"CABLE_DIAMETER5\"] >= 4.52 && previous[\"CABLE_DIAMETER5\"] < 4.65 ){\n    wiresize = 6.00;\n}\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1640341238919\", qualityCode: \"1\", value: previous[\"LENGTH5\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341297856\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341344934\", qualityCode: \"1\", value: previous[\"MACHINE START5\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH5\"]);\n    var previouslen = Number(previous[\"LENGTH5\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1640341238919\", qualityCode: \"1\", value: spoollen.toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341297856\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341344934\", qualityCode: \"1\", value: previous[\"MACHINE START5\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH5\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 3240,
        "wires": [
            [
                "f5e78b0bb1e2d763"
            ],
            [
                "113275048b84afcd"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "83921c5ae5ac94c1",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_I5\"};\nmsg.filename = \"/home/unit7iiot/node-red/I5Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3200,
        "wires": [
            [
                "04edd85813c01fac"
            ]
        ]
    },
    {
        "id": "04edd85813c01fac",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I5 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1360,
        "y": 3200,
        "wires": [
            [
                "fdfd20110cac5ba4"
            ]
        ]
    },
    {
        "id": "fdfd20110cac5ba4",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_I5\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH5\"]);\n    var previouslen = Number(previous[\"LENGTH5\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_I5\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 3200,
        "wires": [
            [
                "ea07f3eea3f89a62"
            ],
            [
                "275293a849ba33f8"
            ]
        ]
    },
    {
        "id": "ea07f3eea3f89a62",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "Set I5 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1920,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "f5e78b0bb1e2d763",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I5Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2360,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "b9b89d22466a6d34",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "0b722c6f99dc089c"
        ],
        "uncaught": false,
        "x": 1870,
        "y": 2600,
        "wires": [
            [
                "8e93294bfb488165"
            ]
        ]
    },
    {
        "id": "0b722c6f99dc089c",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read I4shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1850,
        "y": 2640,
        "wires": [
            [
                "8e93294bfb488165"
            ]
        ]
    },
    {
        "id": "8e93294bfb488165",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\nvar wiresize = 0.0;\nif(previous[\"CABLE_DIAMETER4\"] >= 2.24 && previous[\"CABLE_DIAMETER4\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(previous[\"CABLE_DIAMETER4\"] >= 2.40 && previous[\"CABLE_DIAMETER4\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(previous[\"CABLE_DIAMETER4\"] >= 2.86 && previous[\"CABLE_DIAMETER4\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(previous[\"CABLE_DIAMETER4\"] >= 3.48 && previous[\"CABLE_DIAMETER4\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(previous[\"CABLE_DIAMETER4\"] >= 4.02 && previous[\"CABLE_DIAMETER4\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(previous[\"CABLE_DIAMETER4\"] >= 4.52 && previous[\"CABLE_DIAMETER4\"] < 4.65 ){\n    wiresize = 6.00;\n}\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1640341231783\", qualityCode: \"1\", value: previous[\"LENGTH4\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341292352\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341339848\", qualityCode: \"1\", value: previous[\"MACHINE START4\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH4\"]);\n    var previouslen = Number(previous[\"LENGTH4\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1640341231783\", qualityCode: \"1\", value: spoollen.toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341292352\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341339848\", qualityCode: \"1\", value: previous[\"MACHINE START4\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH4\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 2620,
        "wires": [
            [
                "a13be9fa34996ab7"
            ],
            [
                "a5cbe7aa905bac19"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "658e4999f06818c7",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_I4\"};\nmsg.filename = \"/home/unit7iiot/node-red/I4Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 2580,
        "wires": [
            [
                "6b4727b0808fa1b9"
            ]
        ]
    },
    {
        "id": "6b4727b0808fa1b9",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I4 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1330,
        "y": 2580,
        "wires": [
            [
                "2ab3aa0dff428b63",
                "686590e0bf414a14"
            ]
        ]
    },
    {
        "id": "2ab3aa0dff428b63",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_I4\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH4\"]);\n    var previouslen = Number(previous[\"LENGTH4\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_I4\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2580,
        "wires": [
            [
                "e3eaa9aa0e48ef5f"
            ],
            [
                "0b722c6f99dc089c"
            ]
        ]
    },
    {
        "id": "e3eaa9aa0e48ef5f",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "Set I4 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1890,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "a13be9fa34996ab7",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I4Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "686590e0bf414a14",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 2640,
        "wires": []
    },
    {
        "id": "66af5f33ef5fd921",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "9fddfc565f6f0a06"
        ],
        "uncaught": false,
        "x": 1890,
        "y": 1920,
        "wires": [
            [
                "33790b86118cfc7a"
            ]
        ]
    },
    {
        "id": "9fddfc565f6f0a06",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read I3shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1870,
        "y": 1960,
        "wires": [
            [
                "33790b86118cfc7a"
            ]
        ]
    },
    {
        "id": "33790b86118cfc7a",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\nvar wiresize = 0.0;\nif(previous[\"CABLE_DIAMETER3\"] >= 2.24 && previous[\"CABLE_DIAMETER3\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(previous[\"CABLE_DIAMETER3\"] >= 2.40 && previous[\"CABLE_DIAMETER3\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(previous[\"CABLE_DIAMETER3\"] >= 2.86 && previous[\"CABLE_DIAMETER3\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(previous[\"CABLE_DIAMETER3\"] >= 3.48 && previous[\"CABLE_DIAMETER3\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(previous[\"CABLE_DIAMETER3\"] >= 4.02 && previous[\"CABLE_DIAMETER3\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(previous[\"CABLE_DIAMETER3\"] >= 4.52 && previous[\"CABLE_DIAMETER3\"] < 4.65 ){\n    wiresize = 6.00;\n}\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1640341223423\", qualityCode: \"1\", value: previous[\"LENGTH3\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341286463\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341334631\", qualityCode: \"1\", value: previous[\"MACHINE START3\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH3\"]);\n    var previouslen = Number(previous[\"LENGTH3\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1640341223423\", qualityCode: \"1\", value: spoollen.toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341286463\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341334631\", qualityCode: \"1\", value: previous[\"MACHINE START3\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH3\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 1940,
        "wires": [
            [
                "9505fa608a2a8e3b"
            ],
            [
                "0fbbed72e070061f"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "4417c4ccea52d08c",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_I3\"};\nmsg.filename = \"/home/unit7iiot/node-red/I3Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1900,
        "wires": [
            [
                "a508b4f0bc8b7d7a"
            ]
        ]
    },
    {
        "id": "a508b4f0bc8b7d7a",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I3 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1350,
        "y": 1900,
        "wires": [
            [
                "6c1b67c7559e5563"
            ]
        ]
    },
    {
        "id": "6c1b67c7559e5563",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_I3\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH3\"]);\n    var previouslen = Number(previous[\"LENGTH3\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_I3\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1900,
        "wires": [
            [
                "f1ca8e619f1be77b"
            ],
            [
                "9fddfc565f6f0a06"
            ]
        ]
    },
    {
        "id": "f1ca8e619f1be77b",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "Set I3 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1910,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "9505fa608a2a8e3b",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I3Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2350,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "fea078c977086701",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "2bd4f4e3b05217b3"
        ],
        "uncaught": false,
        "x": 1870,
        "y": 1200,
        "wires": [
            [
                "db58de333d26bf18"
            ]
        ]
    },
    {
        "id": "2bd4f4e3b05217b3",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read I2shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1850,
        "y": 1240,
        "wires": [
            [
                "db58de333d26bf18"
            ]
        ]
    },
    {
        "id": "db58de333d26bf18",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\nvar wiresize = 0.0;\nif(previous[\"CABLE_DIAMETER2\"] >= 2.24 && previous[\"CABLE_DIAMETER2\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(previous[\"CABLE_DIAMETER2\"] >= 2.40 && previous[\"CABLE_DIAMETER2\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(previous[\"CABLE_DIAMETER2\"] >= 2.86 && previous[\"CABLE_DIAMETER2\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(previous[\"CABLE_DIAMETER2\"] >= 3.48 && previous[\"CABLE_DIAMETER2\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(previous[\"CABLE_DIAMETER2\"] >= 4.02 && previous[\"CABLE_DIAMETER2\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(previous[\"CABLE_DIAMETER2\"] >= 4.52 && previous[\"CABLE_DIAMETER2\"] < 4.65 ){\n    wiresize = 6.00;\n}\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1640341212168\", qualityCode: \"1\", value: previous[\"LENGTH2\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341281128\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341327943\", qualityCode: \"1\", value: previous[\"MACHINE START2\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH2\"]);\n    var previouslen = Number(previous[\"LENGTH2\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1640341212168\", qualityCode: \"1\", value: spoollen.toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341281128\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341327943\", qualityCode: \"1\", value: previous[\"MACHINE START2\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH2\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 1220,
        "wires": [
            [
                "80e12c6b9c366256"
            ],
            [
                "e6066ce90cf732bd"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "0b6cef97e2dd452e",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_I2\"};\nmsg.filename = \"/home/unit7iiot/node-red/I2Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1180,
        "wires": [
            [
                "d4ae087669b0b78a"
            ]
        ]
    },
    {
        "id": "d4ae087669b0b78a",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I2 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1330,
        "y": 1180,
        "wires": [
            [
                "59b6d9f5da828c8f",
                "8ecc6f1c0c6051b1"
            ]
        ]
    },
    {
        "id": "59b6d9f5da828c8f",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_I2\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH2\"]);\n    var previouslen = Number(previous[\"LENGTH2\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_I2\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 1180,
        "wires": [
            [
                "9d90be8d83bbfd94"
            ],
            [
                "2bd4f4e3b05217b3"
            ]
        ]
    },
    {
        "id": "9d90be8d83bbfd94",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "Set I2 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1890,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "8ecc6f1c0c6051b1",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 1240,
        "wires": []
    },
    {
        "id": "3cad0cbeaffd72dd",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "a5869e90ccaa5e15"
        ],
        "uncaught": false,
        "x": 1850,
        "y": 420,
        "wires": [
            [
                "eca5e753479453e5"
            ]
        ]
    },
    {
        "id": "a5869e90ccaa5e15",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read I1shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1830,
        "y": 460,
        "wires": [
            [
                "eca5e753479453e5"
            ]
        ]
    },
    {
        "id": "eca5e753479453e5",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\nvar wiresize = 0.0;\nif(previous[\"CABLE_DIAMETER1\"] >= 2.24 && previous[\"CABLE_DIAMETER1\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(previous[\"CABLE_DIAMETER1\"] >= 2.40 && previous[\"CABLE_DIAMETER1\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(previous[\"CABLE_DIAMETER1\"] >= 2.86 && previous[\"CABLE_DIAMETER1\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(previous[\"CABLE_DIAMETER1\"] >= 3.48 && previous[\"CABLE_DIAMETER1\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(previous[\"CABLE_DIAMETER1\"] >= 4.02 && previous[\"CABLE_DIAMETER1\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(previous[\"CABLE_DIAMETER1\"] >= 4.52 && previous[\"CABLE_DIAMETER1\"] < 4.65 ){\n    wiresize = 6.00;\n}\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1640341198834\", qualityCode: \"1\", value: previous[\"LENGTH1\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341264828\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341317626\", qualityCode: \"1\", value: previous[\"MACHINE START1\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH1\"]);\n    var previouslen = Number(previous[\"LENGTH1\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1640341198834\", qualityCode: \"1\", value: spoollen.toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341264828\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341317626\", qualityCode: \"1\", value: previous[\"MACHINE START1\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH1\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 440,
        "wires": [
            [
                "b49a6d8bbd9824eb"
            ],
            [
                "bfba881e6ec4cf43"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "4d8be6bfa8d3f19b",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_I1\"};\nmsg.filename = \"/home/unit7iiot/node-red/I1Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "5a31030067a519f9"
            ]
        ]
    },
    {
        "id": "5a31030067a519f9",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I1 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1310,
        "y": 400,
        "wires": [
            [
                "9c46f1123613fb69"
            ]
        ]
    },
    {
        "id": "9c46f1123613fb69",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_I1\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH1\"]);\n    var previouslen = Number(previous[\"LENGTH1\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_I1\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 400,
        "wires": [
            [
                "81a9141ac050e834"
            ],
            [
                "a5869e90ccaa5e15"
            ]
        ]
    },
    {
        "id": "81a9141ac050e834",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "Set I1 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1870,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b49a6d8bbd9824eb",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I1Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2370,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "016935d9863d726c",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 2980,
        "y": 100,
        "wires": [
            [
                "bf23eb5f9c668136"
            ]
        ]
    },
    {
        "id": "a68b66d2858ed6e7",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3360,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "583605afe3f46ea7",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "var Test = msg.toString();\nmsg.payload = Test;\nmsg.filename = \"/home/unit7iiot/node-red/ErrorAllInsulation.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3190,
        "y": 100,
        "wires": [
            [
                "a68b66d2858ed6e7"
            ]
        ]
    },
    {
        "id": "bfba881e6ec4cf43",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2605,
        "y": 440,
        "wires": []
    },
    {
        "id": "bf23eb5f9c668136",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3240,
        "y": 160,
        "wires": []
    },
    {
        "id": "755599784a933101",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I1Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I1NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1680,
        "y": 180,
        "wires": [
            [
                "eca8d9f3ededb6af"
            ]
        ]
    },
    {
        "id": "eca8d9f3ededb6af",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I1 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1900,
        "y": 220,
        "wires": [
            [
                "4b3902c934964bca"
            ]
        ]
    },
    {
        "id": "4b3902c934964bca",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read  I1Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2110,
        "y": 220,
        "wires": [
            [
                "c390fd15e4c6579a"
            ]
        ]
    },
    {
        "id": "c390fd15e4c6579a",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nvar wiresize = 0.0;\nif(current[\"CABLE_DIAMETER1\"] >= 2.24 && current[\"CABLE_DIAMETER1\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(current[\"CABLE_DIAMETER1\"] >= 2.40 && current[\"CABLE_DIAMETER1\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(current[\"CABLE_DIAMETER1\"] >= 2.86 && current[\"CABLE_DIAMETER1\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(current[\"CABLE_DIAMETER1\"] >= 3.48 && current[\"CABLE_DIAMETER1\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(current[\"CABLE_DIAMETER1\"] >= 4.02 && current[\"CABLE_DIAMETER1\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(current[\"CABLE_DIAMETER1\"] >= 4.52 && current[\"CABLE_DIAMETER1\"] < 4.65 ){\n    wiresize = 6.00;\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1640341198834\", qualityCode: \"1\", value: current[\"LENGTH1\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341264828\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341317626\", qualityCode: \"1\", value: current[\"MACHINE START1\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH1\"]);\n     var currentlen = Number(current[\"LENGTH1\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1640341198834\", qualityCode: \"1\", value: length.toString()},//REASON_OF_STOP\n             { dataPointId: \"1640341264828\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n             { dataPointId: \"1640341317626\", qualityCode: \"1\", value: current[\"MACHINE START1\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 220,
        "wires": [
            [
                "b10910c740404b16",
                "408255c0be8ecf30"
            ],
            [
                "bfba881e6ec4cf43",
                "ad4044e9df738056",
                "129cfceb8a1c99c7"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "c129b7a1aa97a63a",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "4b3902c934964bca"
        ],
        "uncaught": false,
        "x": 2130,
        "y": 180,
        "wires": [
            [
                "c390fd15e4c6579a"
            ]
        ]
    },
    {
        "id": "b10910c740404b16",
        "type": "remove item",
        "z": "e82425116e2bf396",
        "name": "Delete I1 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2630,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f31f359c8ca8f710",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I1Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I1NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1680,
        "y": 220,
        "wires": [
            [
                "eca8d9f3ededb6af"
            ]
        ]
    },
    {
        "id": "2ddb8bb4c409d3ad",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I1Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I1NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1680,
        "y": 260,
        "wires": [
            [
                "eca8d9f3ededb6af"
            ]
        ]
    },
    {
        "id": "408255c0be8ecf30",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I1Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "046c8e2482951b11",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"I1NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 200,
        "wires": [
            [
                "26c74b8e40c06fc3"
            ]
        ]
    },
    {
        "id": "26c74b8e40c06fc3",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "I1 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1430,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "52dce775dffbaf60",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I2Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I2NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1640,
        "y": 940,
        "wires": [
            [
                "51d0590131466321"
            ]
        ]
    },
    {
        "id": "51d0590131466321",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I2 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1860,
        "y": 980,
        "wires": [
            [
                "d70dfc84f10feec0"
            ]
        ]
    },
    {
        "id": "d70dfc84f10feec0",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read  I2Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2070,
        "y": 980,
        "wires": [
            [
                "e38782d46bf117fd"
            ]
        ]
    },
    {
        "id": "e38782d46bf117fd",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nvar wiresize = 0.0;\nif(current[\"CABLE_DIAMETER2\"] >= 2.24 && current[\"CABLE_DIAMETER2\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(current[\"CABLE_DIAMETER2\"] >= 2.40 && current[\"CABLE_DIAMETER2\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(current[\"CABLE_DIAMETER2\"] >= 2.86 && current[\"CABLE_DIAMETER2\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(current[\"CABLE_DIAMETER2\"] >= 3.48 && current[\"CABLE_DIAMETER2\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(current[\"CABLE_DIAMETER2\"] >= 4.02 && current[\"CABLE_DIAMETER2\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(current[\"CABLE_DIAMETER2\"] >= 4.52 && current[\"CABLE_DIAMETER2\"] < 4.65 ){\n    wiresize = 6.00;\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1640341212168\", qualityCode: \"1\", value: current[\"LENGTH2\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341281128\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341327943\", qualityCode: \"1\", value: current[\"MACHINE START2\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH2\"]);\n     var currentlen = Number(current[\"LENGTH2\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1640341212168\", qualityCode: \"1\", value: length.toString()},//REASON_OF_STOP\n             { dataPointId: \"1640341281128\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n             { dataPointId: \"1640341327943\", qualityCode: \"1\", value: current[\"MACHINE START2\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 980,
        "wires": [
            [
                "b8bb47ab35602b8a",
                "97e5ab6111f7396d",
                "652a6721f59605ed"
            ],
            [
                "e6066ce90cf732bd",
                "652a6721f59605ed"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "b248eb756d7da569",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "d70dfc84f10feec0"
        ],
        "uncaught": false,
        "x": 2090,
        "y": 940,
        "wires": [
            [
                "e38782d46bf117fd"
            ]
        ]
    },
    {
        "id": "b8bb47ab35602b8a",
        "type": "remove item",
        "z": "e82425116e2bf396",
        "name": "Delete I2 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2590,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "fe4fb8516081b559",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I2Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I2NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1640,
        "y": 980,
        "wires": [
            [
                "51d0590131466321"
            ]
        ]
    },
    {
        "id": "ae6047677efd7889",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I2Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I2NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1640,
        "y": 1020,
        "wires": [
            [
                "51d0590131466321"
            ]
        ]
    },
    {
        "id": "97e5ab6111f7396d",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I2Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2550,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "9c431576befc609e",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"I2NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 960,
        "wires": [
            [
                "5c74788cb4c569ce"
            ]
        ]
    },
    {
        "id": "5c74788cb4c569ce",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "I2 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1390,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "80e12c6b9c366256",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I2Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "6f3315aaeb4cd233",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I3Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I3NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 1660,
        "wires": [
            [
                "e1b84c2ef7c5373c"
            ]
        ]
    },
    {
        "id": "e1b84c2ef7c5373c",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I3 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1880,
        "y": 1700,
        "wires": [
            [
                "99ab088ac98ef479"
            ]
        ]
    },
    {
        "id": "99ab088ac98ef479",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read  I3Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2090,
        "y": 1700,
        "wires": [
            [
                "5639be9d5eaffcbb"
            ]
        ]
    },
    {
        "id": "5639be9d5eaffcbb",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nvar wiresize = 0.0;\nif(current[\"CABLE_DIAMETER3\"] >= 2.24 && current[\"CABLE_DIAMETER3\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(current[\"CABLE_DIAMETER3\"] >= 2.40 && current[\"CABLE_DIAMETER3\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(current[\"CABLE_DIAMETER3\"] >= 2.86 && current[\"CABLE_DIAMETER3\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(current[\"CABLE_DIAMETER3\"] >= 3.48 && current[\"CABLE_DIAMETER3\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(current[\"CABLE_DIAMETER3\"] >= 4.02 && current[\"CABLE_DIAMETER3\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(current[\"CABLE_DIAMETER3\"] >= 4.52 && current[\"CABLE_DIAMETER3\"] < 4.65 ){\n    wiresize = 6.00;\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1640341223423\", qualityCode: \"1\", value: current[\"LENGTH3\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341286463\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341334631\", qualityCode: \"1\", value: current[\"MACHINE START3\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH3\"]);\n     var currentlen = Number(current[\"LENGTH3\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1640341223423\", qualityCode: \"1\", value: length.toString()},//REASON_OF_STOP\n             { dataPointId: \"1640341286463\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n             { dataPointId: \"1640341334631\", qualityCode: \"1\", value: current[\"MACHINE START3\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 1700,
        "wires": [
            [
                "993fbd2ca4e80654",
                "85996b8ad10cad01"
            ],
            [
                "0fbbed72e070061f",
                "e0e26a24a2a1a654"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "e06bafe39bacabde",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "99ab088ac98ef479"
        ],
        "uncaught": false,
        "x": 2110,
        "y": 1660,
        "wires": [
            [
                "5639be9d5eaffcbb"
            ]
        ]
    },
    {
        "id": "993fbd2ca4e80654",
        "type": "remove item",
        "z": "e82425116e2bf396",
        "name": "Delete I3 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2610,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "dcee66c056e96c38",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I3Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I3NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 1700,
        "wires": [
            [
                "e1b84c2ef7c5373c"
            ]
        ]
    },
    {
        "id": "2b997cdee0cb17db",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I3Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I3NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 1740,
        "wires": [
            [
                "e1b84c2ef7c5373c"
            ]
        ]
    },
    {
        "id": "85996b8ad10cad01",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I3Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2570,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "7fa5f5bea7337509",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"I3NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1680,
        "wires": [
            [
                "4aa9d1f2e26a1988"
            ]
        ]
    },
    {
        "id": "4aa9d1f2e26a1988",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "I3 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1410,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "ad4044e9df738056",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 280,
        "wires": []
    },
    {
        "id": "652a6721f59605ed",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e0e26a24a2a1a654",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 1740,
        "wires": []
    },
    {
        "id": "d0c4788a8a63c5d2",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I4Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I4NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 2340,
        "wires": [
            [
                "a95833f62be41b17"
            ]
        ]
    },
    {
        "id": "a95833f62be41b17",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I4 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1880,
        "y": 2380,
        "wires": [
            [
                "680aaa87082d7f90"
            ]
        ]
    },
    {
        "id": "680aaa87082d7f90",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read  I4Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2090,
        "y": 2380,
        "wires": [
            [
                "ad39a6ddce32ee2d"
            ]
        ]
    },
    {
        "id": "ad39a6ddce32ee2d",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nvar wiresize = 0.0;\nif(current[\"CABLE_DIAMETER4\"] >= 2.24 && current[\"CABLE_DIAMETER4\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(current[\"CABLE_DIAMETER4\"] >= 2.40 && current[\"CABLE_DIAMETER4\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(current[\"CABLE_DIAMETER4\"] >= 2.86 && current[\"CABLE_DIAMETER4\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(current[\"CABLE_DIAMETER4\"] >= 3.48 && current[\"CABLE_DIAMETER4\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(current[\"CABLE_DIAMETER4\"] >= 4.02 && current[\"CABLE_DIAMETER4\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(current[\"CABLE_DIAMETER4\"] >= 4.52 && current[\"CABLE_DIAMETER4\"] < 4.65 ){\n    wiresize = 6.00;\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1640341231783\", qualityCode: \"1\", value: current[\"LENGTH4\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341292352\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341339848\", qualityCode: \"1\", value: current[\"MACHINE START4\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH4\"]);\n     var currentlen = Number(current[\"LENGTH4\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1640341231783\", qualityCode: \"1\", value: length.toString()},//REASON_OF_STOP\n             { dataPointId: \"1640341292352\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n             { dataPointId: \"1640341339848\", qualityCode: \"1\", value: current[\"MACHINE START4\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 2380,
        "wires": [
            [
                "6cfa7a06714eefac",
                "4450b15089ec71f5"
            ],
            [
                "b4a3abfa184a793e",
                "a5cbe7aa905bac19"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "706df84de3bd55fc",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "680aaa87082d7f90"
        ],
        "uncaught": false,
        "x": 2110,
        "y": 2340,
        "wires": [
            [
                "ad39a6ddce32ee2d"
            ]
        ]
    },
    {
        "id": "6cfa7a06714eefac",
        "type": "remove item",
        "z": "e82425116e2bf396",
        "name": "Delete I4 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2610,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "722255aeb81067a8",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I4Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I4NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 2380,
        "wires": [
            [
                "a95833f62be41b17"
            ]
        ]
    },
    {
        "id": "ff7e9f8d8937bae7",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I4Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I4NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1660,
        "y": 2420,
        "wires": [
            [
                "a95833f62be41b17"
            ]
        ]
    },
    {
        "id": "4450b15089ec71f5",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I4Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2570,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "b4a3abfa184a793e",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 2420,
        "wires": []
    },
    {
        "id": "1f6bfb88472440eb",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"I4NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2360,
        "wires": [
            [
                "59bef7c27a5ba2be"
            ]
        ]
    },
    {
        "id": "59bef7c27a5ba2be",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "I4 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1410,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "1c81daca132239c2",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I5Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I5NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1680,
        "y": 3000,
        "wires": [
            [
                "c19b952ad9564c7d"
            ]
        ]
    },
    {
        "id": "c19b952ad9564c7d",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I5 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1900,
        "y": 3040,
        "wires": [
            [
                "7ccf7006daaee452"
            ]
        ]
    },
    {
        "id": "7ccf7006daaee452",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read  I5Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2110,
        "y": 3040,
        "wires": [
            [
                "902a301d48a4e03b"
            ]
        ]
    },
    {
        "id": "902a301d48a4e03b",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nvar wiresize = 0.0;\nif(current[\"CABLE_DIAMETER5\"] >= 2.24 && current[\"CABLE_DIAMETER5\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(current[\"CABLE_DIAMETER5\"] >= 2.40 && current[\"CABLE_DIAMETER5\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(current[\"CABLE_DIAMETER5\"] >= 2.86 && current[\"CABLE_DIAMETER5\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(current[\"CABLE_DIAMETER5\"] >= 3.48 && current[\"CABLE_DIAMETER5\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(current[\"CABLE_DIAMETER5\"] >= 4.02 && current[\"CABLE_DIAMETER5\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(current[\"CABLE_DIAMETER5\"] >= 4.52 && current[\"CABLE_DIAMETER5\"] < 4.65 ){\n    wiresize = 6.00;\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n            { dataPointId: \"1640341238919\", qualityCode: \"1\", value: current[\"LENGTH5\"].toString()},//REASON_OF_STOP\n            { dataPointId: \"1640341297856\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n            { dataPointId: \"1640341344934\", qualityCode: \"1\", value: current[\"MACHINE START5\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH5\"]);\n     var currentlen = Number(current[\"LENGTH5\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1640341238919\", qualityCode: \"1\", value: length.toString()},//REASON_OF_STOP\n             { dataPointId: \"1640341297856\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n             { dataPointId: \"1640341344934\", qualityCode: \"1\", value: current[\"MACHINE START5\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 3040,
        "wires": [
            [
                "3a5984e40cf59bd9",
                "ac2088db5925336f",
                "66cf5621eb59cd6b"
            ],
            [
                "66cf5621eb59cd6b",
                "113275048b84afcd"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "321702e831d3d5da",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "7ccf7006daaee452"
        ],
        "uncaught": false,
        "x": 2130,
        "y": 3000,
        "wires": [
            [
                "902a301d48a4e03b"
            ]
        ]
    },
    {
        "id": "3a5984e40cf59bd9",
        "type": "remove item",
        "z": "e82425116e2bf396",
        "name": "Delete I5 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2630,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "20461ce255464e02",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I5Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I5NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1680,
        "y": 3040,
        "wires": [
            [
                "c19b952ad9564c7d"
            ]
        ]
    },
    {
        "id": "a28b996172a564e0",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I5Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I5NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1680,
        "y": 3080,
        "wires": [
            [
                "c19b952ad9564c7d"
            ]
        ]
    },
    {
        "id": "ac2088db5925336f",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I5Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2590,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "66cf5621eb59cd6b",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 3080,
        "wires": []
    },
    {
        "id": "f493be0393886048",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"I5NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3020,
        "wires": [
            [
                "88d096215d11662b"
            ]
        ]
    },
    {
        "id": "88d096215d11662b",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "I5 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1430,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "733c0de83f46b52f",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I6Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I6NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1700,
        "y": 3720,
        "wires": [
            [
                "5ee36e0a7bfb825d"
            ]
        ]
    },
    {
        "id": "5ee36e0a7bfb825d",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I6 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1920,
        "y": 3760,
        "wires": [
            [
                "6488984ac609f1d5"
            ]
        ]
    },
    {
        "id": "6488984ac609f1d5",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read  I6Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2130,
        "y": 3760,
        "wires": [
            [
                "e3d7d81759f183ac"
            ]
        ]
    },
    {
        "id": "e3d7d81759f183ac",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nvar wiresize = 0.0;\nif(current[\"CABLE_DIAMETER6\"] >= 2.24 && current[\"CABLE_DIAMETER6\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(current[\"CABLE_DIAMETER6\"] >= 2.40 && current[\"CABLE_DIAMETER6\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(current[\"CABLE_DIAMETER6\"] >= 2.86 && current[\"CABLE_DIAMETER6\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(current[\"CABLE_DIAMETER6\"] >= 3.48 && current[\"CABLE_DIAMETER6\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(current[\"CABLE_DIAMETER6\"] >= 4.02 && current[\"CABLE_DIAMETER6\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(current[\"CABLE_DIAMETER6\"] >= 4.52 && current[\"CABLE_DIAMETER6\"] < 4.65 ){\n    wiresize = 6.00;\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1640341246496\", qualityCode: \"1\", value: current[\"LENGTH6\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341303487\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341352128\", qualityCode: \"1\", value: current[\"MACHINE START6\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH6\"]);\n     var currentlen = Number(current[\"LENGTH6\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1640341246496\", qualityCode: \"1\", value: length.toString()},//REASON_OF_STOP\n             { dataPointId: \"1640341303487\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n             { dataPointId: \"1640341352128\", qualityCode: \"1\", value: current[\"MACHINE START6\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 3760,
        "wires": [
            [
                "103398b3ce8b96e0",
                "5d87200f01bf5681"
            ],
            [
                "09ee7d5f1d5a3f0d",
                "65cf14d3d47e64c5"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "58fd5954d5af5053",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "6488984ac609f1d5"
        ],
        "uncaught": false,
        "x": 2150,
        "y": 3720,
        "wires": [
            [
                "e3d7d81759f183ac"
            ]
        ]
    },
    {
        "id": "103398b3ce8b96e0",
        "type": "remove item",
        "z": "e82425116e2bf396",
        "name": "Delete I6 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2650,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "70dfe46d018b917b",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I6Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I6NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1700,
        "y": 3760,
        "wires": [
            [
                "5ee36e0a7bfb825d"
            ]
        ]
    },
    {
        "id": "1bced2022e1b62fb",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I6Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I6NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1700,
        "y": 3800,
        "wires": [
            [
                "5ee36e0a7bfb825d"
            ]
        ]
    },
    {
        "id": "5d87200f01bf5681",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I6Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2610,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "5d619e1e906ac072",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"I6NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3740,
        "wires": [
            [
                "b4a3040f9a2165ca"
            ]
        ]
    },
    {
        "id": "b4a3040f9a2165ca",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "I6Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1450,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "8313189e67d677d8",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I7Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I7NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1700,
        "y": 4440,
        "wires": [
            [
                "abc2a542b557fda1"
            ]
        ]
    },
    {
        "id": "abc2a542b557fda1",
        "type": "get item",
        "z": "e82425116e2bf396",
        "name": "I7 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1920,
        "y": 4480,
        "wires": [
            [
                "c14e3dd42eb71c2b"
            ]
        ]
    },
    {
        "id": "c14e3dd42eb71c2b",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "Read  I7Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2130,
        "y": 4480,
        "wires": [
            [
                "02d313647d932149"
            ]
        ]
    },
    {
        "id": "02d313647d932149",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\n\nvar wiresize = 0.0;\nif(current[\"CABLE_DIAMETER7\"] >= 2.24 && current[\"CABLE_DIAMETER7\"] < 2.37 ){\n    wiresize = 0.75;\n}\nelse if(current[\"CABLE_DIAMETER7\"] >= 2.40 && current[\"CABLE_DIAMETER7\"] < 2.58 ){\n    wiresize = 1.00;\n}\nelse if(current[\"CABLE_DIAMETER7\"] >= 2.86 && current[\"CABLE_DIAMETER7\"] < 3.00 ){\n    wiresize = 1.50;\n}\nelse if(current[\"CABLE_DIAMETER7\"] >= 3.48 && current[\"CABLE_DIAMETER7\"] < 3.65 ){\n    wiresize = 2.50;\n}\nelse if(current[\"CABLE_DIAMETER7\"] >= 4.02 && current[\"CABLE_DIAMETER7\"] < 4.12 ){\n    wiresize = 4.00;\n}\nelse if(current[\"CABLE_DIAMETER7\"] >= 4.52 && current[\"CABLE_DIAMETER7\"] < 4.65 ){\n    wiresize = 6.00;\n}\n\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1640341253191\", qualityCode: \"1\", value: current[\"LENGTH7\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1640341309199\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n        { dataPointId: \"1640341357000\", qualityCode: \"1\", value: current[\"MACHINE START7\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH7\"]);\n     var currentlen = Number(current[\"LENGTH7\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1640341253191\", qualityCode: \"1\", value: length.toString()},//REASON_OF_STOP\n             { dataPointId: \"1640341309199\", qualityCode: \"1\", value: wiresize.toString() },//MACHINE_START\n             { dataPointId: \"1640341357000\", qualityCode: \"1\", value: current[\"MACHINE START7\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 4480,
        "wires": [
            [
                "064c55d8b77e4b78",
                "1c0c1fccf3bb08c6"
            ],
            [
                "e91d50634a7cc6f8",
                "856cef486a0879ab"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "cdb88420c8dd46a5",
        "type": "catch",
        "z": "e82425116e2bf396",
        "name": "",
        "scope": [
            "c14e3dd42eb71c2b"
        ],
        "uncaught": false,
        "x": 2150,
        "y": 4440,
        "wires": [
            [
                "02d313647d932149"
            ]
        ]
    },
    {
        "id": "064c55d8b77e4b78",
        "type": "remove item",
        "z": "e82425116e2bf396",
        "name": "Delete I7 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2650,
        "y": 4420,
        "wires": [
            []
        ]
    },
    {
        "id": "10063d96a14f9234",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I7Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I7NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1700,
        "y": 4480,
        "wires": [
            [
                "abc2a542b557fda1"
            ]
        ]
    },
    {
        "id": "6f5e56b18da3ca7c",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/I7Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"I7NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "58 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1700,
        "y": 4520,
        "wires": [
            [
                "abc2a542b557fda1"
            ]
        ]
    },
    {
        "id": "1c0c1fccf3bb08c6",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "Write I7Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2610,
        "y": 4460,
        "wires": [
            []
        ]
    },
    {
        "id": "19131e9e7d489688",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"I7NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 4460,
        "wires": [
            [
                "843a9d03e124a78e"
            ]
        ]
    },
    {
        "id": "843a9d03e124a78e",
        "type": "set item",
        "z": "e82425116e2bf396",
        "name": "I7Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1450,
        "y": 4460,
        "wires": [
            []
        ]
    },
    {
        "id": "856cef486a0879ab",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 4500,
        "wires": []
    },
    {
        "id": "65cf14d3d47e64c5",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 3780,
        "wires": []
    },
    {
        "id": "49ae7fa619768ff2",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1280,
        "wires": []
    },
    {
        "id": "129cfceb8a1c99c7",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 1",
        "func": "msg.payload = {1: msg._time,\n2: msg._time instanceof Date};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 560,
        "wires": [
            [
                "29d818229a71e91c"
            ]
        ]
    },
    {
        "id": "edd8277a95828668",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 560,
        "wires": []
    },
    {
        "id": "29d818229a71e91c",
        "type": "file",
        "z": "e82425116e2bf396",
        "name": "",
        "filename": "Datecheck",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2510,
        "y": 560,
        "wires": [
            [
                "edd8277a95828668"
            ]
        ]
    },
    {
        "id": "5fb576953692c9d1",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2320,
        "y": 600,
        "wires": [
            [
                "29d818229a71e91c"
            ]
        ]
    },
    {
        "id": "a1a1b50b12fd522f",
        "type": "file in",
        "z": "e82425116e2bf396",
        "name": "",
        "filename": "Datecheck",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2550,
        "y": 660,
        "wires": [
            [
                "edd8277a95828668"
            ]
        ]
    },
    {
        "id": "34735fc52f3bfba2",
        "type": "inject",
        "z": "e82425116e2bf396",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2320,
        "y": 660,
        "wires": [
            [
                "a1a1b50b12fd522f"
            ]
        ]
    },
    {
        "id": "771a4ab63f8588ad",
        "type": "debug",
        "z": "e82425116e2bf396",
        "name": "debug 45",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 140,
        "wires": []
    },
    {
        "id": "a03a9472989ba791",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 12",
        "func": "if (msg.payload[\"MACHINE START1\"] == false)\n{\n    global.set(\"I1\", new Date());\n\n\n}\nif (msg.payload[\"MACHINE START1\"]== true){\n    \n    var previous = global.get(\"I1\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n    if (final > 10) {\n        const values = [\n            //MMW24\n            { dataPointId: \"1681468192839\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP1\"].toString() },\n            { dataPointId: \"1681468208176\", qualityCode: \"1\", value: final.toString() },\n            { dataPointId: \"1681468183380\", qualityCode: \"1\", value: \"I1\" }\n        ];\n        //MMW32-1\n\n\n        msg._time = new Date();\n        msg.payload = values;\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "e51e35c562fc5114"
            ]
        ]
    },
    {
        "id": "a473a5dd2bc99e82",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"MACHINE START1\"]",
        "topi": "topic",
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "a03a9472989ba791"
            ]
        ]
    },
    {
        "id": "e51e35c562fc5114",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1375,
        "y": 480,
        "wires": []
    },
    {
        "id": "ca96bdbdd21eee35",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 13",
        "func": "if (msg.payload[\"MACHINE START2\"] === false)\n{\n    global.set(\"I2\", new Date());\n    msg.payload = global.get(\"I2\");\n    return msg;\n}\nif (msg.payload[\"MACHINE START2\"]== true){\n    \n    var previous = global.get(\"I2\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n    if (final > 10) {\n        const values = [\n            //MMW24\n            { dataPointId: \"1681468192839\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP2\"].toString() },\n            { dataPointId: \"1681468208176\", qualityCode: \"1\", value: final.toString() },\n            { dataPointId: \"1681468183380\", qualityCode: \"1\", value: \"I2\" }\n        ];\n        //MMW32-1\n\n\n        msg._time = new Date();\n        msg.payload = values;\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1340,
        "wires": [
            [
                "aece47835c161af3"
            ]
        ]
    },
    {
        "id": "fc26aab4962bf32d",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"MACHINE START2\"]",
        "topi": "topic",
        "x": 1070,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "aece47835c161af3",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "mode": "link",
        "links": [
            "e25038b33fab932d"
        ],
        "x": 1435,
        "y": 1340,
        "wires": []
    },
    {
        "id": "1ae55eda304e079a",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 14",
        "func": "if (msg.payload[\"MACHINE START3\"] == false)\n{\n    global.set(\"I3\", new Date());\n\n\n}\nif (msg.payload[\"MACHINE START3\"]== true){\n    \n    var previous = global.get(\"I3\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n    if (final > 10) {\n        const values = [\n            //MMW24\n            { dataPointId: \"1681468192839\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP3\"].toString() },\n            { dataPointId: \"1681468208176\", qualityCode: \"1\", value: final.toString() },\n            { dataPointId: \"1681468183380\", qualityCode: \"1\", value: \"I3\" }\n        ];\n        //MMW32-1\n\n\n        msg._time = new Date();\n        msg.payload = values;\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1980,
        "wires": [
            [
                "40867710c057cc1e"
            ]
        ]
    },
    {
        "id": "a97a8fe8f4e41e6c",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[\"MACHINE START3\"]",
        "topi": "topic",
        "x": 1110,
        "y": 1980,
        "wires": [
            [
                "1ae55eda304e079a"
            ]
        ]
    },
    {
        "id": "40867710c057cc1e",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1475,
        "y": 1980,
        "wires": []
    },
    {
        "id": "2bcbcf93d61ca977",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 15",
        "func": "if (msg.payload[\"MACHINE START4\"] == false)\n{\n    global.set(\"I4\", new Date());\n\n\n}\nif (msg.payload[\"MACHINE START4\"]== true){\n    \n    var previous = global.get(\"I4\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n    if (final > 10) {\n        const values = [\n            //MMW24\n            { dataPointId: \"1681468192839\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP4\"].toString() },\n            { dataPointId: \"1681468208176\", qualityCode: \"1\", value: final.toString() },\n            { dataPointId: \"1681468183380\", qualityCode: \"1\", value: \"I4\" }\n        ];\n        //MMW32-1\n\n\n        msg._time = new Date();\n        msg.payload = values;\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2680,
        "wires": [
            [
                "c2b533ebf9739e16"
            ]
        ]
    },
    {
        "id": "656d55951da81382",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[\"MACHINE START4\"]",
        "topi": "topic",
        "x": 1090,
        "y": 2680,
        "wires": [
            [
                "2bcbcf93d61ca977"
            ]
        ]
    },
    {
        "id": "c2b533ebf9739e16",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1455,
        "y": 2680,
        "wires": []
    },
    {
        "id": "fd6885165f21fb96",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 16",
        "func": "if (msg.payload[\"MACHINE START5\"] === false)\n{\n    global.set(\"I5\", new Date());\n\n\n}\nif (msg.payload[\"MACHINE START5\"] === true){\n    \n    var previous = global.get(\"I5\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n    if (final > 10) {\n        const values = [\n            //MMW24\n            { dataPointId: \"1681468192839\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP5\"].toString() },\n            { dataPointId: \"1681468208176\", qualityCode: \"1\", value: final.toString() },\n            { dataPointId: \"1681468183380\", qualityCode: \"1\", value: \"I5\" }\n        ];\n        //MMW32-1\n\n\n        msg._time = new Date();\n        msg.payload = values;\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 3320,
        "wires": [
            [
                "7f4af97c40120b6f"
            ]
        ]
    },
    {
        "id": "3091489c8e1f5565",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[\"MACHINE START5\"]",
        "topi": "topic",
        "x": 1150,
        "y": 3320,
        "wires": [
            [
                "fd6885165f21fb96"
            ]
        ]
    },
    {
        "id": "7f4af97c40120b6f",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1515,
        "y": 3320,
        "wires": []
    },
    {
        "id": "8e6d8137c9b7d908",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 17",
        "func": "if (msg.payload[\"MACHINE START6\"] == false)\n{\n    global.set(\"I6\", new Date());\n\n\n}\nif (msg.payload[\"MACHINE START6\"]== true){\n    \n    var previous = global.get(\"I6\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n    if (final > 10) {\n        const values = [\n            //MMW24\n            { dataPointId: \"1681468192839\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP6\"].toString() },\n            { dataPointId: \"1681468208176\", qualityCode: \"1\", value: final.toString() },\n            { dataPointId: \"1681468183380\", qualityCode: \"1\", value: \"I6\" }\n        ];\n        //MMW32-1\n\n\n        msg._time = new Date();\n        msg.payload = values;\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 3980,
        "wires": [
            [
                "3c37212e6105618e"
            ]
        ]
    },
    {
        "id": "018bb537ccd056a9",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[\"MACHINE START6\"]",
        "topi": "topic",
        "x": 1190,
        "y": 3980,
        "wires": [
            [
                "8e6d8137c9b7d908"
            ]
        ]
    },
    {
        "id": "3c37212e6105618e",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1555,
        "y": 3980,
        "wires": []
    },
    {
        "id": "8f7bbf4671393686",
        "type": "function",
        "z": "e82425116e2bf396",
        "name": "function 18",
        "func": "if (msg.paylod[\"MACHINE START7\"] == false)\n{\n    global.set(\"I7\", new Date());\n\n\n}\nif (msg.payload[\"MACHINE START7\"]== true){\n    \n    var previous = global.get(\"I7\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs / 60000;\n    //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n    if (final > 10) {\n        const values = [\n            //MMW24\n            { dataPointId: \"1681468192839\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP7\"].toString() },\n            { dataPointId: \"1681468208176\", qualityCode: \"1\", value: final.toString() },\n            { dataPointId: \"1681468183380\", qualityCode: \"1\", value: \"I7\" }\n        ];\n        //MMW32-1\n\n\n        msg._time = new Date();\n        msg.payload = values;\n        return msg;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 4740,
        "wires": [
            [
                "8b35426568c6623f"
            ]
        ]
    },
    {
        "id": "19089f2c7ef58b4f",
        "type": "rbe",
        "z": "e82425116e2bf396",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[\"MACHINE START7\"]",
        "topi": "topic",
        "x": 1170,
        "y": 4740,
        "wires": [
            [
                "8f7bbf4671393686"
            ]
        ]
    },
    {
        "id": "8b35426568c6623f",
        "type": "link out",
        "z": "e82425116e2bf396",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1535,
        "y": 4740,
        "wires": []
    },
    {
        "id": "fcd531096f3d2b2e",
        "type": "s7 in",
        "z": "a6ca620fd0ddad19",
        "endpoint": "22e4a0e1.d5074",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Buncher 1",
        "x": 740,
        "y": 180,
        "wires": [
            [
                "fcc30575edae8362",
                "61fddc33de81d8df",
                "22619a1b5d51c480",
                "3ca2f0e0c6722885",
                "0f70c3f32cb83f9a",
                "607c736ae408d33f"
            ]
        ]
    },
    {
        "id": "1c9f8c8490e1c921",
        "type": "s7 in",
        "z": "a6ca620fd0ddad19",
        "endpoint": "54313eb0.07354",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Buncher 4",
        "x": 680,
        "y": 2680,
        "wires": [
            [
                "f6a73b94cddc013a",
                "c66d5f3e34616d49",
                "20525cde9d3c7801",
                "126b6d9d2b854d64",
                "e8bf6fa7cc73f65a"
            ]
        ]
    },
    {
        "id": "ee6d6c8827d443c8",
        "type": "s7 in",
        "z": "a6ca620fd0ddad19",
        "endpoint": "54aeda8e.790844",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Buncher 5",
        "x": 540,
        "y": 3580,
        "wires": [
            [
                "83e0b55b5a01fe6f",
                "f8f953996bf38273",
                "4a8b2cbbb9f8b7c1",
                "7f0c5838d7e31995",
                "f49c249fec96e94f"
            ]
        ]
    },
    {
        "id": "ac1f23af3bf4946c",
        "type": "s7 in",
        "z": "a6ca620fd0ddad19",
        "endpoint": "3747d5ad.4d191a",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Buncher 6",
        "x": 560,
        "y": 4220,
        "wires": [
            [
                "48e6376e3db0e1e5",
                "9a8fa2e3243e4def",
                "8b0bafb4fddcae51",
                "640642482288bec0",
                "7a5d38dd18865b87"
            ]
        ]
    },
    {
        "id": "f7dde02202a5dea7",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 1",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==true){\n    down= global.get(\"Buncher1down\") + 1;\n    global.set(\"Buncher1down\",down);\n    flow.set(\"Buncher_1_len\",msg.payload[\"LENGTH ACTUAL KM1\"].toString());\n    const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00001\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX1\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00001\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT1\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499756660\", qualityCode: \"1\", value: msg.payload[\"LINE SPEED ACT1\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1626499771467\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM21\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00001\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP5\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00001\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM1\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00001\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM1\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00001\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM1\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119377566\", qualityCode: \"1\", value: msg.payload[\"Status\"].toString() },\n    { dataPointId: \"1629542013681\", qualityCode: \"1\", value: \"0\" }\n   ];\n  // global.set(\"Buncher1length\",msg.payload[\"LENGTH ACTUAL KM1\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 220,
        "wires": [
            [
                "ccad19c93f3f8977"
            ]
        ]
    },
    {
        "id": "1fda3266bbab1ff0",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 4",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==true){\n    down= global.get(\"Buncher4down\") + 1;\n    global.set(\"Buncher4down\",down);\n    flow.set(\"Buncher_4_len\",msg.payload[\"LENGTH ACTUAL KM4\"].toString());\n    const values = [\n    //MMW32-2\n    \n  { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00004\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX4\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00004\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT4\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499863410\", qualityCode: \"1\", value: msg.payload[\"LINE SPEED ACT4\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1626499900647\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM24\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00004\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP8\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00004\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM4\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00004\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM4\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00004\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM4\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119410496\", qualityCode: \"1\", value: msg.payload[\"Status\"].toString() },\n    { dataPointId: \"1629542029190\", qualityCode: \"1\", value: \"0\"}\n   ];\n   //global.set(\"Buncher4length\",msg.payload[\"LENGTH ACTUAL KM4\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 2620,
        "wires": [
            [
                "c3d29e0f283e9c99"
            ]
        ]
    },
    {
        "id": "fccb71634515b39a",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 5",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]===true){\n    down= global.get(\"Buncher5down\") + 1;\n    global.set(\"Buncher5down\",down);\n    flow.set(\"Buncher_5_len\",msg.payload[\"LENGTH ACTUAL KM5\"].toString());\n    const values = [\n    //MMW32-2\n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00005\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX5\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00005\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT5\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499870215\", qualityCode: \"1\", value: msg.payload[\"LINE SPEED ACT5\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1626499906784\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM25\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00005\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP9\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00005\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM5\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00005\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM5\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00005\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM5\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119416488\", qualityCode: \"1\", value: msg.payload[\"Status\"].toString() },\n    { dataPointId: \"1629542034564\", qualityCode: \"1\", value: \"0\"}\n   ];\n   //global.set(\"Buncher5length\",msg.payload[\"LENGTH ACTUAL KM5\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 3500,
        "wires": [
            [
                "43e253f328bd0533"
            ]
        ]
    },
    {
        "id": "09a187bcdadabd5f",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 6",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==true){\n    down= global.get(\"Buncher6down\") + 1;\n    global.set(\"Buncher6down\",down);\n    flow.set(\"Buncher_6_len\",msg.payload[\"LENGTH ACTUAL KM6\"].toString());\n    const values = [\n    //MMW32-2\n{ dataPointId: \"DP-TWIST_PER_MINUTE_MAX00006\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX6\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00006\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT6\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499876871\", qualityCode: \"1\", value: msg.payload[\"LINE SPEED ACT6\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1626499912776\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM26\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00006\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP10\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00006\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM6\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00006\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM6\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00006\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM6\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119423392\", qualityCode: \"1\", value: msg.payload[\"Status\"].toString() },\n    { dataPointId: \"1629542039748\", qualityCode: \"1\", value: \"0\"}\n   ];\n   \n   //global.set(\"Buncher6length\",msg.payload[\"LENGTH ACTUAL KM6\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 4140,
        "wires": [
            [
                "e173069f49ee1bbe"
            ]
        ]
    },
    {
        "id": "ccad19c93f3f8977",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1255,
        "y": 240,
        "wires": []
    },
    {
        "id": "c3d29e0f283e9c99",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1275,
        "y": 2640,
        "wires": []
    },
    {
        "id": "43e253f328bd0533",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1075,
        "y": 3500,
        "wires": []
    },
    {
        "id": "e173069f49ee1bbe",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1175,
        "y": 4160,
        "wires": []
    },
    {
        "id": "fcc30575edae8362",
        "type": "trigger",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "f7dde02202a5dea7"
            ]
        ]
    },
    {
        "id": "f6a73b94cddc013a",
        "type": "trigger",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 890,
        "y": 2620,
        "wires": [
            [
                "1fda3266bbab1ff0"
            ]
        ]
    },
    {
        "id": "4a8b2cbbb9f8b7c1",
        "type": "trigger",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 3500,
        "wires": [
            [
                "fccb71634515b39a"
            ]
        ]
    },
    {
        "id": "9a8fa2e3243e4def",
        "type": "trigger",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 830,
        "y": 4140,
        "wires": [
            [
                "09a187bcdadabd5f"
            ]
        ]
    },
    {
        "id": "c66d5f3e34616d49",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "x": 890,
        "y": 2660,
        "wires": [
            [
                "d4d311fc00181051"
            ]
        ]
    },
    {
        "id": "8b0bafb4fddcae51",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "x": 810,
        "y": 4180,
        "wires": [
            [
                "5097efb6833672ab"
            ]
        ]
    },
    {
        "id": "61fddc33de81d8df",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "topi": "topic",
        "x": 930,
        "y": 260,
        "wires": [
            [
                "9291126a48149623"
            ]
        ]
    },
    {
        "id": "1ae4431cca3e206e",
        "type": "s7 in",
        "z": "a6ca620fd0ddad19",
        "endpoint": "c420bee6.05eb8",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Buncher 2",
        "x": 720,
        "y": 1080,
        "wires": [
            [
                "5a3ac635709ceb78",
                "fdafa04458762f38",
                "b74aba29fd47fbde",
                "def293724537cc74",
                "2524ed35d9d80d5d"
            ]
        ]
    },
    {
        "id": "0cedf2ac9687ce0d",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 2",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==true){\n    down= global.get(\"Buncher2down\") + 1;\n    global.set(\"Buncher2down\",down);\n    flow.set(\"Buncher_2_len\",msg.payload[\"LENGTH ACTUAL KM2\"].toString());\n    const values = [\n    //MMW32-2\n    \n   { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00002\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX2\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00002\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT2\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499845034\", qualityCode: \"1\", value: msg.payload[\"LINE SPEED ACT2\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1626499833105\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM22\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00002\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP6\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00002\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM2\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00002\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM2\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00002\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM2\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119388979\", qualityCode: \"1\", value: msg.payload[\"Status\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1629542018836\", qualityCode: \"1\", value: \"0\" }\n   ];\n   //global.set(\"Buncher2length\",msg.payload[\"LENGTH ACTUAL KM2\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\n\n\n   ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1000,
        "wires": [
            [
                "17833fbebf4291c8"
            ]
        ]
    },
    {
        "id": "17833fbebf4291c8",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1285,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5a3ac635709ceb78",
        "type": "trigger",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 930,
        "y": 1000,
        "wires": [
            [
                "0cedf2ac9687ce0d"
            ]
        ]
    },
    {
        "id": "fdafa04458762f38",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "x": 910,
        "y": 1040,
        "wires": [
            [
                "8631fbace39335a4"
            ]
        ]
    },
    {
        "id": "bf01b3a71f4f31c9",
        "type": "s7 in",
        "z": "a6ca620fd0ddad19",
        "endpoint": "94cd6b93.18c038",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Buncher 3",
        "x": 700,
        "y": 1820,
        "wires": [
            [
                "65abc1ebf47ec95e",
                "9ce373156e1306d4",
                "8fc39048fdba5896",
                "015a94b690f82a56",
                "1dcb822f96e3ec86"
            ]
        ]
    },
    {
        "id": "7b8332073982f2fb",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 3",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==true){\n    down= global.get(\"Buncher3down\") + 1;\n    global.set(\"Buncher3down\",down);\n    flow.set(\"Buncher_3_len\",msg.payload[\"LENGTH ACTUAL KM3\"].toString());\n    const values = [\n    //MMW32-2\n    \n   { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00003\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX3\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00003\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT3\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499853026\", qualityCode: \"1\", value: msg.payload[\"LINE SPEED ACT3\"].toString() },//LINE_SPEED_ACT\n    { dataPointId: \"1626499894026\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM23\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00003\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP7\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00003\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM3\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00003\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM3\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00003\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM3\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119401241\", qualityCode: \"1\", value: msg.payload[\"Status\"].toString() },//LAY_LENGTH_MM//LAY_LENGTH_MM\n    { dataPointId: \"1629542023796\", qualityCode: \"1\", value: \"0\" }\n   ];\n   //global.set(\"Buncher3length\",msg.payload[\"LENGTH ACTUAL KM3\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1800,
        "wires": [
            [
                "6c0dbfef78868ab3"
            ]
        ]
    },
    {
        "id": "6c0dbfef78868ab3",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1245,
        "y": 1800,
        "wires": []
    },
    {
        "id": "65abc1ebf47ec95e",
        "type": "trigger",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 950,
        "y": 1800,
        "wires": [
            [
                "7b8332073982f2fb"
            ]
        ]
    },
    {
        "id": "9ce373156e1306d4",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "x": 930,
        "y": 1840,
        "wires": [
            [
                "302d92cc4f1204b9"
            ]
        ]
    },
    {
        "id": "8631fbace39335a4",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 2 stop",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==false){\n    \n    flow.set(\"Buncher_2_len\",msg.payload[\"LENGTH ACTUAL KM2\"].toString());\n    const values = [\n    //MMW32-2\n    \n   { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00002\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX2\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00002\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT2\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499845034\", qualityCode: \"1\", value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1626499833105\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM22\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00002\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP6\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00002\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM2\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00002\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM2\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00002\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM2\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119388979\", qualityCode: \"1\", value: \"false\" },//LAY_LENGTH_MM\n    { dataPointId: \"1629542018836\", qualityCode: \"1\", value: \"0\" }\n   ];\n   //global.set(\"Buncher2length\",msg.payload[\"LENGTH ACTUAL KM2\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\n\n\n    //MMW32-1\n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1040,
        "wires": [
            [
                "17833fbebf4291c8"
            ]
        ]
    },
    {
        "id": "9291126a48149623",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 1 stop",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==false){\n    \n    flow.set(\"Buncher_1_len\",msg.payload[\"LENGTH ACTUAL KM1\"].toString());\n    const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00001\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX1\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00001\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT1\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499756660\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1626499771467\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM21\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00001\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP5\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00001\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM1\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00001\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM1\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00001\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM1\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119377566\", qualityCode: \"1\", value: \"false\"},\n    { dataPointId: \"1629542013681\", qualityCode: \"1\", value: \"0\" }\n   ];\n  // global.set(\"Buncher1length\",msg.payload[\"LENGTH ACTUAL KM1\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 260,
        "wires": [
            [
                "ccad19c93f3f8977"
            ]
        ]
    },
    {
        "id": "302d92cc4f1204b9",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 3 stop",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==false){\n    \n     flow.set(\"Buncher_3_len\",msg.payload[\"LENGTH ACTUAL KM3\"].toString());\n    const values = [\n    //MMW32-2\n    \n   { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00003\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX3\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00003\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT3\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499853026\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1626499894026\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM23\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00003\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP7\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00003\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM3\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00003\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM3\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00003\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM3\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119401241\", qualityCode: \"1\", value: \"false\"},//LAY_LENGTH_MM//LAY_LENGTH_MM\n    { dataPointId: \"1629542023796\", qualityCode: \"1\", value: \"0\" }\n   ];\n   //global.set(\"Buncher3length\",msg.payload[\"LENGTH ACTUAL KM3\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1840,
        "wires": [
            [
                "6c0dbfef78868ab3"
            ]
        ]
    },
    {
        "id": "d4d311fc00181051",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 4 stop",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==false){\n   flow.set(\"Buncher_4_len\",msg.payload[\"LENGTH ACTUAL KM4\"].toString());\n    \n    const values = [\n    //MMW32-2\n    \n  { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00004\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX4\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00004\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT4\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499863410\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1626499900647\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM24\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00004\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP8\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00004\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM4\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00004\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM4\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00004\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM4\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119410496\", qualityCode: \"1\", value:\"false\" },\n    { dataPointId: \"1629542029190\", qualityCode: \"1\", value: \"0\" }\n   ];\n   //global.set(\"Buncher4length\",msg.payload[\"LENGTH ACTUAL KM4\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2660,
        "wires": [
            [
                "c3d29e0f283e9c99"
            ]
        ]
    },
    {
        "id": "5097efb6833672ab",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Buncher 6 stop",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]==false){\n    \n    flow.set(\"Buncher_6_len\",msg.payload[\"LENGTH ACTUAL KM6\"].toString());\n    const values = [\n    //MMW32-2\n{ dataPointId: \"DP-TWIST_PER_MINUTE_MAX00006\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX6\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00006\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT6\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499876871\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1626499912776\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM26\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00006\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP10\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00006\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM6\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00006\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM6\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00006\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM6\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119423392\", qualityCode: \"1\", value:\"false\" },\n    { dataPointId: \"1629542039748\", qualityCode: \"1\", value: \"0\" }\n   ];\n   \n   //global.set(\"Buncher6length\",msg.payload[\"LENGTH ACTUAL KM6\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 4180,
        "wires": [
            [
                "e173069f49ee1bbe"
            ]
        ]
    },
    {
        "id": "f8f953996bf38273",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "x": 730,
        "y": 3540,
        "wires": [
            [
                "2893f4ba8e6709ce"
            ]
        ]
    },
    {
        "id": "2893f4ba8e6709ce",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Bunchar 5 stop",
        "func": "var bool = [\"true\",\"false\"];\nvar down;\nvar msg1 = null;\nif(msg.payload[\"Status\"]===false){\n    flow.set(\"Buncher_5_len\",msg.payload[\"LENGTH ACTUAL KM5\"].toString());\n    const values = [\n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00005\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE MAX5\"].toString()},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00005\", qualityCode: \"1\", value: msg.payload[\"TWIST PER MINUTE ACT5\"].toString() },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499870215\", qualityCode: \"1\", value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1626499906784\", qualityCode: \"1\", value: msg.payload[\"WIRE SIZE MM25\"].toString() },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00005\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP9\"].toString() },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00005\", qualityCode: \"1\", value: msg.payload[\"LENGTH SET KM5\"].toString() },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00005\", qualityCode: \"1\", value: msg.payload[\"LENGTH ACTUAL KM5\"].toString() },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00005\", qualityCode: \"1\", value: msg.payload[\"LAY LENGTH MM5\"].toString() },//LAY_LENGTH_MM\n    { dataPointId: \"1627119416488\", qualityCode: \"1\", value: \"false\"},\n    { dataPointId: \"1629542034564\", qualityCode: \"1\", value: \"0\" }\n   ];\n   //global.set(\"Buncher5length\",msg.payload[\"LENGTH ACTUAL KM5\"]);\n   \n   msg._time = new Date();\nmsg.payload = values;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 3540,
        "wires": [
            [
                "43e253f328bd0533"
            ]
        ]
    },
    {
        "id": "e2a23003266c9602",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2415,
        "y": 380,
        "wires": []
    },
    {
        "id": "514e375e68ed5ce3",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2415,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c3455000e72bc117",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2455,
        "y": 1980,
        "wires": []
    },
    {
        "id": "39c87186eb2a3bb9",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2315,
        "y": 2820,
        "wires": []
    },
    {
        "id": "aec5fabdfadf8da2",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2155,
        "y": 3720,
        "wires": []
    },
    {
        "id": "5b65361bc68a48ec",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 2245,
        "y": 4360,
        "wires": []
    },
    {
        "id": "ce82b7c73f39c55c",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "0276a9f06888334c"
        ],
        "uncaught": false,
        "x": 1570,
        "y": 4340,
        "wires": [
            [
                "82b9d7245187ca31"
            ]
        ]
    },
    {
        "id": "0276a9f06888334c",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read B6shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1550,
        "y": 4380,
        "wires": [
            [
                "82b9d7245187ca31"
            ]
        ]
    },
    {
        "id": "82b9d7245187ca31",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1639476886189\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM26\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476895097\", qualityCode: \"1\", value: previous[\"LENGTH ACTUAL KM6\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476874833\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH ACTUAL KM6\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM6\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [// ########## Remove when connecting to Mindsphere ################\n        { dataPointId: \"1639476886189\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM26\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476895097\", qualityCode: \"1\", value: spoollen.toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476874833\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH ACTUAL KM6\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 4360,
        "wires": [
            [
                "65ff4e5943134023"
            ],
            [
                "5b65361bc68a48ec"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "48e6376e3db0e1e5",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_B6\"};\nmsg.filename = \"/home/unit7iiot/node-red/B6Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 4320,
        "wires": [
            [
                "1028ac99246a360b"
            ]
        ]
    },
    {
        "id": "1028ac99246a360b",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B6 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1040,
        "y": 4320,
        "wires": [
            [
                "28c12f6286b436a3"
            ]
        ]
    },
    {
        "id": "28c12f6286b436a3",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_B6\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH ACTUAL KM6\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM6\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_B6\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 4320,
        "wires": [
            [
                "992078af207db2a3"
            ],
            [
                "0276a9f06888334c"
            ]
        ]
    },
    {
        "id": "992078af207db2a3",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "Set B6 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1590,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "65ff4e5943134023",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B6Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2050,
        "y": 4320,
        "wires": [
            []
        ]
    },
    {
        "id": "537144e9a70210d4",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "2eac4089ca537375"
        ],
        "uncaught": false,
        "x": 1490,
        "y": 3700,
        "wires": [
            [
                "eb4cf24450cd5e31"
            ]
        ]
    },
    {
        "id": "2eac4089ca537375",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read B5shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1470,
        "y": 3740,
        "wires": [
            [
                "eb4cf24450cd5e31"
            ]
        ]
    },
    {
        "id": "eb4cf24450cd5e31",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\n\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1639476854357\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM25\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476862303\", qualityCode: \"1\", value: previous[\"LENGTH ACTUAL KM5\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476841006\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH ACTUAL KM5\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM5\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [// ########## Remove when connecting to Mindsphere ################\n        { dataPointId: \"1639476854357\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM25\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476862303\", qualityCode: \"1\", value: spoollen.toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476841006\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH ACTUAL KM5\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 3720,
        "wires": [
            [
                "8000c8c00d10dcd0"
            ],
            [
                "aec5fabdfadf8da2"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "83e0b55b5a01fe6f",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_B5\"};\nmsg.filename = \"/home/unit7iiot/node-red/B5Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 3680,
        "wires": [
            [
                "faf3d6932a11e0a5"
            ]
        ]
    },
    {
        "id": "faf3d6932a11e0a5",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B5 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 960,
        "y": 3680,
        "wires": [
            [
                "f0b7720f2263d4d2"
            ]
        ]
    },
    {
        "id": "f0b7720f2263d4d2",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_B5\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH ACTUAL KM5\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM5\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_B5\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3680,
        "wires": [
            [
                "c27693cff37246d3"
            ],
            [
                "2eac4089ca537375"
            ]
        ]
    },
    {
        "id": "c27693cff37246d3",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "Set B5 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1510,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "8000c8c00d10dcd0",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B5Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1950,
        "y": 3680,
        "wires": [
            []
        ]
    },
    {
        "id": "b2ccca11347a52ac",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "0bf09b10bb2131e9"
        ],
        "uncaught": false,
        "x": 1630,
        "y": 2800,
        "wires": [
            [
                "1b24720216197f54"
            ]
        ]
    },
    {
        "id": "0bf09b10bb2131e9",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read B4shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1610,
        "y": 2840,
        "wires": [
            [
                "1b24720216197f54"
            ]
        ]
    },
    {
        "id": "1b24720216197f54",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// msg.payload = JSON.parse(msg.payload)\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    // msg.payload = true;\n    // node.send([null, msg])\n    const values = [\n        { dataPointId: \"1639476822035\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM24\"].toString() },//WIRE_SIZE_MM2\n         { dataPointId: \"1639476831367\", qualityCode: \"1\", value: previous[\"LENGTH ACTUAL KM4\"].toString() },//LENGTH_ACTUAL_KM\n         { dataPointId: \"1639476810135\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    msg.payload = JSON.parse(msg.payload);\n    var lshiftlen = Number(msg.payload[\"LENGTH ACTUAL KM4\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM4\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [ // ########## Remove when connecting to Mindsphere ################\n        { dataPointId: \"1639476822035\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM24\"].toString() },//WIRE_SIZE_MM2\n         { dataPointId: \"1639476831367\", qualityCode: \"1\", value: spoollen.toString() },//LENGTH_ACTUAL_KM\n         { dataPointId: \"1639476810135\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH ACTUAL KM4\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 2820,
        "wires": [
            [
                "e71bb2b9c0b839b3"
            ],
            [
                "39c87186eb2a3bb9"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "20525cde9d3c7801",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_B4\"};\nmsg.filename = \"/home/unit7iiot/node-red/B4Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2780,
        "wires": [
            [
                "3f924c13fbba65a4"
            ]
        ]
    },
    {
        "id": "3f924c13fbba65a4",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B4 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1100,
        "y": 2780,
        "wires": [
            [
                "311a9a54d81dc5bf"
            ]
        ]
    },
    {
        "id": "311a9a54d81dc5bf",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_B4\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH ACTUAL KM4\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM4\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_B4\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 2780,
        "wires": [
            [
                "b917b786811c29eb"
            ],
            [
                "0bf09b10bb2131e9"
            ]
        ]
    },
    {
        "id": "b917b786811c29eb",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "Set B4 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1650,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "e71bb2b9c0b839b3",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B4Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2130,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "a605415a67be665d",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "c679e0d56ecdebf6"
        ],
        "uncaught": false,
        "x": 1690,
        "y": 1960,
        "wires": [
            [
                "23604e3e03c74b18"
            ]
        ]
    },
    {
        "id": "c679e0d56ecdebf6",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read B3shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1670,
        "y": 2000,
        "wires": [
            [
                "23604e3e03c74b18"
            ]
        ]
    },
    {
        "id": "23604e3e03c74b18",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\n\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1639476767077\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM23\"].toString() },//WIRE_SIZE_MM2\n            { dataPointId: \"1639476775340\", qualityCode: \"1\", value: previous[\"LENGTH ACTUAL KM3\"].toString() },//LENGTH_ACTUAL_KM\n            { dataPointId: \"1639476748816\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH ACTUAL KM3\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM3\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1639476767077\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM23\"].toString() },//WIRE_SIZE_MM2\n            { dataPointId: \"1639476775340\", qualityCode: \"1\", value: spoollen.toString() },//LENGTH_ACTUAL_KM\n            { dataPointId: \"1639476748816\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH ACTUAL KM3\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 1980,
        "wires": [
            [
                "1bee2820559b3022"
            ],
            [
                "c3455000e72bc117"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "8fc39048fdba5896",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_B3\"};\nmsg.filename = \"/home/unit7iiot/node-red/B3Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1940,
        "wires": [
            [
                "15729f9a63cbff97"
            ]
        ]
    },
    {
        "id": "15729f9a63cbff97",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B3 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1160,
        "y": 1940,
        "wires": [
            [
                "a0e1139be6242c33"
            ]
        ]
    },
    {
        "id": "a0e1139be6242c33",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_B3\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH ACTUAL KM3\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM3\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_B3\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1940,
        "wires": [
            [
                "2f3ee69fb643e364"
            ],
            [
                "c679e0d56ecdebf6"
            ]
        ]
    },
    {
        "id": "2f3ee69fb643e364",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "Set B3 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1710,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "1bee2820559b3022",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B3Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2170,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "9fe6fc4e0434dbb2",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "70139380cf59452a"
        ],
        "uncaught": false,
        "x": 1630,
        "y": 1200,
        "wires": [
            [
                "b405032d0c5465f1"
            ]
        ]
    },
    {
        "id": "70139380cf59452a",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read B2shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1610,
        "y": 1240,
        "wires": [
            [
                "b405032d0c5465f1"
            ]
        ]
    },
    {
        "id": "b405032d0c5465f1",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\n\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])    \n    const values = [\n        { dataPointId: \"1639476303942\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM22\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476311119\", qualityCode: \"1\", value: previous[\"LENGTH ACTUAL KM2\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476294507\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH ACTUAL KM2\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM2\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1639476303942\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM22\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476311119\", qualityCode: \"1\", value: spoollen.toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476294507\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH ACTUAL KM2\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1220,
        "wires": [
            [
                "dec4398800c42655"
            ],
            [
                "2fafd46e437e0be0",
                "514e375e68ed5ce3"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "b74aba29fd47fbde",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_B2\"};\nmsg.filename = \"/home/unit7iiot/node-red/B2Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1180,
        "wires": [
            [
                "934165f2cacdbcfc"
            ]
        ]
    },
    {
        "id": "934165f2cacdbcfc",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B2 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1100,
        "y": 1180,
        "wires": [
            [
                "88c669a89d3701cc"
            ]
        ]
    },
    {
        "id": "88c669a89d3701cc",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_B2\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH ACTUAL KM2\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM2\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_B2\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1180,
        "wires": [
            [
                "a0f9ea63ce1809ed"
            ],
            [
                "70139380cf59452a"
            ]
        ]
    },
    {
        "id": "a0f9ea63ce1809ed",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "Set B2 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1650,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "dec4398800c42655",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B2Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2170,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "2fafd46e437e0be0",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "filename": "/home/unit7iiot/node-red/Test13.js",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2180,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "501a7f0c49ceb7e5",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "7af44be4ed48d060"
        ],
        "uncaught": false,
        "x": 1690,
        "y": 360,
        "wires": [
            [
                "6e78f65c12b1695c"
            ]
        ]
    },
    {
        "id": "7af44be4ed48d060",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read B1shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1670,
        "y": 400,
        "wires": [
            [
                "6e78f65c12b1695c"
            ]
        ]
    },
    {
        "id": "6e78f65c12b1695c",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Send data to Mindsphere ",
        "func": "var previous = msg.spoolchange[\"previous\"];\n\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    const values = [\n        { dataPointId: \"1639476269805\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM21\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1639476284646\", qualityCode: \"1\", value: previous[\"LENGTH ACTUAL KM1\"].toString() },//MACHINE_START\n        { dataPointId: \"1639476257510\", qualityCode: \"1\", value: previous[\"Status\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    msg.payload = previous;\n    node.send([msg, null])\n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    var lshiftlen = Number(msg.payload[\"LENGTH ACTUAL KM1\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM1\"]);\n    var spoollen = previouslen - lshiftlen;\n    const values = [\n        { dataPointId: \"1639476269805\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM21\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1639476284646\", qualityCode: \"1\", value: spoollen.toString() },//MACHINE_START\n        { dataPointId: \"1639476257510\", qualityCode: \"1\", value: previous[\"Status\"].toString() }//ACTUAL_LENGTH\n        ];\n    msg.payload = values;\n    msg._time = new Date()\n    node.send([null, msg])\n    previous[\"LENGTH ACTUAL KM1\"] = 0;\n    msg.payload = previous;\n    node.send([msg, null])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 380,
        "wires": [
            [
                "7e69c3bcebb7fd2d"
            ],
            [
                "555c94686c9991df",
                "e2a23003266c9602"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "22619a1b5d51c480",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_B1\"};\nmsg.filename = \"/home/unit7iiot/node-red/B1Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 340,
        "wires": [
            [
                "fc3edc812df2c2d7"
            ]
        ]
    },
    {
        "id": "fc3edc812df2c2d7",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B1 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1160,
        "y": 340,
        "wires": [
            [
                "920c10f26efba9d7"
            ]
        ]
    },
    {
        "id": "920c10f26efba9d7",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage ;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_B1\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    var currentlen = Number(current[\"LENGTH ACTUAL KM1\"]);\n    var previouslen = Number(previous[\"LENGTH ACTUAL KM1\"]);\n\n    if(currentlen < previouslen){\n        msg.spoolchange = {\n            \"current\": current,\n            \"previous\": previous\n        }\n        \n        node.send([null, msg])\n    }\n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_B1\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 340,
        "wires": [
            [
                "ec6ed8306fab1ef9"
            ],
            [
                "7af44be4ed48d060"
            ]
        ]
    },
    {
        "id": "ec6ed8306fab1ef9",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "Set B2 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1690,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7e69c3bcebb7fd2d",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B1Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2190,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "555c94686c9991df",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "filename": "/home/unit7iiot/node-red/Test14.js",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2230,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f6611b5a9776a5de",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3110,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7a371c409a17270d",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "var Test = msg.toString();\nmsg.payload = Test;\nmsg.topic = \"Buncher\"\nmsg.filename = \"/home/unit7iiot/node-red/ErrorAll.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2940,
        "y": 100,
        "wires": [
            [
                "f6611b5a9776a5de"
            ]
        ]
    },
    {
        "id": "3ca2f0e0c6722885",
        "type": "debug",
        "z": "a6ca620fd0ddad19",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 180,
        "wires": []
    },
    {
        "id": "0f70c3f32cb83f9a",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Set Current Data",
        "func": "msg.payload._time = new Date()\nmsg.localStorage = {\n    \"key\": \"B1NowData\",\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 140,
        "wires": [
            [
                "e2e37a2ee49c1615"
            ]
        ]
    },
    {
        "id": "e2e37a2ee49c1615",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "B1 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "fc6655fa5fa28f55",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B1Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B1NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1530,
        "y": 140,
        "wires": [
            [
                "d6a3f238066b9499",
                "c977818ac1b10d25"
            ]
        ]
    },
    {
        "id": "d6a3f238066b9499",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B1 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1760,
        "y": 180,
        "wires": [
            [
                "5544bcd7611b9a76"
            ]
        ]
    },
    {
        "id": "bb6bcd70aae965c3",
        "type": "debug",
        "z": "a6ca620fd0ddad19",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2450,
        "y": 220,
        "wires": []
    },
    {
        "id": "5544bcd7611b9a76",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read  B1Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1960,
        "y": 180,
        "wires": [
            [
                "450482777b1cc7ba"
            ]
        ]
    },
    {
        "id": "450482777b1cc7ba",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    //Write current data to the last shift data file\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1639476269805\", qualityCode: \"1\", value: current[\"WIRE SIZE MM21\"].toString()},//REASON_OF_STOP\n        { dataPointId: \"1639476284646\", qualityCode: \"1\", value: current[\"LENGTH ACTUAL KM1\"].toString() },//MACHINE_START\n        { dataPointId: \"1639476257510\", qualityCode: \"1\", value: current[\"Status\"].toString() }//ACTUAL_LENGTH\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = current._time;\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH ACTUAL KM1\"]);\n     var currentlen = Number(current[\"LENGTH ACTUAL KM1\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n            { dataPointId: \"1639476269805\", qualityCode: \"1\", value: current[\"WIRE SIZE MM21\"].toString()},//REASON_OF_STOP\n            { dataPointId: \"1639476284646\", qualityCode: \"1\", value: length.toString() },//MACHINE_START\n            { dataPointId: \"1639476257510\", qualityCode: \"1\", value: current[\"Status\"].toString() }//ACTUAL_LENGTH\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 180,
        "wires": [
            [
                "a05d22e75a7cdf60",
                "fb7a56ed7d58b4fc"
            ],
            [
                "bb6bcd70aae965c3",
                "e2a23003266c9602"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "9b91b5f30c3f1aba",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "5544bcd7611b9a76"
        ],
        "uncaught": false,
        "x": 1980,
        "y": 140,
        "wires": [
            [
                "450482777b1cc7ba"
            ]
        ]
    },
    {
        "id": "a05d22e75a7cdf60",
        "type": "remove item",
        "z": "a6ca620fd0ddad19",
        "name": "Delete B1 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2480,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9a52f6460bf1b6a3",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B1Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B1NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1530,
        "y": 180,
        "wires": [
            [
                "d6a3f238066b9499",
                "c977818ac1b10d25"
            ]
        ]
    },
    {
        "id": "fd439d8a6aa87734",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B1Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B1NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1530,
        "y": 220,
        "wires": [
            [
                "d6a3f238066b9499",
                "c977818ac1b10d25"
            ]
        ]
    },
    {
        "id": "fb7a56ed7d58b4fc",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B1Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2440,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "def293724537cc74",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Set Current Data",
        "func": "//Record the time of data generation\nmsg.payload._time = new Date()\n//Wirte the data to the localStorage\nmsg.localStorage = {\n    \"key\": \"B2NowData\", // Change the key value to match the Machine name.\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 960,
        "wires": [
            [
                "3ddcfc6e0fa45911"
            ]
        ]
    },
    {
        "id": "3ddcfc6e0fa45911",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "B2 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1190,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "58e739cc61d66568",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B2Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B2NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1580,
        "y": 920,
        "wires": [
            [
                "a9b7a20ac671e4f7",
                "582bf06cb8115d68"
            ]
        ]
    },
    {
        "id": "a9b7a20ac671e4f7",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B2 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1810,
        "y": 960,
        "wires": [
            [
                "1ed8625b8608b71f"
            ]
        ]
    },
    {
        "id": "4ce8adb77f648450",
        "type": "debug",
        "z": "a6ca620fd0ddad19",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2500,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1ed8625b8608b71f",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read  B2Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2010,
        "y": 960,
        "wires": [
            [
                "c2d4d0037cc5810f"
            ]
        ]
    },
    {
        "id": "c2d4d0037cc5810f",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1639476303942\", qualityCode: \"1\", value: current[\"WIRE SIZE MM22\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476311119\", qualityCode: \"1\", value: current[\"LENGTH ACTUAL KM2\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476294507\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH ACTUAL KM2\"]);\n     var currentlen = Number(current[\"LENGTH ACTUAL KM2\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n            { dataPointId: \"1639476303942\", qualityCode: \"1\", value: current[\"WIRE SIZE MM22\"].toString() },//WIRE_SIZE_MM2\n            { dataPointId: \"1639476311119\", qualityCode: \"1\", value: length.toString() },//LENGTH_ACTUAL_KM\n            { dataPointId: \"1639476294507\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg, null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 960,
        "wires": [
            [
                "1a33ef7a42a74ce3",
                "ff9a51b0573ade32"
            ],
            [
                "4ce8adb77f648450",
                "514e375e68ed5ce3"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "6c022fcd61b0ee22",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "1ed8625b8608b71f"
        ],
        "uncaught": false,
        "x": 2030,
        "y": 920,
        "wires": [
            [
                "c2d4d0037cc5810f"
            ]
        ]
    },
    {
        "id": "1a33ef7a42a74ce3",
        "type": "remove item",
        "z": "a6ca620fd0ddad19",
        "name": "Delete B2 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2530,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "542f10737a59a24c",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B2Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B2NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1580,
        "y": 960,
        "wires": [
            [
                "a9b7a20ac671e4f7",
                "582bf06cb8115d68"
            ]
        ]
    },
    {
        "id": "ad870ecd8dd135d5",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B2Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B2NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1580,
        "y": 1000,
        "wires": [
            [
                "a9b7a20ac671e4f7",
                "582bf06cb8115d68"
            ]
        ]
    },
    {
        "id": "ff9a51b0573ade32",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B2Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2490,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "015a94b690f82a56",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Set Current Data",
        "func": "//Record the time of data generation\nmsg.payload._time = new Date()\n//Wirte the data to the localStorage\nmsg.localStorage = {\n    \"key\": \"B3NowData\", // Change the key value to match the Machine name.\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1760,
        "wires": [
            [
                "28aa61c123ddd099"
            ]
        ]
    },
    {
        "id": "28aa61c123ddd099",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "B3 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1210,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "aa0d1b6a2fd6ecad",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B3Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B3NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1460,
        "y": 1760,
        "wires": [
            [
                "2ae06867fac26910",
                "a1b6d2aec5cd12b0"
            ]
        ]
    },
    {
        "id": "2ae06867fac26910",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B3 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1690,
        "y": 1800,
        "wires": [
            [
                "bcd4fabd048c02a3"
            ]
        ]
    },
    {
        "id": "d32a46a2c0243a3a",
        "type": "debug",
        "z": "a6ca620fd0ddad19",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 1840,
        "wires": []
    },
    {
        "id": "bcd4fabd048c02a3",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read  B3Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1890,
        "y": 1800,
        "wires": [
            [
                "b57c4531abaded25"
            ]
        ]
    },
    {
        "id": "b57c4531abaded25",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n//When deployed for the firest time, files donot exist, hence this if statement logs current data to Mindsphere and makes a file\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1639476767077\", qualityCode: \"1\", value: current[\"WIRE SIZE MM23\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476775340\", qualityCode: \"1\", value: current[\"LENGTH ACTUAL KM3\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476748816\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH ACTUAL KM3\"]);\n     var currentlen = Number(current[\"LENGTH ACTUAL KM3\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n            { dataPointId: \"1639476767077\", qualityCode: \"1\", value: current[\"WIRE SIZE MM23\"].toString() },//WIRE_SIZE_MM2\n            { dataPointId: \"1639476775340\", qualityCode: \"1\", value: length.toString() },//LENGTH_ACTUAL_KM\n            { dataPointId: \"1639476748816\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 1800,
        "wires": [
            [
                "600690532fdfaef6",
                "076c279b0cfb91b3"
            ],
            [
                "d32a46a2c0243a3a",
                "c3455000e72bc117"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "776a658a2c818a1d",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "bcd4fabd048c02a3"
        ],
        "uncaught": false,
        "x": 1910,
        "y": 1760,
        "wires": [
            [
                "b57c4531abaded25"
            ]
        ]
    },
    {
        "id": "600690532fdfaef6",
        "type": "remove item",
        "z": "a6ca620fd0ddad19",
        "name": "Delete B3 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2410,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "4058a79e7ca09be2",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B3Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B3NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1460,
        "y": 1800,
        "wires": [
            [
                "2ae06867fac26910",
                "a1b6d2aec5cd12b0"
            ]
        ]
    },
    {
        "id": "1d2680c9d1d4253d",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B3Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B3NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1460,
        "y": 1840,
        "wires": [
            [
                "2ae06867fac26910",
                "a1b6d2aec5cd12b0"
            ]
        ]
    },
    {
        "id": "076c279b0cfb91b3",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B3Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2370,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "82a3719599009378",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B4Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B4NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1420,
        "y": 2560,
        "wires": [
            [
                "860474c709568ad9",
                "ffcca14d92fc9a17"
            ]
        ]
    },
    {
        "id": "860474c709568ad9",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B4 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1650,
        "y": 2600,
        "wires": [
            [
                "57081260e9a5c9e3"
            ]
        ]
    },
    {
        "id": "9ed5533f6a857c48",
        "type": "debug",
        "z": "a6ca620fd0ddad19",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2340,
        "y": 2640,
        "wires": []
    },
    {
        "id": "57081260e9a5c9e3",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read  B4Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1850,
        "y": 2600,
        "wires": [
            [
                "ef2ec3c778de6efa"
            ]
        ]
    },
    {
        "id": "ef2ec3c778de6efa",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [ \n        { dataPointId: \"1639476822035\", qualityCode: \"1\", value: current[\"WIRE SIZE MM24\"].toString() },//WIRE_SIZE_MM2\n         { dataPointId: \"1639476831367\", qualityCode: \"1\", value: current[\"LENGTH ACTUAL KM4\"].toString() },//LENGTH_ACTUAL_KM\n         { dataPointId: \"1639476810135\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH ACTUAL KM4\"]);\n     var currentlen = Number(current[\"LENGTH ACTUAL KM4\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n            { dataPointId: \"1639476822035\", qualityCode: \"1\", value: current[\"WIRE SIZE MM24\"].toString() },//WIRE_SIZE_MM2\n            { dataPointId: \"1639476831367\", qualityCode: \"1\", value: length.toString() },//LENGTH_ACTUAL_KM\n            { dataPointId: \"1639476810135\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 2600,
        "wires": [
            [
                "6c1ced8012dec28b",
                "d0f3c60e372a8f24"
            ],
            [
                "9ed5533f6a857c48",
                "39c87186eb2a3bb9"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "43334bed9ae5f515",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "57081260e9a5c9e3"
        ],
        "uncaught": false,
        "x": 1870,
        "y": 2560,
        "wires": [
            [
                "ef2ec3c778de6efa"
            ]
        ]
    },
    {
        "id": "6c1ced8012dec28b",
        "type": "remove item",
        "z": "a6ca620fd0ddad19",
        "name": "Delete B4 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2370,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "fb719861f6598294",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B4Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B4NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1420,
        "y": 2600,
        "wires": [
            [
                "860474c709568ad9",
                "ffcca14d92fc9a17"
            ]
        ]
    },
    {
        "id": "1beba7d9d83ae076",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B4Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B4NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1420,
        "y": 2640,
        "wires": [
            [
                "860474c709568ad9",
                "ffcca14d92fc9a17"
            ]
        ]
    },
    {
        "id": "d0f3c60e372a8f24",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B4Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "126b6d9d2b854d64",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Set Current Data",
        "func": "//Record the time of data generation\nmsg.payload._time = new Date()\n//Wirte the data to the localStorage\nmsg.localStorage = {\n    \"key\": \"B4NowData\", // Change the key value to match the Machine name.\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 2580,
        "wires": [
            [
                "4356e2e02a2044a9"
            ]
        ]
    },
    {
        "id": "4356e2e02a2044a9",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "B4 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1150,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "70ebf7033ca93d47",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B5Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B5NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1280,
        "y": 3440,
        "wires": [
            [
                "c604625705e96f9d",
                "17b03da8a098a87b"
            ]
        ]
    },
    {
        "id": "c604625705e96f9d",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B5 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1510,
        "y": 3480,
        "wires": [
            [
                "388ef97c0c7b0759"
            ]
        ]
    },
    {
        "id": "7f033bc53ab09d53",
        "type": "debug",
        "z": "a6ca620fd0ddad19",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2200,
        "y": 3520,
        "wires": []
    },
    {
        "id": "388ef97c0c7b0759",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read  B5Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1710,
        "y": 3480,
        "wires": [
            [
                "21037024980c26d0"
            ]
        ]
    },
    {
        "id": "21037024980c26d0",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [ \n        { dataPointId: \"1639476854357\", qualityCode: \"1\", value: current[\"WIRE SIZE MM25\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476862303\", qualityCode: \"1\", value: current[\"LENGTH ACTUAL KM5\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476841006\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH ACTUAL KM5\"]);\n     var currentlen = Number(current[\"LENGTH ACTUAL KM5\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [\n             { dataPointId: \"1639476854357\", qualityCode: \"1\", value: current[\"WIRE SIZE MM25\"].toString() },//WIRE_SIZE_MM2\n            { dataPointId: \"1639476862303\", qualityCode: \"1\", value: length.toString() },//LENGTH_ACTUAL_KM\n            { dataPointId: \"1639476841006\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 3480,
        "wires": [
            [
                "c86464fb411bbf88",
                "6c6fc65ca2b90009"
            ],
            [
                "7f033bc53ab09d53",
                "aec5fabdfadf8da2"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "1f33b2cea15ede0a",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "388ef97c0c7b0759"
        ],
        "uncaught": false,
        "x": 1730,
        "y": 3440,
        "wires": [
            [
                "21037024980c26d0"
            ]
        ]
    },
    {
        "id": "c86464fb411bbf88",
        "type": "remove item",
        "z": "a6ca620fd0ddad19",
        "name": "Delete B5 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2230,
        "y": 3420,
        "wires": [
            []
        ]
    },
    {
        "id": "34cccfd86a4d3573",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B5Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B5NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1280,
        "y": 3480,
        "wires": [
            [
                "c604625705e96f9d",
                "17b03da8a098a87b"
            ]
        ]
    },
    {
        "id": "a0defbfe1bf3ec27",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B5Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B5NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1280,
        "y": 3520,
        "wires": [
            [
                "c604625705e96f9d",
                "17b03da8a098a87b"
            ]
        ]
    },
    {
        "id": "6c6fc65ca2b90009",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B5Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2190,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "7f0c5838d7e31995",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Set Current Data",
        "func": "//Record the time of data generation\nmsg.payload._time = new Date()\n//Wirte the data to the localStorage\nmsg.localStorage = {\n    \"key\": \"B5NowData\", // Change the key value to match the Machine name.\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 3460,
        "wires": [
            [
                "9238e63d7e4eff63"
            ]
        ]
    },
    {
        "id": "9238e63d7e4eff63",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "B5 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1010,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "80d361cf462a617e",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B6Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B6NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1360,
        "y": 4080,
        "wires": [
            [
                "e0026ae867d7723c",
                "575f6efc1a14a908"
            ]
        ]
    },
    {
        "id": "e0026ae867d7723c",
        "type": "get item",
        "z": "a6ca620fd0ddad19",
        "name": "B6 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1590,
        "y": 4120,
        "wires": [
            [
                "931ee893550a1aac"
            ]
        ]
    },
    {
        "id": "227ad320460efe0b",
        "type": "debug",
        "z": "a6ca620fd0ddad19",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2280,
        "y": 4160,
        "wires": []
    },
    {
        "id": "931ee893550a1aac",
        "type": "file in",
        "z": "a6ca620fd0ddad19",
        "name": "Read  B6Shift",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1790,
        "y": 4120,
        "wires": [
            [
                "406459d412d8602d"
            ]
        ]
    },
    {
        "id": "406459d412d8602d",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = JSON.parse(msg.localStorage.data);\ntry{\n    msg._time = new Date(current._time)\n} catch(err){\n    return [null,null];\n}\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = current;\n    node.send([msg, null]);\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    const values = [\n        { dataPointId: \"1639476886189\", qualityCode: \"1\", value: current[\"WIRE SIZE MM26\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476895097\", qualityCode: \"1\", value: current[\"LENGTH ACTUAL KM6\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476874833\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n        ];\n    //msg = null;\n    msg.payload = values;\n    //msg._time = new Date();\n    node.send([null, msg])\n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     var lshiftlen = Number(lshift[\"LENGTH ACTUAL KM6\"]);\n     var currentlen = Number(current[\"LENGTH ACTUAL KM6\"]);\n     msg.payload = lshiftlen;\n     if (lshiftlen != currentlen){\n         var length = Number(currentlen) - Number(lshiftlen);\n         const values = [ \n             { dataPointId: \"1639476886189\", qualityCode: \"1\", value: current[\"WIRE SIZE MM26\"].toString() },//WIRE_SIZE_MM2\n             { dataPointId: \"1639476895097\", qualityCode: \"1\", value: length.toString() },//LENGTH_ACTUAL_KM\n             { dataPointId: \"1639476874833\", qualityCode: \"1\", value: current[\"Status\"].toString() }\n             ];\n        //msg = null;\n        msg.payload = values;\n        //msg._time = new Date();\n        node.send([null, msg]) // Send to Mindsphere.\n        //msg = null;\n        msg.payload = current;\n        node.send([msg,null]) // Send to file for storing last shift data.\n     }\n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 4120,
        "wires": [
            [
                "b58c0fe2238fe1b7",
                "177642832f0d25d7"
            ],
            [
                "227ad320460efe0b",
                "5b65361bc68a48ec"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "6fc131492fc78ed7",
        "type": "catch",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "scope": [
            "931ee893550a1aac"
        ],
        "uncaught": false,
        "x": 1810,
        "y": 4080,
        "wires": [
            [
                "406459d412d8602d"
            ]
        ]
    },
    {
        "id": "b58c0fe2238fe1b7",
        "type": "remove item",
        "z": "a6ca620fd0ddad19",
        "name": "Delete B6 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 2310,
        "y": 4060,
        "wires": [
            []
        ]
    },
    {
        "id": "f41260b12f53369d",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B6Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B6NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1360,
        "y": 4120,
        "wires": [
            [
                "e0026ae867d7723c",
                "575f6efc1a14a908"
            ]
        ]
    },
    {
        "id": "f0752ea10ea7a556",
        "type": "inject",
        "z": "a6ca620fd0ddad19",
        "name": "Shift C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "filename",
                "v": "/home/unit7iiot/node-red/B6Shift.js",
                "vt": "str"
            },
            {
                "p": "localStorage",
                "v": "{\"key\":\"B6NowData\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1360,
        "y": 4160,
        "wires": [
            [
                "e0026ae867d7723c",
                "575f6efc1a14a908"
            ]
        ]
    },
    {
        "id": "177642832f0d25d7",
        "type": "file",
        "z": "a6ca620fd0ddad19",
        "name": "Write B6Shift",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2270,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "a7b4bfc50712a4ed",
        "type": "set item",
        "z": "a6ca620fd0ddad19",
        "name": "B6 Current Value",
        "localStorage": "276b5669.9c170a",
        "x": 1090,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "640642482288bec0",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "Set Current Data",
        "func": "//Record the time of data generation\nmsg.payload._time = new Date()\n//Wirte the data to the localStorage\nmsg.localStorage = {\n    \"key\": \"B6NowData\", // Change the key value to match the Machine name.\n    \"value\": JSON.stringify(msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4100,
        "wires": [
            [
                "a7b4bfc50712a4ed"
            ]
        ]
    },
    {
        "id": "bebc9eade1ed663c",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 6",
        "func": "if (msg.payload[\"Status\"] == false){\n    global.set(\"B1\", new Date());\n}\nif (msg.payload[\"Status\"] == true){\n    var previous= global.get(\"B1\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP5\"].toString() },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B1\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 440,
        "wires": [
            [
                "c0d5da081598af04"
            ]
        ]
    },
    {
        "id": "607c736ae408d33f",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "topi": "topic",
        "x": 930,
        "y": 440,
        "wires": [
            [
                "bebc9eade1ed663c"
            ]
        ]
    },
    {
        "id": "c0d5da081598af04",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1225,
        "y": 440,
        "wires": []
    },
    {
        "id": "8ff765e3e383c0e4",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 7",
        "func": "if (msg.payload[\"Status\"] == false){\n    global.set(\"B2\", new Date());\n}\nif (msg.payload[\"Status\"] == true){\n    var previous= global.get(\"B2\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP6\"].toString() },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B2\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1240,
        "wires": [
            [
                "102ce88a959c5aa4"
            ]
        ]
    },
    {
        "id": "2524ed35d9d80d5d",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "topi": "topic",
        "x": 890,
        "y": 1240,
        "wires": [
            [
                "8ff765e3e383c0e4"
            ]
        ]
    },
    {
        "id": "102ce88a959c5aa4",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1185,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c1958f4c32403282",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 8",
        "func": "if (msg.payload[\"Status\"] == false){\n    global.set(\"B3\", new Date());\n}\nif (msg.payload[\"Status\"] == true){\n    var previous= global.get(\"B3\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP7\"].toString() },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B3\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2000,
        "wires": [
            [
                "6073270290df1e34"
            ]
        ]
    },
    {
        "id": "1dcb822f96e3ec86",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "topi": "topic",
        "x": 910,
        "y": 2000,
        "wires": [
            [
                "c1958f4c32403282"
            ]
        ]
    },
    {
        "id": "6073270290df1e34",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1205,
        "y": 2000,
        "wires": []
    },
    {
        "id": "8b4790f8dab96c6e",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 9",
        "func": "if (msg.payload[\"Status\"] == false){\n    global.set(\"B4\", new Date());\n}\nif (msg.payload[\"Status\"] == true){\n    var previous= global.get(\"B4\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP8\"].toString() },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B4\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2840,
        "wires": [
            [
                "423f359a656f15d4"
            ]
        ]
    },
    {
        "id": "e8bf6fa7cc73f65a",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "topi": "topic",
        "x": 870,
        "y": 2840,
        "wires": [
            [
                "8b4790f8dab96c6e"
            ]
        ]
    },
    {
        "id": "423f359a656f15d4",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1165,
        "y": 2840,
        "wires": []
    },
    {
        "id": "31bb5bacb210eb6c",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 10",
        "func": "if (msg.payload[\"Status\"] == false){\n    global.set(\"B5\", new Date());\n}\nif (msg.payload[\"Status\"] == true){\n    var previous= global.get(\"B5\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP9\"].toString() },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B5\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 3740,
        "wires": [
            [
                "5e79dd14ba590c79"
            ]
        ]
    },
    {
        "id": "f49c249fec96e94f",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "topi": "topic",
        "x": 720,
        "y": 3740,
        "wires": [
            [
                "31bb5bacb210eb6c"
            ]
        ]
    },
    {
        "id": "5e79dd14ba590c79",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1015,
        "y": 3740,
        "wires": []
    },
    {
        "id": "7bc7bb648a4d1479",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 11",
        "func": "if (msg.payload[\"Status\"] == false){\n    global.set(\"B6\", new Date());\n}\nif (msg.payload[\"Status\"] == true){\n    var previous= global.get(\"B6\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 10){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: msg.payload[\"REASON OF STOP10\"].toString() },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B6\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         return msg;\n     }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 4380,
        "wires": [
            [
                "92086396adf53832"
            ]
        ]
    },
    {
        "id": "7a5d38dd18865b87",
        "type": "rbe",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Status\"]",
        "topi": "topic",
        "x": 760,
        "y": 4380,
        "wires": [
            [
                "7bc7bb648a4d1479"
            ]
        ]
    },
    {
        "id": "92086396adf53832",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1055,
        "y": 4380,
        "wires": []
    },
    {
        "id": "c977818ac1b10d25",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 23",
        "func": "\n    var previous= global.get(\"B1\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B1\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"B1\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 100,
        "wires": [
            [
                "56d7741d07a36ce7"
            ]
        ]
    },
    {
        "id": "56d7741d07a36ce7",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1815,
        "y": 100,
        "wires": []
    },
    {
        "id": "582bf06cb8115d68",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 24",
        "func": "\n    var previous= global.get(\"B2\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B2\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"B2\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 860,
        "wires": [
            [
                "24abd6dfb7309772"
            ]
        ]
    },
    {
        "id": "24abd6dfb7309772",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1875,
        "y": 860,
        "wires": []
    },
    {
        "id": "a1b6d2aec5cd12b0",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 25",
        "func": "\n    var previous= global.get(\"B3\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B3\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"B3\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1720,
        "wires": [
            [
                "e69da5507606cc74"
            ]
        ]
    },
    {
        "id": "e69da5507606cc74",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1755,
        "y": 1720,
        "wires": []
    },
    {
        "id": "ffcca14d92fc9a17",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 26",
        "func": "\n    var previous= global.get(\"B4\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B4\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"B4\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 2520,
        "wires": [
            [
                "2db7f61d8465f498"
            ]
        ]
    },
    {
        "id": "2db7f61d8465f498",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1715,
        "y": 2520,
        "wires": []
    },
    {
        "id": "17b03da8a098a87b",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 27",
        "func": "\n    var previous= global.get(\"B5\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B5\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"B5\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 3400,
        "wires": [
            [
                "66d61eea5c3fba60"
            ]
        ]
    },
    {
        "id": "66d61eea5c3fba60",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1595,
        "y": 3400,
        "wires": []
    },
    {
        "id": "575f6efc1a14a908",
        "type": "function",
        "z": "a6ca620fd0ddad19",
        "name": "function 28",
        "func": "\n    var previous= global.get(\"B6\");\n    var today = new Date();\n    //var Christmas = new Date(today.getFullYear() + \"-12-25\");\n    var diffMs = (today.getTime() - previous.getTime()); // milliseconds between now & Christmas\n    var final = diffMs/60000;\n     //console.log(diffDays + \" days, \" + diffHrs + \" hours, \" + diffMins + \" minutes until Christmas =)\");\n     if(final > 470){\n         const values = [\n             //MMW24\n             { dataPointId: \"1681385630654\", qualityCode: \"1\", value: \"3\" },\n             { dataPointId: \"1681385639622\", qualityCode: \"1\", value: final.toString() },\n             { dataPointId: \"1681385619158\", qualityCode: \"1\", value: \"B6\" }\n          ];\n         //MMW32-1\n\n\n         msg._time = new Date();\n         msg.payload = values;\n         global.set(\"B6\", new Date());\n         return msg;\n     }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 4040,
        "wires": [
            [
                "da454d50dcbc1f43"
            ]
        ]
    },
    {
        "id": "da454d50dcbc1f43",
        "type": "link out",
        "z": "a6ca620fd0ddad19",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 1675,
        "y": 4040,
        "wires": []
    },
    {
        "id": "ea5ea545545d49fc",
        "type": "s7 in",
        "z": "7a010fde9cc08f8c",
        "endpoint": "4586ad2c.53c174",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Coiling 13-14-15-16",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "73c8abe41264439f",
                "f07d41c4f5b1aa42",
                "e9d19a0fe47e87ef",
                "45c052fba27d1ef1",
                "bec65571afaeacdd",
                "3b218e45340fa416",
                "c7c74d9563b3b02e",
                "e95210d4bfb7481a",
                "bd17ddaa4eb66835"
            ]
        ]
    },
    {
        "id": "73c8abe41264439f",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change1\"]",
        "topi": "topic",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "6ff80b33d19d93e5",
                "d3051897edda9121"
            ]
        ]
    },
    {
        "id": "f07d41c4f5b1aa42",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change2\"]",
        "x": 370,
        "y": 160,
        "wires": [
            [
                "b9a4f0a541eb623b",
                "5554e56903295b9e"
            ]
        ]
    },
    {
        "id": "e9d19a0fe47e87ef",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change3\"]",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "0cad49f8aa3cfbf3",
                "956d99c258e9fb8a"
            ]
        ]
    },
    {
        "id": "45c052fba27d1ef1",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change4\"]",
        "x": 370,
        "y": 320,
        "wires": [
            [
                "be989080e42c8376",
                "36af0159cb38c634"
            ]
        ]
    },
    {
        "id": "6ff80b33d19d93e5",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-13",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n    if(msg.payload[\"Machine_Status1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628141422591\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141428816\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141433870\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141439062\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141443743\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141449438\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 80,
        "wires": [
            [
                "5f65e0fecd638ffb"
            ]
        ]
    },
    {
        "id": "b9a4f0a541eb623b",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-14",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n    if(msg.payload[\"Machine_Status2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628141315441\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141321201\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141327663\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141334919\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141339887\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141345375\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 160,
        "wires": [
            [
                "f1a299139f3f4f2e"
            ]
        ]
    },
    {
        "id": "0cad49f8aa3cfbf3",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-15",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n    if(msg.payload[\"Machine_Status3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628141351631\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141356488\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141362279\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141367616\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141372495\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141382807\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 240,
        "wires": [
            [
                "79625b8b5c4599fc"
            ]
        ]
    },
    {
        "id": "be989080e42c8376",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-16",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n    if(msg.payload[\"Machine_Status4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628141392215\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141397606\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141403110\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141408055\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141412303\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141416983\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 320,
        "wires": [
            [
                "cde764805425f220"
            ]
        ]
    },
    {
        "id": "3b252a83a3e09b39",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-2",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n    if(msg.payload[\"Machine_Status2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140072451\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140088230\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140296898\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140308601\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140322122\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140333010\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 500,
        "wires": [
            [
                "95f3b169153887ea"
            ]
        ]
    },
    {
        "id": "7f53388b4a0e0fe8",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-3",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n    if(msg.payload[\"Machine_Status3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140350980\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140361602\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140373938\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140384178\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140391458\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140399499\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 580,
        "wires": [
            [
                "2119c3779bac1a8a"
            ]
        ]
    },
    {
        "id": "81e19b29f7101ac7",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-1",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n    if(msg.payload[\"Machine_Status1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628139929731\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628139959102\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628139981499\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628139998866\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140012571\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140031522\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 420,
        "wires": [
            [
                "4cff22a6b6d65d14"
            ]
        ]
    },
    {
        "id": "01335ac008db49bf",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-4",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n    if(msg.payload[\"Machine_Status4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140426209\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140435116\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140445906\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140452897\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140459017\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140466081\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 660,
        "wires": [
            [
                "bba29722c4e5c9f6"
            ]
        ]
    },
    {
        "id": "8fb3386b6ac85363",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change1\"]",
        "topi": "topic",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "81e19b29f7101ac7",
                "9a9914b952b94893"
            ]
        ]
    },
    {
        "id": "2e0199ec8768bc02",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change2\"]",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "3b252a83a3e09b39",
                "c540db7a1afc5c7f"
            ]
        ]
    },
    {
        "id": "0396565db2d730db",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change3\"]",
        "x": 370,
        "y": 580,
        "wires": [
            [
                "7f53388b4a0e0fe8",
                "fa78a833b2593f0c"
            ]
        ]
    },
    {
        "id": "24e3ed7666010db6",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change4\"]",
        "x": 370,
        "y": 660,
        "wires": [
            [
                "01335ac008db49bf",
                "4746445ed1177aaa"
            ]
        ]
    },
    {
        "id": "832ee01ddf565526",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-6",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n    if(msg.payload[\"Machine_Status2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140542505\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140552529\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140561561\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140569160\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140575521\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140584281\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 840,
        "wires": [
            [
                "4364d26898f8da40"
            ]
        ]
    },
    {
        "id": "fc4189efb784c190",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-7",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n    if(msg.payload[\"Machine_Status3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140592040\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140601803\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140612257\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140619624\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140628273\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140673509\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "34d7fd4c4d2b3e9d"
            ]
        ]
    },
    {
        "id": "1a05245990767da2",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling -5",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n    if(msg.payload[\"Machine_Status1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140477522\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140485848\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140495841\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140503001\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140509553\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140517249\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "9c4643d714678988"
            ]
        ]
    },
    {
        "id": "4c635ad3fbf24894",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-8",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n    if(msg.payload[\"Machine_Status4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140709010\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140719411\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140731090\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140740137\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140749713\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140755768\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1000,
        "wires": [
            [
                "48ac06239ca5bc74"
            ]
        ]
    },
    {
        "id": "190b3f0eab9fc1f1",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change1\"]",
        "x": 370,
        "y": 760,
        "wires": [
            [
                "1a05245990767da2",
                "a9a6832545be4808"
            ]
        ]
    },
    {
        "id": "0a63e712c6337be7",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change2\"]",
        "x": 370,
        "y": 840,
        "wires": [
            [
                "832ee01ddf565526",
                "5fe944183f903f0f"
            ]
        ]
    },
    {
        "id": "1cfee5820ab25b3b",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change3\"]",
        "x": 370,
        "y": 920,
        "wires": [
            [
                "fc4189efb784c190",
                "4948c95c6c260721"
            ]
        ]
    },
    {
        "id": "a68660062e870c29",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change4\"]",
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "4c635ad3fbf24894",
                "5aaf32ba3502859a"
            ]
        ]
    },
    {
        "id": "ead125d6c289241a",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change1\"]",
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "befa6f3f89fc880d",
                "c7e8704d42498632"
            ]
        ]
    },
    {
        "id": "6ea6a149f9262f31",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change2\"]",
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "17320ec04abdfef1",
                "6d233ecf1d664b54"
            ]
        ]
    },
    {
        "id": "44053c594502891d",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change3\"]",
        "x": 370,
        "y": 1260,
        "wires": [
            [
                "ca5f7eee6bf6dec5",
                "8fa1cba8eb564802"
            ]
        ]
    },
    {
        "id": "95203ab92bd6570c",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Production_Change4\"]",
        "x": 370,
        "y": 1340,
        "wires": [
            [
                "ae9ed3b5df8320ea",
                "1ac8b8971ebd12e5"
            ]
        ]
    },
    {
        "id": "17320ec04abdfef1",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-10",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n    if(msg.payload[\"Machine_Status2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140825363\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140836139\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140849240\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140857313\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140863824\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140872280\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n   }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1180,
        "wires": [
            [
                "b8ee15c01cad9148"
            ]
        ]
    },
    {
        "id": "ca5f7eee6bf6dec5",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-11",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n    if(msg.payload[\"Machine_Status3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140904384\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140915018\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141101832\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141108632\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141142307\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141149431\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1260,
        "wires": [
            [
                "1fc93ec6064158f5"
            ]
        ]
    },
    {
        "id": "befa6f3f89fc880d",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-09",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n    if(msg.payload[\"Machine_Status1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628140766497\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140776099\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140784194\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140795395\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140805032\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140814672\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1100,
        "wires": [
            [
                "d58168b9c5867c41"
            ]
        ]
    },
    {
        "id": "ae9ed3b5df8320ea",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-12",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n    if(msg.payload[\"Machine_Status4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1628141220031\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141227008\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141236318\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141244607\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141251359\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141257294\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1340,
        "wires": [
            [
                "6fb1e63ea4814683"
            ]
        ]
    },
    {
        "id": "0a5d2658a9aca67d",
        "type": "s7 in",
        "z": "7a010fde9cc08f8c",
        "endpoint": "93c3fe7a.57b17",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Coiling 1-2-3-4",
        "x": 100,
        "y": 520,
        "wires": [
            [
                "8fb3386b6ac85363",
                "2e0199ec8768bc02",
                "0396565db2d730db",
                "24e3ed7666010db6",
                "6533a6c4337b4787",
                "cf99b64db1495065",
                "27e514dc94629994",
                "094690025ed88233",
                "a9573b8e0e3fb5ee"
            ]
        ]
    },
    {
        "id": "687b0d668de5cd21",
        "type": "s7 in",
        "z": "7a010fde9cc08f8c",
        "endpoint": "a9a7d818.c90068",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Coiling 5-6-7-8",
        "x": 100,
        "y": 900,
        "wires": [
            [
                "190b3f0eab9fc1f1",
                "0a63e712c6337be7",
                "1cfee5820ab25b3b",
                "a68660062e870c29",
                "524fd2f70486091d",
                "fe9c199707a95e01",
                "cde9e715852ddd6e",
                "030b704b4de35d8a",
                "169a530a8c04af8c"
            ]
        ]
    },
    {
        "id": "943655d083e88dc5",
        "type": "s7 in",
        "z": "7a010fde9cc08f8c",
        "endpoint": "ec53c49d.a911b8",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Coiling 9-10-11-12",
        "x": 110,
        "y": 1260,
        "wires": [
            [
                "95203ab92bd6570c",
                "44053c594502891d",
                "6ea6a149f9262f31",
                "ead125d6c289241a",
                "0d37a946791e8db8",
                "c1a1731dc8cc0bdb",
                "55a46a6d5fee6c74",
                "589393d9c41e837b",
                "8c0777d0f1b3e064",
                "ca73166988891c65"
            ]
        ]
    },
    {
        "id": "5f65e0fecd638ffb",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 80,
        "wires": []
    },
    {
        "id": "f1a299139f3f4f2e",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 160,
        "wires": []
    },
    {
        "id": "79625b8b5c4599fc",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 240,
        "wires": []
    },
    {
        "id": "cde764805425f220",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 320,
        "wires": []
    },
    {
        "id": "4cff22a6b6d65d14",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 420,
        "wires": []
    },
    {
        "id": "95f3b169153887ea",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 500,
        "wires": []
    },
    {
        "id": "2119c3779bac1a8a",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 580,
        "wires": []
    },
    {
        "id": "bba29722c4e5c9f6",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 660,
        "wires": []
    },
    {
        "id": "9c4643d714678988",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 760,
        "wires": []
    },
    {
        "id": "4364d26898f8da40",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 840,
        "wires": []
    },
    {
        "id": "34d7fd4c4d2b3e9d",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 920,
        "wires": []
    },
    {
        "id": "48ac06239ca5bc74",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d58168b9c5867c41",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b8ee15c01cad9148",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1180,
        "wires": []
    },
    {
        "id": "1fc93ec6064158f5",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1260,
        "wires": []
    },
    {
        "id": "6fb1e63ea4814683",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1340,
        "wires": []
    },
    {
        "id": "bec65571afaeacdd",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status1\"]",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "70a90e62da266e48"
            ]
        ]
    },
    {
        "id": "70a90e62da266e48",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-13",
        "func": "var status;\n\n    if(msg.payload[\"Machine_Status1\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628141422591\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141428816\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141433870\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141439062\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141443743\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141449438\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "04ca838030852c1d"
            ]
        ]
    },
    {
        "id": "04ca838030852c1d",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 120,
        "wires": []
    },
    {
        "id": "3b218e45340fa416",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status2\"]",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "581bc87f56b91cdc"
            ]
        ]
    },
    {
        "id": "581bc87f56b91cdc",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-14",
        "func": "var status;\n    if(msg.payload[\"Machine_Status2\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628141315441\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141321201\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141327663\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141334919\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141339887\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141345375\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 200,
        "wires": [
            [
                "52a67c10d26b4af2"
            ]
        ]
    },
    {
        "id": "52a67c10d26b4af2",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 200,
        "wires": []
    },
    {
        "id": "e95210d4bfb7481a",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status3\"]",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "dd8496e1147c6231"
            ]
        ]
    },
    {
        "id": "dd8496e1147c6231",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-15",
        "func": "var status;\n    if(msg.payload[\"Machine_Status3\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628141351631\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141356488\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141362279\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141367616\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141372495\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141382807\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "a3efeea30c58d43c"
            ]
        ]
    },
    {
        "id": "a3efeea30c58d43c",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 280,
        "wires": []
    },
    {
        "id": "c7c74d9563b3b02e",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status4\"]",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "fa2c49830012a308"
            ]
        ]
    },
    {
        "id": "fa2c49830012a308",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-16",
        "func": "var status;\n    if(msg.payload[\"Machine_Status4\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628141392215\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141397606\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141403110\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141408055\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141412303\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141416983\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 360,
        "wires": [
            [
                "a75d0d87080b19f3"
            ]
        ]
    },
    {
        "id": "a75d0d87080b19f3",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 360,
        "wires": []
    },
    {
        "id": "424ef213f890441d",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling -5",
        "func": "var status;\n    if(msg.payload[\"Machine_Status1\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140477522\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140485848\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140495841\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140503001\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140509553\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140517249\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 800,
        "wires": [
            [
                "87285b51a54254cc"
            ]
        ]
    },
    {
        "id": "524fd2f70486091d",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status1\"]",
        "x": 370,
        "y": 800,
        "wires": [
            [
                "424ef213f890441d"
            ]
        ]
    },
    {
        "id": "87285b51a54254cc",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 800,
        "wires": []
    },
    {
        "id": "fc5eca6222e78021",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-6",
        "func": "var status;\n    if(msg.payload[\"Machine_Status2\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140542505\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140552529\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140561561\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140569160\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140575521\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140584281\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 880,
        "wires": [
            [
                "8e8a5d9d28da0992"
            ]
        ]
    },
    {
        "id": "fe9c199707a95e01",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status2\"]",
        "x": 370,
        "y": 880,
        "wires": [
            [
                "fc5eca6222e78021"
            ]
        ]
    },
    {
        "id": "8e8a5d9d28da0992",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 880,
        "wires": []
    },
    {
        "id": "b56ab5f5fd2cae25",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-7",
        "func": "var status;\n    if(msg.payload[\"Machine_Status3\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140592040\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140601803\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140612257\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140619624\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140628273\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140673509\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 960,
        "wires": [
            [
                "6a085cd01caac47e"
            ]
        ]
    },
    {
        "id": "cde9e715852ddd6e",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status3\"]",
        "x": 370,
        "y": 960,
        "wires": [
            [
                "b56ab5f5fd2cae25"
            ]
        ]
    },
    {
        "id": "6a085cd01caac47e",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 960,
        "wires": []
    },
    {
        "id": "030b704b4de35d8a",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status4\"]",
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "fb5a710f7e07ef6d"
            ]
        ]
    },
    {
        "id": "fb5a710f7e07ef6d",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-8",
        "func": "var status;\n    if(msg.payload[\"Machine_Status4\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140709010\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140719411\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140731090\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140740137\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140749713\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140755768\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n    \n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1040,
        "wires": [
            [
                "ecfe089e84bcd9ac"
            ]
        ]
    },
    {
        "id": "ecfe089e84bcd9ac",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0d37a946791e8db8",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status1\"]",
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "49b29d0ecb919331"
            ]
        ]
    },
    {
        "id": "49b29d0ecb919331",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-09",
        "func": "var status;\n    if(msg.payload[\"Machine_Status1\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140766497\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140776099\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140784194\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140795395\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140805032\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140814672\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1140,
        "wires": [
            [
                "f33766f58ff29415"
            ]
        ]
    },
    {
        "id": "f33766f58ff29415",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c1a1731dc8cc0bdb",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status2\"]",
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "a3349e44710b24e4"
            ]
        ]
    },
    {
        "id": "a3349e44710b24e4",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-10",
        "func": "var status;\n    if(msg.payload[\"Machine_Status2\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140825363\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140836139\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140849240\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140857313\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140863824\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140872280\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1220,
        "wires": [
            [
                "9f17a62cf5a21df9"
            ]
        ]
    },
    {
        "id": "9f17a62cf5a21df9",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1220,
        "wires": []
    },
    {
        "id": "55a46a6d5fee6c74",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status3\"]",
        "x": 370,
        "y": 1300,
        "wires": [
            [
                "6d0947d904724d15"
            ]
        ]
    },
    {
        "id": "6d0947d904724d15",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-11",
        "func": "var status;\n    if(msg.payload[\"Machine_Status3\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140904384\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140915018\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141101832\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141108632\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141142307\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141149431\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n    //\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1300,
        "wires": [
            [
                "55f58b6ee7b26b39"
            ]
        ]
    },
    {
        "id": "55f58b6ee7b26b39",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1300,
        "wires": []
    },
    {
        "id": "589393d9c41e837b",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status4\"]",
        "x": 370,
        "y": 1380,
        "wires": [
            [
                "22e800a6c8f85f68"
            ]
        ]
    },
    {
        "id": "22e800a6c8f85f68",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-12",
        "func": "var status;\n    if(msg.payload[\"Machine_Status4\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628141220031\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628141227008\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628141236318\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628141244607\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628141251359\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628141257294\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    }\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1380,
        "wires": [
            [
                "be0c648ecd7a4c2d"
            ]
        ]
    },
    {
        "id": "be0c648ecd7a4c2d",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 1380,
        "wires": []
    },
    {
        "id": "92ab5d6e3edd7f15",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-1",
        "func": "var status;\n\n    if(msg.payload[\"Machine_Status1\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628139929731\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628139959102\", qualityCode: \"1\", value: msg.payload[\"Wire_Size1\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628139981499\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628139998866\", qualityCode: \"1\", value: msg.payload[\"Total_Length1\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140012571\", qualityCode: \"1\", value: msg.payload[\"Production_Count1\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140031522\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    \n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 460,
        "wires": [
            [
                "c28e8756b293fad1"
            ]
        ]
    },
    {
        "id": "cf99b64db1495065",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status1\"]",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "92ab5d6e3edd7f15"
            ]
        ]
    },
    {
        "id": "c28e8756b293fad1",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 460,
        "wires": []
    },
    {
        "id": "8f282c0a8747ca54",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-2",
        "func": "var status;\n\n    if(msg.payload[\"Machine_Status2\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140072451\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140088230\", qualityCode: \"1\", value: msg.payload[\"Wire_Size2\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140296898\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140308601\", qualityCode: \"1\", value: msg.payload[\"Total_Length2\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140322122\", qualityCode: \"1\", value: msg.payload[\"Production_Count2\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140333010\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    \n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 540,
        "wires": [
            [
                "e1806d45d3732e72"
            ]
        ]
    },
    {
        "id": "27e514dc94629994",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status2\"]",
        "x": 370,
        "y": 540,
        "wires": [
            [
                "8f282c0a8747ca54"
            ]
        ]
    },
    {
        "id": "e1806d45d3732e72",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 540,
        "wires": []
    },
    {
        "id": "1b1ac2addcb10a1b",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-3",
        "func": "var status;\n\n    if(msg.payload[\"Machine_Status3\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140350980\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140361602\", qualityCode: \"1\", value: msg.payload[\"Wire_Size3\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140373938\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140384178\", qualityCode: \"1\", value: msg.payload[\"Total_Length3\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140391458\", qualityCode: \"1\", value: msg.payload[\"Production_Count3\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140399499\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    \n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 620,
        "wires": [
            [
                "945ef7b2223bb26e"
            ]
        ]
    },
    {
        "id": "094690025ed88233",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status3\"]",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "1b1ac2addcb10a1b"
            ]
        ]
    },
    {
        "id": "945ef7b2223bb26e",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 620,
        "wires": []
    },
    {
        "id": "6c6b53a6ba2c3197",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-4",
        "func": "var status;\n\n    if(msg.payload[\"Machine_Status4\"] == false){\n        status = \"false\";\n        const values = [\n                { dataPointId: \"1628140426209\", qualityCode: \"1\", value: status},//MACHINE_STATUS\n                { dataPointId: \"1628140435116\", qualityCode: \"1\", value: msg.payload[\"Wire_Size4\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1628140445906\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1628140452897\", qualityCode: \"1\", value: msg.payload[\"Total_Length4\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1628140459017\", qualityCode: \"1\", value: msg.payload[\"Production_Count4\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1628140466081\", qualityCode: \"1\", value: msg.payload[\"Reason_of_Last_Stop4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    \n    //\n    \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 700,
        "wires": [
            [
                "bdeca417d66d48a0"
            ]
        ]
    },
    {
        "id": "6533a6c4337b4787",
        "type": "rbe",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload[\"Machine_Status4\"]",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "6c6b53a6ba2c3197"
            ]
        ]
    },
    {
        "id": "bdeca417d66d48a0",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 700,
        "wires": []
    },
    {
        "id": "8c0777d0f1b3e064",
        "type": "debug",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 1400,
        "wires": []
    },
    {
        "id": "bd17ddaa4eb66835",
        "type": "debug",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 150,
        "y": 320,
        "wires": []
    },
    {
        "id": "a9573b8e0e3fb5ee",
        "type": "debug",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 640,
        "wires": []
    },
    {
        "id": "169a530a8c04af8c",
        "type": "debug",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 1020,
        "wires": []
    },
    {
        "id": "9a9914b952b94893",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-1",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653126025299\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653126017896\", qualityCode: \"1\", value: msg.payload[\"1_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653126008791\", qualityCode: \"1\", value: msg.payload[\"1_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653126000617\", qualityCode: \"1\", value: msg.payload[\"1_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653125991872\", qualityCode: \"1\", value: msg.payload[\"1_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653125979568\", qualityCode: \"1\", value: msg.payload[\"1_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653125962890\", qualityCode: \"1\", value: msg.payload[\"1_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653125848177\", qualityCode: \"1\", value: msg.payload[\"Machine_Status1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 400,
        "wires": [
            [
                "f147c639049851dc"
            ]
        ]
    },
    {
        "id": "c540db7a1afc5c7f",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-2",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653126124520\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653126115473\", qualityCode: \"1\", value: msg.payload[\"2_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653126107929\", qualityCode: \"1\", value: msg.payload[\"2_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653126101540\", qualityCode: \"1\", value: msg.payload[\"2_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653126084423\", qualityCode: \"1\", value: msg.payload[\"2_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653126074202\", qualityCode: \"1\", value: msg.payload[\"2_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126068887\", qualityCode: \"1\", value: msg.payload[\"2_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126062433\", qualityCode: \"1\", value: msg.payload[\"Machine_Status2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 520,
        "wires": [
            [
                "7d5f5db324548af4"
            ]
        ]
    },
    {
        "id": "fa78a833b2593f0c",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-3",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653126213249\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653126207871\", qualityCode: \"1\", value: msg.payload[\"3_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653126194659\", qualityCode: \"1\", value: msg.payload[\"3_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653126306218\", qualityCode: \"1\", value: msg.payload[\"3_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653126164743\", qualityCode: \"1\", value: msg.payload[\"3_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653126154689\", qualityCode: \"1\", value: msg.payload[\"3_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126147959\", qualityCode: \"1\", value: msg.payload[\"3_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126134520\", qualityCode: \"1\", value: msg.payload[\"Machine_Status3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 600,
        "wires": [
            [
                "240e14a43899c2d2"
            ]
        ]
    },
    {
        "id": "4746445ed1177aaa",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-4",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653126334608\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653126330112\", qualityCode: \"1\", value: msg.payload[\"4_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653126276939\", qualityCode: \"1\", value: msg.payload[\"4_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653126318516\", qualityCode: \"1\", value: msg.payload[\"4_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653126268422\", qualityCode: \"1\", value: msg.payload[\"4_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653126249855\", qualityCode: \"1\", value: msg.payload[\"4_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126242552\", qualityCode: \"1\", value: msg.payload[\"4_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126235076\", qualityCode: \"1\", value: msg.payload[\"Machine_Status4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 680,
        "wires": [
            [
                "0f99bb66c771df20"
            ]
        ]
    },
    {
        "id": "a9a6832545be4808",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling -5",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653126888441\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653126880881\", qualityCode: \"1\", value: msg.payload[\"5_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653126873832\", qualityCode: \"1\", value: msg.payload[\"5_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653126868823\", qualityCode: \"1\", value: msg.payload[\"5_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653126863617\", qualityCode: \"1\", value: msg.payload[\"5_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653126855363\", qualityCode: \"1\", value: msg.payload[\"5_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126843801\", qualityCode: \"1\", value: msg.payload[\"5_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126837363\", qualityCode: \"1\", value: msg.payload[\"Machine_Status1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 802,
        "y": 744,
        "wires": [
            [
                "84668362d32e753a"
            ]
        ]
    },
    {
        "id": "5fe944183f903f0f",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-6",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653126980457\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653126975232\", qualityCode: \"1\", value: msg.payload[\"6_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653126969576\", qualityCode: \"1\", value: msg.payload[\"6_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653126962559\", qualityCode: \"1\", value: msg.payload[\"6_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653126955956\", qualityCode: \"1\", value: msg.payload[\"6_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653126912896\", qualityCode: \"1\", value: msg.payload[\"6_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126906991\", qualityCode: \"1\", value: msg.payload[\"6_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126901250\", qualityCode: \"1\", value: msg.payload[\"Machine_Status2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 820,
        "wires": [
            [
                "c6a09745f26b78b2"
            ]
        ]
    },
    {
        "id": "4948c95c6c260721",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-7",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653127044689\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653127039810\", qualityCode: \"1\", value: msg.payload[\"7_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653127034096\", qualityCode: \"1\", value: msg.payload[\"7_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653127027936\", qualityCode: \"1\", value: msg.payload[\"7_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653127021664\", qualityCode: \"1\", value: msg.payload[\"7_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653127015816\", qualityCode: \"1\", value: msg.payload[\"7_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653127008093\", qualityCode: \"1\", value: msg.payload[\"7_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653126989968\", qualityCode: \"1\", value: msg.payload[\"Machine_Status3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 900,
        "wires": [
            [
                "5be032e2306e7beb"
            ]
        ]
    },
    {
        "id": "5aaf32ba3502859a",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-8",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653127142281\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653127136932\", qualityCode: \"1\", value: msg.payload[\"8_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653127126424\", qualityCode: \"1\", value: msg.payload[\"8_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653127110504\", qualityCode: \"1\", value: msg.payload[\"8_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653127103887\", qualityCode: \"1\", value: msg.payload[\"8_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653127098337\", qualityCode: \"1\", value: msg.payload[\"8_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653127092591\", qualityCode: \"1\", value: msg.payload[\"8_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653127086081\", qualityCode: \"1\", value: msg.payload[\"Machine_Status4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 980,
        "wires": [
            [
                "50af620a260a6838"
            ]
        ]
    },
    {
        "id": "c7e8704d42498632",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-09",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653127925695\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653127920376\", qualityCode: \"1\", value: msg.payload[\"9_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653127899304\", qualityCode: \"1\", value: msg.payload[\"9_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653127891202\", qualityCode: \"1\", value: msg.payload[\"9_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653127854433\", qualityCode: \"1\", value: msg.payload[\"9_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653127843755\", qualityCode: \"1\", value: msg.payload[\"9_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653127833689\", qualityCode: \"1\", value: msg.payload[\"9_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653127825075\", qualityCode: \"1\", value: msg.payload[\"Machine_Status1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1060,
        "wires": [
            [
                "1212fc73bbbfd335"
            ]
        ]
    },
    {
        "id": "6d233ecf1d664b54",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-10",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653127993008\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653127985911\", qualityCode: \"1\", value: msg.payload[\"10_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653127980471\", qualityCode: \"1\", value: msg.payload[\"10_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653127975069\", qualityCode: \"1\", value: msg.payload[\"10_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653127966857\", qualityCode: \"1\", value: msg.payload[\"10_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653127959696\", qualityCode: \"1\", value: msg.payload[\"10_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653127954168\", qualityCode: \"1\", value: msg.payload[\"10_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653127946924\", qualityCode: \"1\", value: msg.payload[\"Machine_Status2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1140,
        "wires": [
            [
                "ac9f658ee42ac725"
            ]
        ]
    },
    {
        "id": "8fa1cba8eb564802",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-11",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653128065097\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653128058232\", qualityCode: \"1\", value: msg.payload[\"11_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653128051040\", qualityCode: \"1\", value: msg.payload[\"11_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653128045441\", qualityCode: \"1\", value: msg.payload[\"11_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653128039073\", qualityCode: \"1\", value: msg.payload[\"11_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653128031695\", qualityCode: \"1\", value: msg.payload[\"11_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128019669\", qualityCode: \"1\", value: msg.payload[\"11_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128005744\", qualityCode: \"1\", value: msg.payload[\"Machine_Status3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1220,
        "wires": [
            [
                "691c1a69d3d75b6b"
            ]
        ]
    },
    {
        "id": "1ac8b8971ebd12e5",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "Coiling-12",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653128220289\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653128215609\", qualityCode: \"1\", value: msg.payload[\"12_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653128207680\", qualityCode: \"1\", value: msg.payload[\"12_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653128201873\", qualityCode: \"1\", value: msg.payload[\"12_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653128197305\", qualityCode: \"1\", value: msg.payload[\"12_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653128192058\", qualityCode: \"1\", value: msg.payload[\"12_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128185570\", qualityCode: \"1\", value: msg.payload[\"12_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128177453\", qualityCode: \"1\", value: msg.payload[\"Machine_Status4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1360,
        "wires": [
            [
                "8d3d543f6ffb22c0"
            ]
        ]
    },
    {
        "id": "d3051897edda9121",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-13",
        "func": "var status;\nif(msg.payload[\"Production_Change1\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653128289432\", qualityCode: \"1\", value: msg.payload[\"Final_Length1\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653128284961\", qualityCode: \"1\", value: msg.payload[\"13_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653128279737\", qualityCode: \"1\", value: msg.payload[\"13_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653128273241\", qualityCode: \"1\", value: msg.payload[\"13_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653128257480\", qualityCode: \"1\", value: msg.payload[\"13_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653128252385\", qualityCode: \"1\", value: msg.payload[\"13_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128246962\", qualityCode: \"1\", value: msg.payload[\"13_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128236096\", qualityCode: \"1\", value: msg.payload[\"Machine_Status1\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 40,
        "wires": [
            [
                "539ec9828656dc45"
            ]
        ]
    },
    {
        "id": "5554e56903295b9e",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-14",
        "func": "var status;\nif(msg.payload[\"Production_Change2\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653128413385\", qualityCode: \"1\", value: msg.payload[\"Final_Length2\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653128408479\", qualityCode: \"1\", value: msg.payload[\"14_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653128402495\", qualityCode: \"1\", value: msg.payload[\"14_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653128394369\", qualityCode: \"1\", value: msg.payload[\"14_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653128386696\", qualityCode: \"1\", value: msg.payload[\"14_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653128325490\", qualityCode: \"1\", value: msg.payload[\"14_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128313332\", qualityCode: \"1\", value: msg.payload[\"14_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128300137\", qualityCode: \"1\", value: msg.payload[\"Machine_Status2\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 120,
        "wires": [
            [
                "47d604072e9af094"
            ]
        ]
    },
    {
        "id": "956d99c258e9fb8a",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-15",
        "func": "var status;\nif(msg.payload[\"Production_Change3\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653128513944\", qualityCode: \"1\", value: msg.payload[\"Final_Length3\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653128502954\", qualityCode: \"1\", value: msg.payload[\"15_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653128489280\", qualityCode: \"1\", value: msg.payload[\"15_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653128476369\", qualityCode: \"1\", value: msg.payload[\"15_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653128463729\", qualityCode: \"1\", value: msg.payload[\"15_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653128453464\", qualityCode: \"1\", value: msg.payload[\"15_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128443738\", qualityCode: \"1\", value: msg.payload[\"15_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128429944\", qualityCode: \"1\", value: msg.payload[\"Machine_Status3\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 220,
        "wires": [
            [
                "6fab1886e03f5188"
            ]
        ]
    },
    {
        "id": "36af0159cb38c634",
        "type": "function",
        "z": "7a010fde9cc08f8c",
        "name": "coiling-16",
        "func": "var status;\nif(msg.payload[\"Production_Change4\"] == true){\n        status = \"true\";\n        const values = [\n                { dataPointId: \"1653128556770\", qualityCode: \"1\", value: msg.payload[\"Final_Length4\"].toString()},//MACHINE_STATUS\n                { dataPointId: \"1653128551476\", qualityCode: \"1\", value: msg.payload[\"16_600\"].toString()},//WIRE_SIZE\n                { dataPointId: \"1653128497312\", qualityCode: \"1\", value: msg.payload[\"16_400\"].toString()},//FINAL_LENGTH_METER\n                { dataPointId: \"1653128481792\", qualityCode: \"1\", value: msg.payload[\"16_250\"].toString()},//TOTAL_LENGTH_METER\n                { dataPointId: \"1653128469264\", qualityCode: \"1\", value: msg.payload[\"16_150\"].toString()},//PRODUCTION_COUNT\n                { dataPointId: \"1653128457521\", qualityCode: \"1\", value: msg.payload[\"16_100\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128448761\", qualityCode: \"1\", value: msg.payload[\"16_75\"].toString()},//REASON_OF_STOP\n                { dataPointId: \"1653128438073\", qualityCode: \"1\", value: msg.payload[\"Machine_Status4\"].toString()}//REASON_OF_STOP\n               ];\n            msg._time = new Date();\n            msg.payload = values;\n            return msg;\n    //\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 300,
        "wires": [
            [
                "3e829141bdf6ea2d"
            ]
        ]
    },
    {
        "id": "539ec9828656dc45",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 40,
        "wires": []
    },
    {
        "id": "47d604072e9af094",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 120,
        "wires": []
    },
    {
        "id": "6fab1886e03f5188",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 220,
        "wires": []
    },
    {
        "id": "3e829141bdf6ea2d",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 300,
        "wires": []
    },
    {
        "id": "f147c639049851dc",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 400,
        "wires": []
    },
    {
        "id": "7d5f5db324548af4",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 520,
        "wires": []
    },
    {
        "id": "240e14a43899c2d2",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 600,
        "wires": []
    },
    {
        "id": "0f99bb66c771df20",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "84668362d32e753a",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 740,
        "wires": []
    },
    {
        "id": "c6a09745f26b78b2",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 820,
        "wires": []
    },
    {
        "id": "5be032e2306e7beb",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 900,
        "wires": []
    },
    {
        "id": "50af620a260a6838",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 980,
        "wires": []
    },
    {
        "id": "1212fc73bbbfd335",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ac9f658ee42ac725",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 1140,
        "wires": []
    },
    {
        "id": "691c1a69d3d75b6b",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 1220,
        "wires": []
    },
    {
        "id": "8d3d543f6ffb22c0",
        "type": "link out",
        "z": "7a010fde9cc08f8c",
        "name": "MWD24",
        "links": [
            "9e4324344cd9da23"
        ],
        "x": 935,
        "y": 1360,
        "wires": []
    },
    {
        "id": "ca73166988891c65",
        "type": "debug",
        "z": "7a010fde9cc08f8c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 1120,
        "wires": []
    },
    {
        "id": "005b050e8a90bc86",
        "type": "s7 in",
        "z": "61a9ab317891e053",
        "endpoint": "39dd4f1d.0fe3c",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "PDB1",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "e7a4cccc4b51856a"
            ]
        ]
    },
    {
        "id": "e7a4cccc4b51856a",
        "type": "function",
        "z": "61a9ab317891e053",
        "name": "PDB1",
        "func": "var bool = msg.payload[\"TEST\"];\nvar status;\n\n\n  const values = [\n    //MMW32-2\n    { dataPointId: \"1630142652289\", qualityCode: \"1\", value: bool[0].toString()},//PDB1_0\n    { dataPointId: \"1630142668984\", qualityCode: \"1\", value: bool[1].toString()},//PDB1_1\n    { dataPointId: \"1630142679920\", qualityCode: \"1\", value: bool[2].toString()},//PDB1_2\n    { dataPointId: \"1630142689871\", qualityCode: \"1\", value: bool[3].toString()},//PDB1_3\n    { dataPointId: \"1630142701383\", qualityCode: \"1\", value: bool[4].toString()},//PDB1_4\n    { dataPointId: \"1630142713822\", qualityCode: \"1\", value: bool[5].toString()},//PDB1_5\n    { dataPointId: \"1630142724958\", qualityCode: \"1\", value: bool[6].toString()}//PDB1_6\n   ];\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 120,
        "wires": [
            [
                "af34755fc5fd0409"
            ]
        ]
    },
    {
        "id": "af34755fc5fd0409",
        "type": "trigger",
        "z": "61a9ab317891e053",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "13d9dde4279e4afe"
            ]
        ]
    },
    {
        "id": "13d9dde4279e4afe",
        "type": "link out",
        "z": "61a9ab317891e053",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 675,
        "y": 140,
        "wires": []
    },
    {
        "id": "708df7d11927ec30",
        "type": "function",
        "z": "61a9ab317891e053",
        "name": "PDB2",
        "func": "var bool = msg.payload[\"TEST\"];\nvar status;\n\n\n  const values = [\n    //MMW32-2\n    { dataPointId: \"1630147723079\", qualityCode: \"1\", value: bool[0].toString()},//PDB2_0\n    { dataPointId: \"1630147735034\", qualityCode: \"1\", value: bool[1].toString()},//PDB2_1\n    { dataPointId: \"1630147752395\", qualityCode: \"1\", value: bool[2].toString()},//PDB2_2\n    { dataPointId: \"1630147762258\", qualityCode: \"1\", value: bool[3].toString()},//PDB2_3\n    { dataPointId: \"1630147769361\", qualityCode: \"1\", value: bool[4].toString()},//PDB2_4\n    { dataPointId: \"1630147779312\", qualityCode: \"1\", value: bool[5].toString()},//PDB2_5\n    { dataPointId: \"1630147791104\", qualityCode: \"1\", value: bool[6].toString()}//PDB2_6\n   ];\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 220,
        "wires": [
            [
                "0231286dfe0e6581"
            ]
        ]
    },
    {
        "id": "0231286dfe0e6581",
        "type": "trigger",
        "z": "61a9ab317891e053",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 220,
        "wires": [
            [
                "3aa3546f73607e37"
            ]
        ]
    },
    {
        "id": "6ef63f039bcd4706",
        "type": "function",
        "z": "61a9ab317891e053",
        "name": "PDB3",
        "func": "var bool = msg.payload[\"TEST\"];\nvar status;\n\n\n  const values = [\n    //MMW32-2\n    { dataPointId: \"1630148011961\", qualityCode: \"1\", value: bool[0].toString()},//PDB3_0\n    { dataPointId: \"1630148022039\", qualityCode: \"1\", value: bool[1].toString()},//PDB3_1\n    { dataPointId: \"1630148095355\", qualityCode: \"1\", value: bool[2].toString()},//PDB3_2\n    { dataPointId: \"1630148108066\", qualityCode: \"1\", value: bool[3].toString()},//PDB3_3\n    { dataPointId: \"1630148129665\", qualityCode: \"1\", value: bool[4].toString()},//PDB3_4\n    { dataPointId: \"1630148140235\", qualityCode: \"1\", value: bool[5].toString()},//PDB3_5\n    { dataPointId: \"1630148161121\", qualityCode: \"1\", value: bool[6].toString()}//PDB3_6\n   ];\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            [
                "b92456365526bee8"
            ]
        ]
    },
    {
        "id": "f75e65694a655e56",
        "type": "s7 in",
        "z": "61a9ab317891e053",
        "endpoint": "dbb74557.258908",
        "mode": "all",
        "variable": "",
        "diff": true,
        "name": "PDB2",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "708df7d11927ec30"
            ]
        ]
    },
    {
        "id": "f0b31fd287899b26",
        "type": "s7 in",
        "z": "61a9ab317891e053",
        "endpoint": "41630707.fdef68",
        "mode": "all",
        "variable": "",
        "diff": true,
        "name": "PDB3",
        "x": 220,
        "y": 320,
        "wires": [
            [
                "6ef63f039bcd4706"
            ]
        ]
    },
    {
        "id": "b92456365526bee8",
        "type": "trigger",
        "z": "61a9ab317891e053",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 300,
        "wires": [
            [
                "5a9b47fc65836ec7"
            ]
        ]
    },
    {
        "id": "3aa3546f73607e37",
        "type": "link out",
        "z": "61a9ab317891e053",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 675,
        "y": 220,
        "wires": []
    },
    {
        "id": "5a9b47fc65836ec7",
        "type": "link out",
        "z": "61a9ab317891e053",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 280,
        "wires": []
    },
    {
        "id": "57ff6c7b8c02c6dd",
        "type": "s7 in",
        "z": "61a9ab317891e053",
        "endpoint": "6b2d72c7.49f24c",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "PDBMMW",
        "x": 220,
        "y": 400,
        "wires": [
            [
                "0ab69ca99df79942"
            ]
        ]
    },
    {
        "id": "0ab69ca99df79942",
        "type": "function",
        "z": "61a9ab317891e053",
        "name": "PDB3",
        "func": "var bool = msg.payload[\"TEST\"];\nvar status;\n\n\n  const values = [\n    //MMW32-2\n    { dataPointId: \"1631187408830\", qualityCode: \"1\", value: bool[0].toString()},//PDB4_mmw323\n    { dataPointId: \"1631187383248\", qualityCode: \"1\", value: bool[1].toString()},//PDB4_mmw24\n    { dataPointId: \"1631187395247\", qualityCode: \"1\", value: bool[2].toString()},//PDB4_mmw321\n    { dataPointId: \"1631187403710\", qualityCode: \"1\", value: bool[3].toString()} //PDB4_MMW322\n   ];\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 400,
        "wires": [
            [
                "4c2d9eba9ccab924"
            ]
        ]
    },
    {
        "id": "4c2d9eba9ccab924",
        "type": "trigger",
        "z": "61a9ab317891e053",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 400,
        "wires": [
            [
                "93c3111f6b790377"
            ]
        ]
    },
    {
        "id": "93c3111f6b790377",
        "type": "link out",
        "z": "61a9ab317891e053",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 695,
        "y": 400,
        "wires": []
    },
    {
        "id": "41b4315e1518220e",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "MMW32-2",
        "host": "192.168.10.203",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "5423f2b0c4936b19"
            ]
        ]
    },
    {
        "id": "a94b4cbd0df3eaa4",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false ){\n       \n const values1 = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-Line_Speed_Act00003\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00003\", qualityCode: \"1\", value: \"0\"},//Line Speed max\n    { dataPointId: \"DP-Machine_status00003\", qualityCode: \"1\", value: \"false\" },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00003\", qualityCode: \"1\", value: \"0\" },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00003\", qualityCode: \"1\", value: \"0\" },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00003\", qualityCode: \"1\",  value: \"false\" },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00003\", qualityCode: \"1\",  value: \"false\" },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00003\", qualityCode: \"1\",  value: \"false\" },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00003\", qualityCode: \"1\", value: \"0\"},//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00003\", qualityCode: \"1\", value: \"0\"},//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00003\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00003\", qualityCode: \"1\",value: \"0\" },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00003\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00003\", qualityCode: \"1\", value: \"0\" },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00009\", qualityCode: \"1\", value: \"7\" },//Reason of stop\n    { dataPointId: \"1627109364475\", qualityCode: \"1\", value: \"0\" },\n    { dataPointId: \"1637134381783\", qualityCode: \"1\", value: \"0\" },//Reason of stop\n    { dataPointId: \"1637134387716\", qualityCode: \"1\", value: \"0\"}//Reason of stop\n \n   ];   \n\n   \n    msg._time = new Date();\n    msg.payload = values1;   \n    return msg;\n    \n}else\n{\n   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 80,
        "wires": [
            [
                "0ade41f3f6df2085"
            ]
        ]
    },
    {
        "id": "b8015539bda6b252",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "MMW24",
        "host": "192.168.10.201",
        "x": 480,
        "y": 120,
        "wires": [
            [
                "67e89ee19ac88c07"
            ]
        ]
    },
    {
        "id": "5f6c87e14e544575",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values1 = [\n    //MMW24\n    { dataPointId: \"DP-Line_Speed_Act00001\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00001\", qualityCode: \"1\",value: \"0\" },//Line Speed max\n    { dataPointId: \"DP-Machine_status00001\", qualityCode: \"1\", value: \"false\" },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00001\", qualityCode: \"1\", value: \"0\"},//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00001\", qualityCode: \"1\", value: \"0\" },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00001\", qualityCode: \"1\", value: \"false\" },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00001\", qualityCode: \"1\", value: \"false\" },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00001\", qualityCode: \"1\", value: \"false\" },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00001\", qualityCode: \"1\", value: \"0\" },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00001\", qualityCode: \"1\", value: \"0\" },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00001\", qualityCode: \"1\", value: \"0\"},//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00001\", qualityCode: \"1\",value: \"0\" },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00001\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00001\", qualityCode: \"1\", value: \"0\" },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00007\", qualityCode: \"1\", value: \"7\" },//Reason of stop\n    { dataPointId: \"1627109152030\", qualityCode: \"1\", value: \"0\"},//Reason of stop\n    { dataPointId: \"1637131764514\", qualityCode: \"1\", value: \"0\" },//Reason of stop\n    { dataPointId: \"1637131771686\", qualityCode: \"1\", value: \"0\" }//Reason of stop\n  \n   ]; \n\n    \n    msg._time = new Date();\n    msg.payload = values1;   \n    return msg;\n    \n}else\n{\n   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 120,
        "wires": [
            [
                "5583efb7960c6ff4"
            ]
        ]
    },
    {
        "id": "f9d32407116c481e",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "MMW32-1",
        "host": "192.168.10.202",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "3447a47cdb0dcf19"
            ]
        ]
    },
    {
        "id": "b8b08b4e5ef63969",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values = [\n    //MMW32-1\n    { dataPointId: \"DP-Line_Speed_Act00002\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00002\", qualityCode: \"1\", value: \"0\"},//Line Speed max\n    { dataPointId: \"DP-Machine_status00002\", qualityCode: \"1\", value: \"false\" },//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00002\", qualityCode: \"1\", value: \"0\" },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00002\", qualityCode: \"1\", value: \"0\" },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00002\", qualityCode: \"1\", value: \"false\" },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00002\", qualityCode: \"1\", value: \"false\" },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00002\", qualityCode: \"1\", value: \"false\" },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00002\", qualityCode: \"1\", value: \"0\" },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00002\", qualityCode: \"1\", value: \"0\" },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00002\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00002\", qualityCode: \"1\", value: \"0\" },//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00002\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00002\", qualityCode: \"1\", value: \"0\" },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00008\", qualityCode: \"1\", value: \"7\" },//Reason of stop\n    { dataPointId: \"1627109250060\", qualityCode: \"1\", value: \"0\" },//Reason of stop\n    { dataPointId: \"1637134363960\", qualityCode: \"1\", value: \"0\" },//Reason of stop\n    { dataPointId: \"1637134370126\", qualityCode: \"1\", value: \"0\" }//Reason of stop\n \n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n}else\n{\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            [
                "4db89e2ea0af48b2"
            ]
        ]
    },
    {
        "id": "0035ea6a2adaf037",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "MMW32-3",
        "host": "192.168.10.204",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "064c496343e6338f"
            ]
        ]
    },
    {
        "id": "ceedcd451a0b7052",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-Line_Speed_Act00004\", qualityCode: \"1\", value: \"0\"},//Line Speed Act\n    { dataPointId: \"DP-Line_Speed_MAX00004\", qualityCode: \"1\", value: \"0\" },//Line Speed max\n    { dataPointId: \"DP-Machine_status00004\", qualityCode: \"1\", value: \"false\"},//Machine Status\n    { dataPointId: \"DP-LUBRICANT_TEMPERATURE00004\", qualityCode: \"1\", value: \"0\" },//Lubricant temp\n    { dataPointId: \"DP-GEAR_OIL_TEMPERATURE00004\", qualityCode: \"1\", value: \"0\" },//Gear Oil temp\n    { dataPointId: \"DP-SPOOLER_1_SELECTION00004\", qualityCode: \"1\", value: \"false\" },//Spooler 1 Selection\n    { dataPointId: \"DP-SPOOLER_2_SELECTION00004\", qualityCode: \"1\", value: \"false\" },//spooler 2 Selection\n    { dataPointId: \"DP-ANNEALER_SELECTION00004\", qualityCode: \"1\", value: \"false\" },//Annealer selection\n    { dataPointId: \"DP-NO_OF_WIRES00004\", qualityCode: \"1\", value: \"0\" },//No of Wire\n    { dataPointId: \"DP-WIRE_SIZE00004\", qualityCode: \"1\", value: \"0\" },//Wire Size\n    { dataPointId: \"DP-SPOOLER_1_LENGTH_ACTUAL00004\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n    { dataPointId: \"DP-SPOOLER_1_LAST_SPOOL_LENG00004\", qualityCode: \"1\", value: \"0\"},//Spooler 1 last spool length\n    { dataPointId: \"DP-SPOOLER_2_LENGTH_ACTUAL00004\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n    { dataPointId: \"DP-SPOOLER_2_LAST_SPOOL_LENG00004\", qualityCode: \"1\", value: \"0\" },//spooler 2 last spool length\n    { dataPointId: \"DP-REASON_OF_STOP00010\", qualityCode: \"1\", value: \"7\" },//Reason of stop\n    { dataPointId: \"1627109391001\", qualityCode: \"1\", value: \"0\" },//Reason of stop\n    { dataPointId: \"1637134397360\", qualityCode: \"1\", value: \"0\" },//Reason of stop\n    { dataPointId: \"1637134403372\", qualityCode: \"1\", value: \"0\" }//Reason of stop\n \n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n}else\n{\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 240,
        "wires": [
            [
                "60e9a2b017b37700"
            ]
        ]
    },
    {
        "id": "8b1e085fb8e10499",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "Buncher 1",
        "host": "192.168.10.211",
        "x": 470,
        "y": 300,
        "wires": [
            [
                "ea2611549e8a9293"
            ]
        ]
    },
    {
        "id": "5baad52f449135ed",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00001\", qualityCode: \"1\", value: \"0\"},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00001\", qualityCode: \"1\",  value: \"0\"},//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499756660\", qualityCode: \"1\",  value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1626499771467\", qualityCode: \"1\",  value: \"0\" },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00001\", qualityCode: \"1\",  value: \"7\" },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00001\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00001\", qualityCode: \"1\",  value: \"0\" },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00001\", qualityCode: \"1\",  value: \"0\" },//LAY_LENGTH_MM\n    { dataPointId: \"1627119377566\", qualityCode: \"1\",  value: \"false\" }\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 300,
        "wires": [
            [
                "321ce2314a309762"
            ]
        ]
    },
    {
        "id": "0ade41f3f6df2085",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 875,
        "y": 80,
        "wires": []
    },
    {
        "id": "5583efb7960c6ff4",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 875,
        "y": 120,
        "wires": []
    },
    {
        "id": "4db89e2ea0af48b2",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 855,
        "y": 180,
        "wires": []
    },
    {
        "id": "60e9a2b017b37700",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 875,
        "y": 240,
        "wires": []
    },
    {
        "id": "a440d313461c97df",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "Buncher 2",
        "host": "192.168.10.212",
        "x": 470,
        "y": 360,
        "wires": [
            [
                "d69ade9e3e520110"
            ]
        ]
    },
    {
        "id": "30711196371b1003",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00002\", qualityCode: \"1\", value: \"0\"},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00002\", qualityCode: \"1\", value: \"0\" },//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499845034\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_ACT\n    { dataPointId: \"1626499833105\", qualityCode: \"1\", value: \"0\" },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00002\", qualityCode: \"1\",value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00002\", qualityCode: \"1\",value: \"0\" },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00002\", qualityCode: \"1\", value: \"0\"},//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00002\", qualityCode: \"1\",value: \"0\" },//LAY_LENGTH_MM\n    { dataPointId: \"1627119388979\", qualityCode: \"1\", value: \"false\" }//LAY_LENGTH_MM\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            [
                "1530dd7bd62eba5b"
            ]
        ]
    },
    {
        "id": "ab45763995e253bd",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "Buncher 3",
        "host": "192.168.10.213",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "0509930d0560b58e"
            ]
        ]
    },
    {
        "id": "faea4a6a401740b0",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false ){\n       \n const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00003\", qualityCode: \"1\", value: \"0\"},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00003\", qualityCode: \"1\",  value: \"0\"},//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499853026\", qualityCode: \"1\",  value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1626499894026\", qualityCode: \"1\",  value: \"0\" },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00003\", qualityCode: \"1\",  value: \"7\" },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00003\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00003\", qualityCode: \"1\",  value: \"0\" },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00003\", qualityCode: \"1\",  value: \"0\" },//LAY_LENGTH_MM\n    { dataPointId: \"1627119401241\", qualityCode: \"1\",  value: \"false\" }\n    \n   \n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 420,
        "wires": [
            [
                "6d961ff420447992"
            ]
        ]
    },
    {
        "id": "3d270a5aa42de328",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "Buncher 4",
        "host": "192.168.10.214",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "f32ccebd9ed234d5"
            ]
        ]
    },
    {
        "id": "6e49afa8f45bf03a",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00004\", qualityCode: \"1\", value: \"0\"},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00004\", qualityCode: \"1\",  value: \"0\"},//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499863410\", qualityCode: \"1\",  value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1626499900647\", qualityCode: \"1\",  value: \"0\" },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00004\", qualityCode: \"1\",  value: \"7\" },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00004\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00004\", qualityCode: \"1\",  value: \"0\" },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00004\", qualityCode: \"1\",  value: \"0\" },//LAY_LENGTH_MM\n    { dataPointId: \"1627119410496\", qualityCode: \"1\",  value: \"false\" }\n    \n  \n   ];\n\n   \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 480,
        "wires": [
            [
                "39efdb7406aaa6fc"
            ]
        ]
    },
    {
        "id": "a9fcda3446441ebf",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "Buncher 5",
        "host": "192.168.10.215",
        "x": 470,
        "y": 540,
        "wires": [
            [
                "7f1a573dbbaac169"
            ]
        ]
    },
    {
        "id": "f09a9caacab5597a",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00005\", qualityCode: \"1\", value: \"0\"},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00005\", qualityCode: \"1\",  value: \"0\"},//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499870215\", qualityCode: \"1\",  value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1626499906784\", qualityCode: \"1\",  value: \"0\" },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00005\", qualityCode: \"1\",  value: \"7\" },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00005\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00005\", qualityCode: \"1\",  value: \"0\" },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00005\", qualityCode: \"1\",  value: \"0\" },//LAY_LENGTH_MM\n    { dataPointId: \"1627119416488\", qualityCode: \"1\",  value: \"false\" }\n    \n    \n   \n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 540,
        "wires": [
            [
                "4e40866d6a24bb9d"
            ]
        ]
    },
    {
        "id": "f688642e7a15108f",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "Buncher 6",
        "host": "192.168.10.216",
        "x": 470,
        "y": 600,
        "wires": [
            [
                "b62fd7ec5cac09ba"
            ]
        ]
    },
    {
        "id": "135ff3ad815e39d3",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "if(msg.payload == false){\n       \n const values = [\n    //MMW32-2\n    \n    { dataPointId: \"DP-TWIST_PER_MINUTE_MAX00006\", qualityCode: \"1\", value: \"0\"},//TWIST_PER_MINUTE_MAX\n    { dataPointId: \"DP-TWIST_PER_MINUTE_ACT00006\", qualityCode: \"1\",  value: \"0\"},//TWIST_PER_MINUTE_ACT\n    { dataPointId: \"1626499876871\", qualityCode: \"1\",  value: \"0\"},//LINE_SPEED_ACT\n    { dataPointId: \"1626499912776\", qualityCode: \"1\",  value: \"0\" },//WIRE_SIZE_MM2\n    { dataPointId: \"DP-REASON_OF_STOP00006\", qualityCode: \"1\",  value: \"7\" },//REASON_OF_STOP\n    { dataPointId: \"DP-LENGTH_SET_KM00006\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_KM\n    { dataPointId: \"DP-LENGTH_ACTUAL_KM00006\", qualityCode: \"1\",  value: \"0\" },//LENGTH_ACTUAL_KM\n    { dataPointId: \"DP-LAY_LENGTH_MM00006\", qualityCode: \"1\",  value: \"0\" },//LAY_LENGTH_MM\n    { dataPointId: \"1627119423392\", qualityCode: \"1\",  value: \"false\" }\n    \n   \n   ];\n\n   \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 600,
        "wires": [
            [
                "c1bf0897c050f912"
            ]
        ]
    },
    {
        "id": "321ce2314a309762",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 855,
        "y": 300,
        "wires": []
    },
    {
        "id": "1530dd7bd62eba5b",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 855,
        "y": 360,
        "wires": []
    },
    {
        "id": "6d961ff420447992",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 855,
        "y": 420,
        "wires": []
    },
    {
        "id": "39efdb7406aaa6fc",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 855,
        "y": 480,
        "wires": []
    },
    {
        "id": "4e40866d6a24bb9d",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 855,
        "y": 540,
        "wires": []
    },
    {
        "id": "c1bf0897c050f912",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 855,
        "y": 600,
        "wires": []
    },
    {
        "id": "dcbb9cb0f919a563",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "INSULATION 1",
        "host": "192.168.10.41",
        "x": 480,
        "y": 660,
        "wires": [
            [
                "d920060abcd13952"
            ]
        ]
    },
    {
        "id": "e04a3a6a6ea80c9d",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "INSULATION 2",
        "host": "192.168.10.61",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "6dbdcd139f691627"
            ]
        ]
    },
    {
        "id": "2fce0c34d70b6cd1",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "INSULATION 3",
        "host": "192.168.10.81",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "f42b5ddd78be67ef"
            ]
        ]
    },
    {
        "id": "5265fdf62d91dce1",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "INSULATION 4",
        "host": "192.168.10.101",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "a05e4369733fd9fe"
            ]
        ]
    },
    {
        "id": "ba25fe65c7288ffd",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "INSULATION 5",
        "host": "192.168.10.121",
        "x": 480,
        "y": 820,
        "wires": [
            [
                "c5a3a03ed31afb6f"
            ]
        ]
    },
    {
        "id": "0bbf946fe11f4dcd",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "INSULATION 6",
        "host": "192.168.10.141",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "7efad4bb682a5911"
            ]
        ]
    },
    {
        "id": "573f361d51d7b753",
        "type": "adv ping",
        "z": "9b7e6180dfe7188a",
        "name": "INSULATION 7",
        "host": "192.168.10.161",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "a06efba7d66826d6"
            ]
        ]
    },
    {
        "id": "d920060abcd13952",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "Insulation 1",
        "func": "if(msg.payload == false){\n       \n const values = [\n    \n    { dataPointId: \"1628141625886\", qualityCode: \"1\", value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"1628141619349\", qualityCode: \"1\", value: \"false\" },//MACHINE_START\n    { dataPointId: \"1628141609886\", qualityCode: \"1\", value: \"0\" },//ACTUAL_LENGTH\n    { dataPointId: \"1628141601590\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141595207\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141587382\", qualityCode: \"1\", value: \"none\" },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141580439\", qualityCode: \"1\", value: \"none\" },//RECIPE_NAME\n    { dataPointId: \"1628141573462\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141566461\", qualityCode: \"1\", value: \"0\" },//CABLE_DIAMETER\n    { dataPointId: \"1628141560077\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_MAX\n    { dataPointId: \"1628141546625\", qualityCode: \"1\", value: \"0\" }//LINE_SPEED_ACT\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 660,
        "wires": [
            [
                "8ed64c194034cb63"
            ]
        ]
    },
    {
        "id": "8ed64c194034cb63",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 915,
        "y": 660,
        "wires": []
    },
    {
        "id": "1691fd6827a2b27d",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "Insulation 5",
        "func": "if(msg.payload == false){\n       \n const values = [\n    \n    { dataPointId: \"1628142658096\", qualityCode: \"1\", value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"1628142649471\", qualityCode: \"1\", value: \"false\" },//MACHINE_START\n    { dataPointId: \"1628142639198\", qualityCode: \"1\", value: \"0\" },//ACTUAL_LENGTH\n    { dataPointId: \"1628142632286\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142217368\", qualityCode: \"1\", value: \"0\"},//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142206134\", qualityCode: \"1\", value: \"0\" },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142195709\", qualityCode: \"1\", value: \"0\" },//RECIPE_NAME\n    { dataPointId: \"1628142188966\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142181093\", qualityCode: \"1\", value: \"0\" },//CABLE_DIAMETER\n    { dataPointId: \"1628142173894\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_MAX\n    { dataPointId: \"1628142163286\", qualityCode: \"1\", value: \"0\" }//LINE_SPEED_ACT\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 820,
        "wires": [
            [
                "8c05bc614c7409a2"
            ]
        ]
    },
    {
        "id": "ab1d4d5fccb4a1fd",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "Insulation 2",
        "func": "if(msg.payload == false){\n       \n const values = [\n    \n    { dataPointId: \"1628141831910\", qualityCode: \"1\", value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"1628141788878\", qualityCode: \"1\", value: \"false\" },//MACHINE_START\n    { dataPointId: \"1628141776182\", qualityCode: \"1\", value: \"0\" },//ACTUAL_LENGTH\n    { dataPointId: \"1628141763870\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141747021\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141735573\", qualityCode: \"1\", value: \"0\" },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141727469\", qualityCode: \"1\", value: \"0\" },//RECIPE_NAME\n    { dataPointId: \"1628141716293\", qualityCode: \"1\", value: \"0\"},//LENGTH_SET_METER\t\n    { dataPointId: \"1628141706021\", qualityCode: \"1\", value: \"0\" },//CABLE_DIAMETER\n    { dataPointId: \"1628141698229\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_MAX\n    { dataPointId: \"1628141673848\", qualityCode: \"1\", value: \"0\" }//LINE_SPEED_ACT\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 700,
        "wires": [
            [
                "47222e376794fe0f"
            ]
        ]
    },
    {
        "id": "55e7a7ef996be726",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "Insulation 3",
        "func": "if(msg.payload == false ){\n       \n const values = [\n    \n    { dataPointId: \"1628142015630\", qualityCode: \"1\", value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"1628142005221\", qualityCode: \"1\", value: \"false\" },//MACHINE_START\n    { dataPointId: \"1628141995438\", qualityCode: \"1\", value: \"0\" },//ACTUAL_LENGTH\n    { dataPointId: \"1628141983879\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628141948438\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628141938245\", qualityCode: \"1\", value: \"0\" },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628141924893\", qualityCode: \"1\", value: \"0\" },//RECIPE_NAME\n    { dataPointId: \"1628141916118\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_METER\t\n    { dataPointId: \"1628141909205\", qualityCode: \"1\", value: \"0\" },//CABLE_DIAMETER\n    { dataPointId: \"1628141898911\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_MAX\n    { dataPointId: \"1628141886520\", qualityCode: \"1\", value: \"0\" }//LINE_SPEED_ACT\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 740,
        "wires": [
            [
                "b73f2f648c63e7a5"
            ]
        ]
    },
    {
        "id": "abd48bcc30721b90",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "Insulation 4",
        "func": "if(msg.payload == false){\n       \n const values = [\n    \n    { dataPointId: \"1628142139141\", qualityCode: \"1\", value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"1628142129958\", qualityCode: \"1\", value: \"false\" },//MACHINE_START\n    { dataPointId: \"1628142121318\", qualityCode: \"1\", value: \"0\" },//ACTUAL_LENGTH\n    { dataPointId: \"1628142115182\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142105686\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142092366\", qualityCode: \"1\", value: \"0\" },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142082534\", qualityCode: \"1\", value: \"0\" },//RECIPE_NAME\n    { dataPointId: \"1628142065550\", qualityCode: \"1\", value: \"0\"},//LENGTH_SET_METER\t\n    { dataPointId: \"1628142057605\", qualityCode: \"1\", value: \"0\" },//CABLE_DIAMETER\n    { dataPointId: \"1628142051046\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_MAX\n    { dataPointId: \"1628142039329\", qualityCode: \"1\", value: \"0\" }//LINE_SPEED_ACT\n   ];\n   \n   \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 780,
        "wires": [
            [
                "578ecd32b8c4fa7a"
            ]
        ]
    },
    {
        "id": "183711fc0b991e0b",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "Insulation 6",
        "func": "if(msg.payload == false){\n       \n  const values = [\n    \n    { dataPointId: \"1628142818119\", qualityCode: \"1\", value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"1628142808670\", qualityCode: \"1\", value: \"false\" },//MACHINE_START\n    { dataPointId: \"1628142798647\", qualityCode: \"1\", value: \"0\" },//ACTUAL_LENGTH\n    { dataPointId: \"1628142791726\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142777297\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142723457\", qualityCode: \"1\", value: \"0\" },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142715103\", qualityCode: \"1\", value: \"0\" },//RECIPE_NAME\n    { dataPointId: \"1628142708430\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142700105\", qualityCode: \"1\", value: \"0\" },//CABLE_DIAMETER\n    { dataPointId: \"1628142678846\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_MAX\n    { dataPointId: \"1628142670999\", qualityCode: \"1\", value: \"0\" }//LINE_SPEED_ACT\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 860,
        "wires": [
            [
                "0e932eef1c455bfc"
            ]
        ]
    },
    {
        "id": "60a12a78c1de5106",
        "type": "function",
        "z": "9b7e6180dfe7188a",
        "name": "Insulation 7",
        "func": "if(msg.payload == false){\n       \n const values = [\n    \n    { dataPointId: \"1628142931326\", qualityCode: \"1\", value: \"7\"},//REASON_OF_STOP\n    { dataPointId: \"1628142917504\", qualityCode: \"1\", value: \"false\" },//MACHINE_START\n    { dataPointId: \"1628142910407\", qualityCode: \"1\", value: \"0\" },//ACTUAL_LENGTH\n    { dataPointId: \"1628142902822\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_45MM_RPM_ACT\n    { dataPointId: \"1628142893278\", qualityCode: \"1\", value: \"0\" },//EXTRUDER_80MM_RPM_ACT\n    { dataPointId: \"1628142886333\", qualityCode: \"1\", value: \"0\" },//RECIPE_RECORD_NAME\n    { dataPointId: \"1628142875126\", qualityCode: \"1\", value: \"0\" },//RECIPE_NAME\n    { dataPointId: \"1628142866422\", qualityCode: \"1\", value: \"0\" },//LENGTH_SET_METER\t\n    { dataPointId: \"1628142860038\", qualityCode: \"1\", value: \"0\" },//CABLE_DIAMETER\n    { dataPointId: \"1628142853726\", qualityCode: \"1\", value: \"0\" },//LINE_SPEED_MAX\n    { dataPointId: \"1628142845949\", qualityCode: \"1\", value: \"0\" }//LINE_SPEED_ACT\n   ];\n\n    \n    msg._time = new Date();\n    msg.payload = values;   \n    return msg;\n    \n}else\n{\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 900,
        "wires": [
            [
                "5aba5f53e8355720"
            ]
        ]
    },
    {
        "id": "47222e376794fe0f",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 915,
        "y": 700,
        "wires": []
    },
    {
        "id": "b73f2f648c63e7a5",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 915,
        "y": 740,
        "wires": []
    },
    {
        "id": "578ecd32b8c4fa7a",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 915,
        "y": 780,
        "wires": []
    },
    {
        "id": "8c05bc614c7409a2",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 915,
        "y": 820,
        "wires": []
    },
    {
        "id": "0e932eef1c455bfc",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 915,
        "y": 860,
        "wires": []
    },
    {
        "id": "5aba5f53e8355720",
        "type": "link out",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "links": [
            "a0d8b096.550be",
            "e25038b33fab932d"
        ],
        "x": 915,
        "y": 900,
        "wires": []
    },
    {
        "id": "5423f2b0c4936b19",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 80,
        "wires": [
            [
                "a94b4cbd0df3eaa4"
            ]
        ]
    },
    {
        "id": "67e89ee19ac88c07",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "5f6c87e14e544575"
            ]
        ]
    },
    {
        "id": "3447a47cdb0dcf19",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "b8b08b4e5ef63969"
            ]
        ]
    },
    {
        "id": "064c496343e6338f",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 630,
        "y": 240,
        "wires": [
            [
                "ceedcd451a0b7052"
            ]
        ]
    },
    {
        "id": "ea2611549e8a9293",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "5baad52f449135ed"
            ]
        ]
    },
    {
        "id": "d69ade9e3e520110",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 630,
        "y": 360,
        "wires": [
            [
                "30711196371b1003"
            ]
        ]
    },
    {
        "id": "0509930d0560b58e",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "faea4a6a401740b0"
            ]
        ]
    },
    {
        "id": "f32ccebd9ed234d5",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "6e49afa8f45bf03a"
            ]
        ]
    },
    {
        "id": "7f1a573dbbaac169",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 540,
        "wires": [
            [
                "f09a9caacab5597a"
            ]
        ]
    },
    {
        "id": "b62fd7ec5cac09ba",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 610,
        "y": 600,
        "wires": [
            [
                "135ff3ad815e39d3"
            ]
        ]
    },
    {
        "id": "aa8721ff239b77a3",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 650,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "6dbdcd139f691627",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 650,
        "y": 700,
        "wires": [
            [
                "ab1d4d5fccb4a1fd"
            ]
        ]
    },
    {
        "id": "f42b5ddd78be67ef",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "x": 630,
        "y": 740,
        "wires": [
            [
                "55e7a7ef996be726"
            ]
        ]
    },
    {
        "id": "a05e4369733fd9fe",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 630,
        "y": 780,
        "wires": [
            [
                "abd48bcc30721b90"
            ]
        ]
    },
    {
        "id": "c5a3a03ed31afb6f",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 650,
        "y": 820,
        "wires": [
            [
                "1691fd6827a2b27d"
            ]
        ]
    },
    {
        "id": "7efad4bb682a5911",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 650,
        "y": 860,
        "wires": [
            [
                "183711fc0b991e0b"
            ]
        ]
    },
    {
        "id": "a06efba7d66826d6",
        "type": "rbe",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 650,
        "y": 900,
        "wires": [
            [
                "60a12a78c1de5106"
            ]
        ]
    },
    {
        "id": "bfb12371d19d95a0",
        "type": "inject",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "f09a9caacab5597a"
            ]
        ]
    },
    {
        "id": "726bb3b01c56b007",
        "type": "inject",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "41b4315e1518220e",
                "b8015539bda6b252",
                "f9d32407116c481e",
                "0035ea6a2adaf037",
                "8b1e085fb8e10499",
                "a440d313461c97df",
                "ab45763995e253bd",
                "3d270a5aa42de328",
                "a9fcda3446441ebf",
                "f688642e7a15108f",
                "dcbb9cb0f919a563",
                "e04a3a6a6ea80c9d",
                "2fce0c34d70b6cd1",
                "5265fdf62d91dce1",
                "ba25fe65c7288ffd",
                "0bbf946fe11f4dcd",
                "573f361d51d7b753"
            ]
        ]
    },
    {
        "id": "63a802186c39b70d",
        "type": "debug",
        "z": "9b7e6180dfe7188a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 500,
        "wires": []
    },
    {
        "id": "eed0780f1126169b",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data (Check before connecting to Mindsphere)",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/Spare.js\",\n        localStorage: {\"key\": \"Test\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    const values = [\n        { dataPointId: \"1639476303942\", qualityCode: \"1\", value: previous[\"WIRE SIZE MM22\"].toString() },//WIRE_SIZE_MM2\n        { dataPointId: \"1639476311119\", qualityCode: \"1\", value: previous[\"LENGTH ACTUAL KM2\"].toString() },//LENGTH_ACTUAL_KM\n        { dataPointId: \"1639476294507\", qualityCode: \"1\", value: previous[\"Status\"].toString() }\n        ];\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null,msg]); // Send data to Mindsphere\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1200,
        "wires": [
            [
                "c7bb036fcf4faec0",
                "105cde0846a16fc0"
            ],
            []
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "aee4bb9d95f79252",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"Test\"};\nmsg.filename = \"/home/unit7iiot/node-red/Spare.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1200,
        "wires": [
            [
                "8091d9bc45a488a9"
            ]
        ]
    },
    {
        "id": "8091d9bc45a488a9",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "B3 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "eed0780f1126169b"
            ]
        ]
    },
    {
        "id": "c7bb036fcf4faec0",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1550,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "105cde0846a16fc0",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write B2Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 1180,
        "wires": [
            [
                "c4fb342d636de0fa"
            ]
        ]
    },
    {
        "id": "df82575db3deb99c",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\n\nlocalStorage = {\n    \"key\":\"Test\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1300,
        "wires": [
            [
                "3139a9a766c3596e"
            ],
            []
        ]
    },
    {
        "id": "3139a9a766c3596e",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set B2 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 890,
        "y": 1280,
        "wires": [
            [
                "7dc9fcbe9ddfe77b"
            ]
        ]
    },
    {
        "id": "d0954046fa4eece0",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 1200,
        "wires": [
            [
                "aee4bb9d95f79252"
            ]
        ]
    },
    {
        "id": "7dc9fcbe9ddfe77b",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1300,
        "wires": []
    },
    {
        "id": "c4fb342d636de0fa",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 1160,
        "wires": []
    },
    {
        "id": "912c191e0b7eba6e",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9e09706a722adc8f",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 2200,
        "wires": []
    },
    {
        "id": "9353fbcaa9203312",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD24Shift.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2240,
        "wires": [
            [
                "bae89bd644f2f870"
            ]
        ]
    },
    {
        "id": "a29bd6e920868d07",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "97794953923a3503"
            ]
        ]
    },
    {
        "id": "ef3fcde8851a5ca1",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1350,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "a756e00b12631da6",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "89569056c2120ad4"
        ],
        "uncaught": false,
        "x": 1210,
        "y": 2320,
        "wires": [
            [
                "79b7b71390e9e700"
            ]
        ]
    },
    {
        "id": "89569056c2120ad4",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD24Shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1210,
        "y": 2360,
        "wires": [
            [
                "79b7b71390e9e700"
            ]
        ]
    },
    {
        "id": "79b7b71390e9e700",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL1\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL1\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2340,
        "wires": [
            [
                "699328d48be2f50e"
            ],
            [
                "31dbce0f109ed909"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "97794953923a3503",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD24 Previous Value",
        "localStorage": "276b5669.9c170a",
        "x": 710,
        "y": 2300,
        "wires": [
            [
                "43fa3faf771b8280",
                "be23a574623a6d12"
            ]
        ]
    },
    {
        "id": "43fa3faf771b8280",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\n\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD_MWD24\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION1\"] === true){\n        currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    if(current[\"SPOOLER 2 SELECTION1\"] === true){\n        currentlen = Number(current[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n        previouslen = Number(previous[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD_MWD24\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2300,
        "wires": [
            [
                "631a1b48fb044ef4"
            ],
            [
                "89569056c2120ad4"
            ]
        ]
    },
    {
        "id": "631a1b48fb044ef4",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD24 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1250,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "bae89bd644f2f870",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD24Shift",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 730,
        "y": 2240,
        "wires": [
            [
                "733f08d6ca22564c"
            ]
        ]
    },
    {
        "id": "733f08d6ca22564c",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    if(current[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION1\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                        { date : new Date()},\n                        { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                        { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n                        { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n                        { dataPointId: \"1639464280864\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                        { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                        { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n                        { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n                     ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      if(current[\"SPOOLER 2 SELECTION1\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                        { date : new Date()},\n                        { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                        { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n                        { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n                        { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                        { dataPointId: \"1639464288450\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                        { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n                        { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n                     ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2240,
        "wires": [
            [
                "ef3fcde8851a5ca1"
            ],
            [
                "31dbce0f109ed909"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "f307a16d3eb8b8f0",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "bae89bd644f2f870"
        ],
        "uncaught": false,
        "x": 730,
        "y": 2180,
        "wires": [
            [
                "733f08d6ca22564c"
            ]
        ]
    },
    {
        "id": "699328d48be2f50e",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1690,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "31dbce0f109ed909",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "filename": "/home/unit7iiot/node-red/Test31.js",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1710,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "be23a574623a6d12",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 2360,
        "wires": []
    },
    {
        "id": "3fe340829cec1c36",
        "type": "ping",
        "z": "a00f5ebc02ec2834",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "MWD24 ping",
        "host": "192.168.10.201",
        "timer": "20",
        "inputs": 1,
        "x": 430,
        "y": 2540,
        "wires": [
            [
                "9d970298ed542602"
            ]
        ]
    },
    {
        "id": "63eaedf516842292",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "f0c177a70c6f9111",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD24Shift.js\",\n        localStorage: {\"key\": \"PD_MWD24\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { date : new Date()},\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2540,
        "wires": [
            [
                "c8d8633c06a3964c",
                "7b0d3ec7648e5ca7"
            ],
            [
                "31dbce0f109ed909"
            ]
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "9d970298ed542602",
        "type": "switch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 2540,
        "wires": [
            [
                "3bad5c476153e014"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file ",
            "To nowhere"
        ]
    },
    {
        "id": "3bad5c476153e014",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2540,
        "wires": [
            [
                "83f79dc70ee59c08"
            ]
        ]
    },
    {
        "id": "83f79dc70ee59c08",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD24 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 990,
        "y": 2540,
        "wires": [
            [
                "f0c177a70c6f9111"
            ]
        ]
    },
    {
        "id": "c8d8633c06a3964c",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1750,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "6b88b290bf50d876",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "cd65b082e2a1fa31",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "7b0d3ec7648e5ca7",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1770,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "b7f4e9ee6908b960",
        "type": "comment",
        "z": "a00f5ebc02ec2834",
        "name": "MWD 322 Testing",
        "info": "",
        "x": 910,
        "y": 2660,
        "wires": []
    },
    {
        "id": "dbb3f045f05a8542",
        "type": "comment",
        "z": "a00f5ebc02ec2834",
        "name": "MWD24 Testing",
        "info": "",
        "x": 930,
        "y": 2100,
        "wires": []
    },
    {
        "id": "5f99e87aa51062b1",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 2760,
        "wires": []
    },
    {
        "id": "d76c3577539d9be3",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD322Shift1.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2740,
        "wires": [
            [
                "860f990b507e91f7"
            ]
        ]
    },
    {
        "id": "44ab4b9d11b6c147",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD322\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD322Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2860,
        "wires": [
            [
                "360c9eccbf3bf4a4"
            ]
        ]
    },
    {
        "id": "bdf17492d6c27a0a",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift1",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1300,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "6c3cf96b1f20799c",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "d27dc7c4f895e2d7"
        ],
        "uncaught": false,
        "x": 1470,
        "y": 2820,
        "wires": [
            [
                "0294cda6b16ee353"
            ]
        ]
    },
    {
        "id": "d27dc7c4f895e2d7",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD322Shift1",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1260,
        "y": 2860,
        "wires": [
            [
                "0294cda6b16ee353"
            ]
        ]
    },
    {
        "id": "0294cda6b16ee353",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION3\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL3\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 2860,
        "wires": [
            [
                "d1d8f912663d1280"
            ],
            [
                "8f247f22f9f26428"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "360c9eccbf3bf4a4",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD322 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 730,
        "y": 2860,
        "wires": [
            [
                "d58fe029c62691b7"
            ]
        ]
    },
    {
        "id": "d58fe029c62691b7",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\n\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD322\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION3\"] === true){\n        currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n        previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD322\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2860,
        "wires": [
            [
                "f41a218a9b534876"
            ],
            [
                "d27dc7c4f895e2d7"
            ]
        ]
    },
    {
        "id": "f41a218a9b534876",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD322 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1250,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "860f990b507e91f7",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD322Shift1",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 760,
        "y": 2740,
        "wires": [
            [
                "e00f02ea707e3933"
            ]
        ]
    },
    {
        "id": "e00f02ea707e3933",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION3\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                        { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                        { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n                        { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                        { dataPointId: \"1639466796553\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                        { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                        { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                        { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                     ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2740,
        "wires": [
            [
                "bdf17492d6c27a0a"
            ],
            [
                "8f247f22f9f26428"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "0a1d24342a3f1009",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "860f990b507e91f7"
        ],
        "uncaught": false,
        "x": 730,
        "y": 2680,
        "wires": [
            [
                "e00f02ea707e3933"
            ]
        ]
    },
    {
        "id": "d1d8f912663d1280",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift1",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1840,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "8f247f22f9f26428",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "filename": "/home/unit7iiot/node-red/Test33.js",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1890,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "39e17a135511630f",
        "type": "ping",
        "z": "a00f5ebc02ec2834",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "MWD24 ping",
        "host": "192.168.10.203",
        "timer": "20",
        "inputs": 1,
        "x": 450,
        "y": 3100,
        "wires": [
            [
                "bb0917684c89dde7"
            ]
        ]
    },
    {
        "id": "49261a50d2635241",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "d456d4151512e2ed",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD322Shift1.js\",\n        localStorage: {\"key\": \"PD1_MWD322\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 1 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL3\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 3100,
        "wires": [
            [
                "53c8970e66f91e47",
                "3b62f7e77fc75332"
            ],
            [
                "8f247f22f9f26428"
            ]
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "bb0917684c89dde7",
        "type": "switch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 3100,
        "wires": [
            [
                "ed074dc205748054",
                "527a904eab3cde9f"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file ",
            "To nowhere"
        ]
    },
    {
        "id": "ed074dc205748054",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD322\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD322Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3100,
        "wires": [
            [
                "80c2c44464d0f8be"
            ]
        ]
    },
    {
        "id": "80c2c44464d0f8be",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD322 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1020,
        "y": 3100,
        "wires": [
            [
                "d456d4151512e2ed"
            ]
        ]
    },
    {
        "id": "53c8970e66f91e47",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1770,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "3f5ac9cc7dd274b6",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "4420120cb820c446",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "3b62f7e77fc75332",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift1",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1800,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "60104633027f3add",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1590,
        "y": 2100,
        "wires": [
            [
                "ae07fd968d6d0306"
            ]
        ]
    },
    {
        "id": "ae07fd968d6d0306",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 2080,
        "wires": []
    },
    {
        "id": "a76a1379aba93349",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL3\"].toString()},//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION3\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL3\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 2940,
        "wires": [
            [
                "5883cd8f1411fcae"
            ],
            [
                "8f247f22f9f26428"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "c9d7384acb6a8703",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD322Shift2.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2780,
        "wires": [
            [
                "985112136519cc02"
            ]
        ]
    },
    {
        "id": "985112136519cc02",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD322Shift2",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 760,
        "y": 2780,
        "wires": [
            [
                "4955143eef515cc6"
            ]
        ]
    },
    {
        "id": "4955143eef515cc6",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL3\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION3\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL3\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                        { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                        { dataPointId: \"1639466789109\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//No of Wire\n                        { dataPointId: \"1639466778336\", qualityCode: \"1\", value: current[\"WIRE SIZE3\"].toString() },//Wire Size\n                        { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                        { dataPointId: \"1639466806458\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                        { dataPointId: \"1639725314855\", qualityCode: \"1\", value: current[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n                        { dataPointId: \"1639725326858\", qualityCode: \"1\", value: current[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n                     ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2780,
        "wires": [
            [
                "40547bd5d2403c67"
            ],
            [
                "8f247f22f9f26428"
            ]
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "40547bd5d2403c67",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift2",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1300,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "99d9b11f0b949263",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "985112136519cc02"
        ],
        "uncaught": false,
        "x": 910,
        "y": 2700,
        "wires": [
            [
                "4955143eef515cc6"
            ]
        ]
    },
    {
        "id": "e0b128643f77ad80",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD322\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD322Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2940,
        "wires": [
            [
                "56b2b74b02c89a57"
            ]
        ]
    },
    {
        "id": "56b2b74b02c89a57",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD322 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 730,
        "y": 2940,
        "wires": [
            [
                "205a6bfc57a874a6"
            ]
        ]
    },
    {
        "id": "205a6bfc57a874a6",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\n\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD322\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION3\"] === true){\n        currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n        previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL3\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD322\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2940,
        "wires": [
            [
                "5c8217f831562eec"
            ],
            [
                "4f731866ba0bdacd"
            ]
        ]
    },
    {
        "id": "4f731866ba0bdacd",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD322Shift2",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1260,
        "y": 2940,
        "wires": [
            [
                "a76a1379aba93349"
            ]
        ]
    },
    {
        "id": "5c8217f831562eec",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD322 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1250,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "b6d6db0835ac7ac2",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "4f731866ba0bdacd"
        ],
        "uncaught": false,
        "x": 1470,
        "y": 2900,
        "wires": [
            [
                "a76a1379aba93349"
            ]
        ]
    },
    {
        "id": "5883cd8f1411fcae",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift2",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1840,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "d269b858e2f41c3c",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD322Shift2.js\",\n        localStorage: {\"key\": \"PD2_MWD322\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 2 SELECTION3\"] === true){\n        const values = [\n            { dataPointId: \"1639466754350\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466789109\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//No of Wire\n            { dataPointId: \"1639466778336\", qualityCode: \"1\", value: previous[\"WIRE SIZE3\"].toString() },//Wire Size\n            { dataPointId: \"1639466796553\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466806458\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL3\"].toString()},//Spooler 2 length\n            { dataPointId: \"1639725314855\", qualityCode: \"1\", value: previous[\"NOW_SPOOL13\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725326858\", qualityCode: \"1\", value: previous[\"NOW_SPOOL23\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 3200,
        "wires": [
            [
                "4923393dfc8c07c0",
                "1bb6f0f0831f8838"
            ],
            [
                "8f247f22f9f26428"
            ]
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "527a904eab3cde9f",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD322\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD322Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3200,
        "wires": [
            [
                "3d114e2f58bfcc97"
            ]
        ]
    },
    {
        "id": "3d114e2f58bfcc97",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD322 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1020,
        "y": 3200,
        "wires": [
            [
                "d269b858e2f41c3c"
            ]
        ]
    },
    {
        "id": "4923393dfc8c07c0",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1770,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "1bb6f0f0831f8838",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift2",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1800,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "d8709804cc51b069",
        "type": "comment",
        "z": "a00f5ebc02ec2834",
        "name": "MWD 323 Testing",
        "info": "",
        "x": 820,
        "y": 4380,
        "wires": []
    },
    {
        "id": "7e94dee4e1d4ad6b",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD323Shift1.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 4460,
        "wires": [
            [
                "0deff813c93a24e2"
            ]
        ]
    },
    {
        "id": "451faf7369a2bede",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD323\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD323Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 4580,
        "wires": [
            [
                "ba32c55968e3b3d3"
            ]
        ]
    },
    {
        "id": "01498620b53efb23",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift1",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1210,
        "y": 4460,
        "wires": [
            []
        ]
    },
    {
        "id": "4bac2238d64ea290",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "245c735abb64fec8"
        ],
        "uncaught": false,
        "x": 1380,
        "y": 4540,
        "wires": [
            [
                "9a06804a1d30115d"
            ]
        ]
    },
    {
        "id": "245c735abb64fec8",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD323Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1170,
        "y": 4580,
        "wires": [
            [
                "9a06804a1d30115d"
            ]
        ]
    },
    {
        "id": "9a06804a1d30115d",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL4\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n     ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION4\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL4\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 4580,
        "wires": [
            [
                "a1d289cf73c9709f"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "ba32c55968e3b3d3",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD323 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 640,
        "y": 4580,
        "wires": [
            [
                "98d87c0563f4fc0a"
            ]
        ]
    },
    {
        "id": "98d87c0563f4fc0a",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD323\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION4\"] === true){\n        var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD323\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 4580,
        "wires": [
            [
                "74ffbfa316f37110"
            ],
            [
                "245c735abb64fec8"
            ]
        ]
    },
    {
        "id": "74ffbfa316f37110",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD323 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1160,
        "y": 4540,
        "wires": [
            []
        ]
    },
    {
        "id": "0deff813c93a24e2",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD323Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 4460,
        "wires": [
            [
                "eeebb9a136a4863a"
            ]
        ]
    },
    {
        "id": "eeebb9a136a4863a",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL4\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION4\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                     { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//No of Wire\n                     { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n                     { dataPointId: \"1639466848841\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                     { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                     { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 4460,
        "wires": [
            [
                "01498620b53efb23"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "4c7d58d9620bc748",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "0deff813c93a24e2"
        ],
        "uncaught": false,
        "x": 640,
        "y": 4400,
        "wires": [
            [
                "eeebb9a136a4863a"
            ]
        ]
    },
    {
        "id": "a1d289cf73c9709f",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD323Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1750,
        "y": 4580,
        "wires": [
            []
        ]
    },
    {
        "id": "576d06a235245edf",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "filename": "/home/unit7iiot/node-red/Test33.js",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1800,
        "y": 4720,
        "wires": [
            []
        ]
    },
    {
        "id": "e1347dc98db6376f",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL4\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n       ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION4\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL4\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 4660,
        "wires": [
            [
                "921a274d340645e5"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "e646d433c4849da4",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD323Shift2.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 4500,
        "wires": [
            [
                "54fb4f312ad7ba55"
            ]
        ]
    },
    {
        "id": "54fb4f312ad7ba55",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD323Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 4500,
        "wires": [
            [
                "d6892a371ce4d4b5"
            ]
        ]
    },
    {
        "id": "d6892a371ce4d4b5",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\"},//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL4\"].toString()  },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n     ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION4\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL4\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                     { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466841662\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//No of Wire\n                     { dataPointId: \"1639466830352\", qualityCode: \"1\", value: current[\"WIRE SIZE4\"].toString() },//Wire Size\n                     { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                     { dataPointId: \"1639466866192\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                     { dataPointId: \"1639725359431\", qualityCode: \"1\", value: current[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725367432\", qualityCode: \"1\", value: current[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n      ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 4500,
        "wires": [
            [
                "5f92c37202320b39"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "5f92c37202320b39",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD322Shift2",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1210,
        "y": 4500,
        "wires": [
            []
        ]
    },
    {
        "id": "c0a5524fef015ef4",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "54fb4f312ad7ba55"
        ],
        "uncaught": false,
        "x": 820,
        "y": 4420,
        "wires": [
            [
                "d6892a371ce4d4b5"
            ]
        ]
    },
    {
        "id": "d17798b1e0422855",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD323\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD323Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 4660,
        "wires": [
            [
                "decf0705260bcbbc"
            ]
        ]
    },
    {
        "id": "decf0705260bcbbc",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD323 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 640,
        "y": 4660,
        "wires": [
            [
                "1b488924536d8eee"
            ]
        ]
    },
    {
        "id": "1b488924536d8eee",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD323\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION4\"] === true){\n       var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n       var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL4\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD323\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 4660,
        "wires": [
            [
                "0b9a67cab86d0a24"
            ],
            [
                "86f42a39ff08c217"
            ]
        ]
    },
    {
        "id": "86f42a39ff08c217",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD323Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1170,
        "y": 4660,
        "wires": [
            [
                "e1347dc98db6376f"
            ]
        ]
    },
    {
        "id": "0b9a67cab86d0a24",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD323 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1160,
        "y": 4620,
        "wires": [
            []
        ]
    },
    {
        "id": "407b7367b70413c8",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "86f42a39ff08c217"
        ],
        "uncaught": false,
        "x": 1380,
        "y": 4620,
        "wires": [
            [
                "e1347dc98db6376f"
            ]
        ]
    },
    {
        "id": "921a274d340645e5",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD323Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1750,
        "y": 4660,
        "wires": [
            []
        ]
    },
    {
        "id": "31cf4d41adebb056",
        "type": "ping",
        "z": "a00f5ebc02ec2834",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "MWD323 ping",
        "host": "192.168.10.204",
        "timer": "20",
        "inputs": 1,
        "x": 470,
        "y": 4820,
        "wires": [
            [
                "dccf82d19a915df3"
            ]
        ]
    },
    {
        "id": "6d1c8c424bc983ad",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 4760,
        "wires": [
            []
        ]
    },
    {
        "id": "4626f788113c4afa",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD323Shift1.js\",\n        localStorage: {\"key\": \"PD1_MWD323\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 1 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL4\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 4820,
        "wires": [
            [
                "2c3be7336dd0934f",
                "2d8b601e1f032d33"
            ],
            []
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "dccf82d19a915df3",
        "type": "switch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 4820,
        "wires": [
            [
                "e2e1c3920e0f114b",
                "39cb3c81faf468eb"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file ",
            "To nowhere"
        ]
    },
    {
        "id": "e2e1c3920e0f114b",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD323\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD323Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4820,
        "wires": [
            [
                "309f9b8f028d2285"
            ]
        ]
    },
    {
        "id": "309f9b8f028d2285",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD323 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1020,
        "y": 4820,
        "wires": [
            [
                "4626f788113c4afa"
            ]
        ]
    },
    {
        "id": "2c3be7336dd0934f",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1570,
        "y": 4840,
        "wires": [
            []
        ]
    },
    {
        "id": "aa643cf661cbb124",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 4820,
        "wires": [
            []
        ]
    },
    {
        "id": "1bd0ef5b421bd9f5",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 4880,
        "wires": [
            []
        ]
    },
    {
        "id": "2d8b601e1f032d33",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD323Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1580,
        "y": 4800,
        "wires": [
            []
        ]
    },
    {
        "id": "8e2e956df8a88095",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD323Shift2.js\",\n        localStorage: {\"key\": \"PD2_MWD323\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 2 SELECTION4\"] === true){\n        const values = [\n            { dataPointId: \"1639466813255\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466841662\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//No of Wire\n            { dataPointId: \"1639466830352\", qualityCode: \"1\", value: previous[\"WIRE SIZE4\"].toString() },//Wire Size\n            { dataPointId: \"1639466848841\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466866192\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL4\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725359431\", qualityCode: \"1\", value: previous[\"NOW_SPOOL14\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725367432\", qualityCode: \"1\", value: previous[\"NOW_SPOOL24\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 4920,
        "wires": [
            [
                "e430816fd5d486bc",
                "3c9f32064e33b6d6"
            ],
            []
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "39cb3c81faf468eb",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD323\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD323Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4920,
        "wires": [
            [
                "2ff3b416a0fb8174"
            ]
        ]
    },
    {
        "id": "2ff3b416a0fb8174",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD323 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1020,
        "y": 4920,
        "wires": [
            [
                "8e2e956df8a88095"
            ]
        ]
    },
    {
        "id": "e430816fd5d486bc",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1570,
        "y": 4960,
        "wires": [
            []
        ]
    },
    {
        "id": "3c9f32064e33b6d6",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD323Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1580,
        "y": 4900,
        "wires": [
            []
        ]
    },
    {
        "id": "c1c3185b1b140d43",
        "type": "comment",
        "z": "a00f5ebc02ec2834",
        "name": "MWD 323 Testing",
        "info": "",
        "x": 840,
        "y": 3580,
        "wires": []
    },
    {
        "id": "72d634bb81b74241",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD321Shift1.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3660,
        "wires": [
            [
                "c0809cfd95bbe157"
            ]
        ]
    },
    {
        "id": "da0cf446f54ea289",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD321\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD321Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 3780,
        "wires": [
            [
                "535d0d4c38922d2e"
            ]
        ]
    },
    {
        "id": "2534029d8272357d",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD321Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1230,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "041573c194c9e5d0",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "714efce26e6ed299"
        ],
        "uncaught": false,
        "x": 1400,
        "y": 3740,
        "wires": [
            [
                "6f44a68fd6142069"
            ]
        ]
    },
    {
        "id": "714efce26e6ed299",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD321Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1190,
        "y": 3780,
        "wires": [
            [
                "6f44a68fd6142069"
            ]
        ]
    },
    {
        "id": "6f44a68fd6142069",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL2\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from previous spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION2\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL2\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 3780,
        "wires": [
            [
                "076a06d790590993"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "535d0d4c38922d2e",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD321 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 660,
        "y": 3780,
        "wires": [
            [
                "f9e8d183f8f165c0"
            ]
        ]
    },
    {
        "id": "f9e8d183f8f165c0",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD321\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION2\"] === true){\n        var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD321\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 3780,
        "wires": [
            [
                "fe57724f977b241e"
            ],
            [
                "714efce26e6ed299"
            ]
        ]
    },
    {
        "id": "fe57724f977b241e",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD321 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1180,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "c0809cfd95bbe157",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD321Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 3660,
        "wires": [
            [
                "c5f9da9c8db49133"
            ]
        ]
    },
    {
        "id": "c5f9da9c8db49133",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL2\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n          ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION2\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                     { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//No of Wire\n                     { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n                     { dataPointId: \"1639466733175\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                     { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                     { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n         ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3660,
        "wires": [
            [
                "2534029d8272357d"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "8caa4fbc3fd24ff1",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "c0809cfd95bbe157"
        ],
        "uncaught": false,
        "x": 660,
        "y": 3600,
        "wires": [
            [
                "c5f9da9c8db49133"
            ]
        ]
    },
    {
        "id": "076a06d790590993",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD321Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1770,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "6b3e28340e256aaf",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL2\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION2\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL2\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 3860,
        "wires": [
            [
                "933358478ee7170e"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "9462922d11c66693",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD321Shift2.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3700,
        "wires": [
            [
                "171f8dfb80cbb049"
            ]
        ]
    },
    {
        "id": "171f8dfb80cbb049",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD321Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 3700,
        "wires": [
            [
                "d5161760dde3c171"
            ]
        ]
    },
    {
        "id": "d5161760dde3c171",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL2\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION2\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL2\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                     { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639466721033\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//No of Wire\n                     { dataPointId: \"1639466708185\", qualityCode: \"1\", value: current[\"WIRE SIZE2\"].toString() },//Wire Size\n                     { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\"},//Spooler 1 Length\n                     { dataPointId: \"1639466740414\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                     { dataPointId: \"1639725256136\", qualityCode: \"1\", value: current[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725298354\", qualityCode: \"1\", value: current[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n          ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3700,
        "wires": [
            [
                "dda2aaf0a8f39d9d"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "dda2aaf0a8f39d9d",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD321Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1230,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "665081cabf7e282d",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "171f8dfb80cbb049"
        ],
        "uncaught": false,
        "x": 840,
        "y": 3620,
        "wires": [
            [
                "d5161760dde3c171"
            ]
        ]
    },
    {
        "id": "98408fb126410bf1",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD321\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD321Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 3860,
        "wires": [
            [
                "324b3f418f8508b6"
            ]
        ]
    },
    {
        "id": "324b3f418f8508b6",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD321 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 660,
        "y": 3860,
        "wires": [
            [
                "1dafe0531dd5e7fc"
            ]
        ]
    },
    {
        "id": "1dafe0531dd5e7fc",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD321\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION2\"] === true){\n       var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n       var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL2\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD321\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 3860,
        "wires": [
            [
                "3570b1e1c42cf4c9"
            ],
            [
                "0ed0b7c2b620b0b9"
            ]
        ]
    },
    {
        "id": "0ed0b7c2b620b0b9",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD321Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1190,
        "y": 3860,
        "wires": [
            [
                "6b3e28340e256aaf"
            ]
        ]
    },
    {
        "id": "3570b1e1c42cf4c9",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD321 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1180,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "2d1d4953c3f7c298",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "0ed0b7c2b620b0b9"
        ],
        "uncaught": false,
        "x": 1400,
        "y": 3820,
        "wires": [
            [
                "6b3e28340e256aaf"
            ]
        ]
    },
    {
        "id": "933358478ee7170e",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD321Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1770,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "c20ab5802829fe09",
        "type": "ping",
        "z": "a00f5ebc02ec2834",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "MWD323 ping",
        "host": "192.168.10.202",
        "timer": "20",
        "inputs": 1,
        "x": 490,
        "y": 4020,
        "wires": [
            [
                "6306da7f9daa7ec6"
            ]
        ]
    },
    {
        "id": "9c2ce5928f592898",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 250,
        "y": 3960,
        "wires": [
            []
        ]
    },
    {
        "id": "357ba6e02c7ff387",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD321Shift1.js\",\n        localStorage: {\"key\": \"PD1_MWD321\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 1 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL2\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 4020,
        "wires": [
            [
                "0ffce8378f5dc88c",
                "181c1ee9729c52ec"
            ],
            []
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "6306da7f9daa7ec6",
        "type": "switch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 4020,
        "wires": [
            [
                "7d20c7eca3c386e8",
                "93fcd260ce78a65c"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file ",
            "To nowhere"
        ]
    },
    {
        "id": "7d20c7eca3c386e8",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD321\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD321Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 4020,
        "wires": [
            [
                "c7421d963a881c81"
            ]
        ]
    },
    {
        "id": "c7421d963a881c81",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD321 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1040,
        "y": 4020,
        "wires": [
            [
                "357ba6e02c7ff387"
            ]
        ]
    },
    {
        "id": "0ffce8378f5dc88c",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1590,
        "y": 4040,
        "wires": [
            []
        ]
    },
    {
        "id": "2bfb755e795d61d2",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 250,
        "y": 4020,
        "wires": [
            []
        ]
    },
    {
        "id": "4c1cc61429cac293",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 250,
        "y": 4080,
        "wires": [
            []
        ]
    },
    {
        "id": "181c1ee9729c52ec",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD321Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1600,
        "y": 4000,
        "wires": [
            []
        ]
    },
    {
        "id": "a6f01b26136975e4",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD321Shift2.js\",\n        localStorage: {\"key\": \"PD2_MWD321\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 2 SELECTION2\"] === true){\n        const values = [\n            { dataPointId: \"1639466690946\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639466721033\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//No of Wire\n            { dataPointId: \"1639466708185\", qualityCode: \"1\", value: previous[\"WIRE SIZE2\"].toString() },//Wire Size\n            { dataPointId: \"1639466733175\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639466740414\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL2\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725256136\", qualityCode: \"1\", value: previous[\"NOW_SPOOL12\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725298354\", qualityCode: \"1\", value: previous[\"NOW_SPOOL22\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 4120,
        "wires": [
            [
                "dc140b6ed3dfbd49",
                "b71702e484eb6069"
            ],
            []
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "93fcd260ce78a65c",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD321\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD321Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 4120,
        "wires": [
            [
                "51bce5a18ed8fd08"
            ]
        ]
    },
    {
        "id": "51bce5a18ed8fd08",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD321 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 1040,
        "y": 4120,
        "wires": [
            [
                "a6f01b26136975e4"
            ]
        ]
    },
    {
        "id": "dc140b6ed3dfbd49",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1590,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "b71702e484eb6069",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD321Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1600,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "82aaddf02d9b23a7",
        "type": "comment",
        "z": "a00f5ebc02ec2834",
        "name": "MWD 323 Testing",
        "info": "",
        "x": 737,
        "y": 247,
        "wires": []
    },
    {
        "id": "17feb3a6fb1ffa91",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD24Shift1.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 347,
        "y": 327,
        "wires": [
            [
                "805c2024a27a13b5"
            ]
        ]
    },
    {
        "id": "70217870a8700076",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 327,
        "y": 447,
        "wires": [
            [
                "1579e0c825b852ee"
            ]
        ]
    },
    {
        "id": "1b40e15592b374d3",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1137,
        "y": 327,
        "wires": [
            []
        ]
    },
    {
        "id": "b28f64042bdcfb5f",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "05bb3f43874779ca"
        ],
        "uncaught": false,
        "x": 1267,
        "y": 407,
        "wires": [
            [
                "e914b56829e270c2"
            ]
        ]
    },
    {
        "id": "05bb3f43874779ca",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD24Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1107,
        "y": 447,
        "wires": [
            [
                "e914b56829e270c2"
            ]
        ]
    },
    {
        "id": "e914b56829e270c2",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL1\"].toString()  },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\"},//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from previous spool lenght.\n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        var lshiftlen = Number(msg.payload[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var spoollen = previouslen - lshiftlen;\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: spoollen.toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n         ];\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 1 LENGTH ACTUAL1\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1387,
        "y": 447,
        "wires": [
            [
                "29b354bf7ba7a5c7"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "1579e0c825b852ee",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD24 Previous Value1",
        "localStorage": "276b5669.9c170a",
        "x": 587,
        "y": 447,
        "wires": [
            [
                "79c2aeb9cb14b869"
            ]
        ]
    },
    {
        "id": "79c2aeb9cb14b869",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD1_MWD24\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 1 SELECTION1\"] === true){\n        var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n        var previouslen = Number(previous[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD1_MWD24\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 827,
        "y": 447,
        "wires": [
            [
                "0152eb41b3a91737"
            ],
            [
                "05bb3f43874779ca"
            ]
        ]
    },
    {
        "id": "0152eb41b3a91737",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD24 Prev Value1",
        "localStorage": "276b5669.9c170a",
        "x": 1107,
        "y": 407,
        "wires": [
            []
        ]
    },
    {
        "id": "805c2024a27a13b5",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD24Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 607,
        "y": 327,
        "wires": [
            [
                "59a564e71e715b09"
            ]
        ]
    },
    {
        "id": "59a564e71e715b09",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: current[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n     if(current[\"SPOOLER 1 SELECTION1\"] === true){\n            var lshiftlen = Number(lshift[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n            var currentlen = Number(current[\"SPOOLER 1 LENGTH ACTUAL1\"]);\n            msg.payload = lshiftlen;\n            if (lshiftlen != currentlen){\n                var length = currentlen - lshiftlen;\n                 const values = [\n                     { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n                     { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n                     { dataPointId: \"1639464280864\", qualityCode: \"1\", value: length.toString() },//Spooler 1 Length\n                     { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n                     { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n        ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n      \n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 867,
        "y": 327,
        "wires": [
            [
                "1b40e15592b374d3"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "2ba922cc98d44d46",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "805c2024a27a13b5"
        ],
        "uncaught": false,
        "x": 527,
        "y": 267,
        "wires": [
            [
                "59a564e71e715b09"
            ]
        ]
    },
    {
        "id": "29b354bf7ba7a5c7",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1677,
        "y": 447,
        "wires": [
            []
        ]
    },
    {
        "id": "9cf7142f61a3c673",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "filename": "/home/unit7iiot/node-red/Test33.js",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1697,
        "y": 587,
        "wires": [
            []
        ]
    },
    {
        "id": "d39c9eb6d1948225",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send data to Mindsphere",
        "func": "var previous = msg.spoolchange[\"previous\"];\n// When shift last data file is not existing, error node shall give the msg with all key:value pair.\nif(msg.hasOwnProperty(\"error\")){\n    // Send summary data to mindsphere for previous value at first spooler change after deployment. without subtraction of previous shift data.\n    msg.payload = previous;\n    node.send([msg, null])\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\"},//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL1\"].toString()  },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n \n}\nelse{\n    msg.payload = JSON.parse(msg.payload)\n    //When first spool change occurs after shift change subtract shift data from current spool lenght.\n    \n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        var lshiftlen1 = Number(msg.payload[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n        var previouslen1 = Number(previous[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n        var spoollen1 = previouslen1 - lshiftlen1;\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: spoollen1.toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n              ];\n    //msg = null;\n        msg.payload = values;\n        msg._time = new Date()\n        node.send([null, msg])\n        previous[\"SPOOLER 2 LENGTH ACTUAL1\"] = 0;\n        msg.payload = previous;\n        node.send([msg, null])\n    }\n    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1387,
        "y": 527,
        "wires": [
            [
                "afdf3ed81d9a2762"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Spool change data)"
        ]
    },
    {
        "id": "490e20c9a2feb6bf",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Set Shift Time Data",
        "func": "var date = new Date();\nvar first = new Date(date.getFullYear(),date.getMonth(),date.getDate(),6,59,0);\nvar second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),14,59,0);\n//var second = new Date(date.getFullYear(),date.getMonth(),date.getDate(),12,07,30); ########## For Testing ###########\nvar third = new Date(date.getFullYear(),date.getMonth(),date.getDate(),22,59,0);\nvar currenttime=new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());\n\nif(first.getTime() === currenttime.getTime() || second.getTime() === currenttime.getTime() || third.getTime() === currenttime.getTime()){\n    \n    msg.shiftchangedata = msg.payload;\n    msg.filename = \"/home/unit7iiot/node-red/MWD24Shift2.js\"\n    return msg;\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 347,
        "y": 367,
        "wires": [
            [
                "353f70c3a3ff7321"
            ]
        ]
    },
    {
        "id": "353f70c3a3ff7321",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD24Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 607,
        "y": 367,
        "wires": [
            [
                "1fa26bc18cc2b338"
            ]
        ]
    },
    {
        "id": "1fa26bc18cc2b338",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Save & log Shift Lenght ",
        "func": "// When shift change file is not existing, error node shall trigger. First Data after deployment will be uploaded to mindsphere withour comaprision to previous shift data.\nvar current = msg.shiftchangedata;\n\nif(msg.hasOwnProperty(\"error\")){\n    msg.payload = msg.shiftchangedata;\n    node.send([msg, null]);\n    \n    if(current[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: current[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n         ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n    \n    //Send Shift change data to Mindsphere when first shift change occurs after deployment.\n    \n }\n // When shift change data is available, current and shift data shall be compared and if found != then data shall be uploaded to Mindsphere.\n else{\n     var lshift = JSON.parse(msg.payload);\n     //var current = msg.shiftchangedata;\n      if(current[\"SPOOLER 2 SELECTION1\"] === true){\n            var lshiftlen1 = Number(lshift[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n            var currentlen1 = Number(current[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n            msg.payload = lshiftlen1;\n            if (lshiftlen1 != currentlen1){\n                var length1 = currentlen1 - lshiftlen1;\n                 const values = [\n                     { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n                     { dataPointId: \"1639464273044\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//No of Wire\n                     { dataPointId: \"1639464261407\", qualityCode: \"1\", value: current[\"WIRE SIZE1\"].toString() },//Wire Size\n                     { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n                     { dataPointId: \"1639464288450\", qualityCode: \"1\", value: length1.toString() },//Spooler 2 length\n                     { dataPointId: \"1639725222285\", qualityCode: \"1\", value: current[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n                     { dataPointId: \"1639725241084\", qualityCode: \"1\", value: current[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n          ];\n                //msg = null;\n                msg.payload = values;\n                msg._time = new Date();\n                node.send([null, msg]) // Send to Mindsphere.\n                //msg = null;\n                msg.payload = current;\n                node.send([msg,null]) // Send to file for storing last shift data.\n            }\n        }\n     \n     \n     //return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 867,
        "y": 367,
        "wires": [
            [
                "caca696f43ce0bae"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file",
            "To Mindsphere (Shift Time Data)"
        ]
    },
    {
        "id": "caca696f43ce0bae",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1137,
        "y": 367,
        "wires": [
            []
        ]
    },
    {
        "id": "cd5430b27fc96258",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "353f70c3a3ff7321"
        ],
        "uncaught": false,
        "x": 707,
        "y": 287,
        "wires": [
            [
                "1fa26bc18cc2b338"
            ]
        ]
    },
    {
        "id": "72b318aee8a73c88",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 327,
        "y": 527,
        "wires": [
            [
                "8ecee8cd3ac65156"
            ]
        ]
    },
    {
        "id": "8ecee8cd3ac65156",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD24 Previous Value2",
        "localStorage": "276b5669.9c170a",
        "x": 587,
        "y": 527,
        "wires": [
            [
                "62ecf316e8f6140e"
            ]
        ]
    },
    {
        "id": "62ecf316e8f6140e",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Detect Spool Change",
        "func": "var current = (msg.payload);\nvar previous = JSON.parse(msg.localStorage.data);\nvar localStorage;\n//Set previous second data in case not available\nif(previous == null){\n    localStorage = {\n        \"key\":\"PD2_MWD24\",\n        \"value\": JSON.stringify(current)\n    }\n    msg.localStorage = localStorage\n    node.send([msg, null])\n}\n//Compare current and previous length\nelse{\n    //Get length of current and previous\n    if(current[\"SPOOLER 2 SELECTION1\"] === true){\n       var currentlen = Number(current[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n       var previouslen = Number(previous[\"SPOOLER 2 LENGTH ACTUAL1\"]);\n    \n        if(currentlen < previouslen){\n            msg.spoolchange = {\n                \"current\": current,\n                \"previous\": previous\n            }\n            \n            node.send([null, msg])\n        }\n    }\n    \n    \n}\n// After compare set previous lenght to current data for next cycle\n\nlocalStorage = {\n    \"key\":\"PD2_MWD24\",\n    \"value\": JSON.stringify(current)\n}\nmsg.localStorage = localStorage\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 827,
        "y": 527,
        "wires": [
            [
                "55edd2fef27ce0ce"
            ],
            [
                "0cd8255ce31423fc"
            ]
        ]
    },
    {
        "id": "0cd8255ce31423fc",
        "type": "file in",
        "z": "a00f5ebc02ec2834",
        "name": "Read MWD24Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1107,
        "y": 527,
        "wires": [
            [
                "d39c9eb6d1948225"
            ]
        ]
    },
    {
        "id": "55edd2fef27ce0ce",
        "type": "set item",
        "z": "a00f5ebc02ec2834",
        "name": "Set MWD24 Prev Value2",
        "localStorage": "276b5669.9c170a",
        "x": 1107,
        "y": 487,
        "wires": [
            []
        ]
    },
    {
        "id": "f0581758188db0f8",
        "type": "catch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "scope": [
            "0cd8255ce31423fc"
        ],
        "uncaught": false,
        "x": 1267,
        "y": 487,
        "wires": [
            [
                "d39c9eb6d1948225"
            ]
        ]
    },
    {
        "id": "afdf3ed81d9a2762",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1677,
        "y": 527,
        "wires": [
            []
        ]
    },
    {
        "id": "be5958fe20a5d678",
        "type": "ping",
        "z": "a00f5ebc02ec2834",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "MWD24 ping",
        "host": "192.168.10.201",
        "timer": "20",
        "inputs": 1,
        "x": 367,
        "y": 687,
        "wires": [
            [
                "76d71c56308da806"
            ]
        ]
    },
    {
        "id": "0eb4bab115bd6ed8",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 117,
        "y": 627,
        "wires": [
            []
        ]
    },
    {
        "id": "7099b60cc7c155bc",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD24Shift1.js\",\n        localStorage: {\"key\": \"PD1_MWD24\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 1 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: previous[\"SPOOLER 1 LENGTH ACTUAL1\"].toString() },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: \"0\" },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n            ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1217,
        "y": 687,
        "wires": [
            [
                "aca8fbf2b4809cce",
                "0e67fe17894173f7"
            ],
            []
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "76d71c56308da806",
        "type": "switch",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 497,
        "y": 687,
        "wires": [
            [
                "d976edd23d9ea254",
                "079cc7b4be82cc4a"
            ],
            []
        ],
        "outputLabels": [
            "To last shift file ",
            "To nowhere"
        ]
    },
    {
        "id": "d976edd23d9ea254",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD1_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift1.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 697,
        "y": 687,
        "wires": [
            [
                "71715f310d3e8052"
            ]
        ]
    },
    {
        "id": "71715f310d3e8052",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD24 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 947,
        "y": 687,
        "wires": [
            [
                "7099b60cc7c155bc"
            ]
        ]
    },
    {
        "id": "aca8fbf2b4809cce",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1477,
        "y": 707,
        "wires": [
            []
        ]
    },
    {
        "id": "5e945a9b4850bd4b",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 14 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 117,
        "y": 687,
        "wires": [
            []
        ]
    },
    {
        "id": "21273d9b7d9c26ed",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 117,
        "y": 747,
        "wires": [
            []
        ]
    },
    {
        "id": "0e67fe17894173f7",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift1",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1507,
        "y": 667,
        "wires": [
            []
        ]
    },
    {
        "id": "719ce943c1166a8c",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Send previous Data",
        "func": "// If localStorage is empty donot return any value in output\nif(msg.localStorage.data == null || msg.localStorage == undefined){\n    //return [null, null]\n}\n// If localStorage of previous data exists send previous data to Mindsphere and delete the previous data in localStorage\nelse{\n    var previous = JSON.parse(msg.localStorage.data);\n    msg = {\n        payload : JSON.stringify(previous),\n        filename: \"/home/unit7iiot/node-red/MWD24Shift2.js\",\n        localStorage: {\"key\": \"PD2_MWD24\"}\n    }\n    node.send([msg, null]); // Store Shift data to file and delete localStorage variable so no repeate data is logged.\n    \n    if(previous[\"SPOOLER 2 SELECTION1\"] === true){\n        const values = [\n            { dataPointId: \"1639464247101\", qualityCode: \"1\", value: \"false\" },//Machine Status\n            { dataPointId: \"1639464273044\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//No of Wire\n            { dataPointId: \"1639464261407\", qualityCode: \"1\", value: previous[\"WIRE SIZE1\"].toString() },//Wire Size\n            { dataPointId: \"1639464280864\", qualityCode: \"1\", value: \"0\" },//Spooler 1 Length\n            { dataPointId: \"1639464288450\", qualityCode: \"1\", value: previous[\"SPOOLER 2 LENGTH ACTUAL1\"].toString() },//Spooler 2 length\n            { dataPointId: \"1639725222285\", qualityCode: \"1\", value: previous[\"NOW_SPOOL11\"].toString() },//SP1 NOW\n            { dataPointId: \"1639725241084\", qualityCode: \"1\", value: previous[\"NOW_SPOOL21\"].toString() }//SP2 NOW\n           ];\n    //msg = null;\n    msg.payload = values;\n    msg._time = new Date();\n    node.send([null, msg])\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1197,
        "y": 787,
        "wires": [
            [
                "bca1c820edab9f46",
                "ad80f2d38b08ca98"
            ],
            []
        ],
        "outputLabels": [
            "To Last shift File and Remove Previous variable",
            "To Mindsphere"
        ]
    },
    {
        "id": "079cc7b4be82cc4a",
        "type": "function",
        "z": "a00f5ebc02ec2834",
        "name": "Get Prev Data",
        "func": "msg.localStorage = {\"key\":\"PD2_MWD24\"};\nmsg.filename = \"/home/unit7iiot/node-red/MWD24Shift2.js\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 697,
        "y": 787,
        "wires": [
            [
                "e8fc265fd3f534ff"
            ]
        ]
    },
    {
        "id": "e8fc265fd3f534ff",
        "type": "get item",
        "z": "a00f5ebc02ec2834",
        "name": "MWD24 Prev Value",
        "localStorage": "276b5669.9c170a",
        "x": 947,
        "y": 787,
        "wires": [
            [
                "719ce943c1166a8c"
            ]
        ]
    },
    {
        "id": "ad80f2d38b08ca98",
        "type": "file",
        "z": "a00f5ebc02ec2834",
        "name": "Write MWD24Shift2",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1507,
        "y": 767,
        "wires": [
            []
        ]
    },
    {
        "id": "bca1c820edab9f46",
        "type": "remove item",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "localStorage": "276b5669.9c170a",
        "x": 1477,
        "y": 827,
        "wires": [
            []
        ]
    },
    {
        "id": "d7eb542df07eb7aa",
        "type": "inject",
        "z": "a00f5ebc02ec2834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "33 10 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 60,
        "wires": [
            [
                "67b8ac585b4d1d00"
            ]
        ]
    },
    {
        "id": "67b8ac585b4d1d00",
        "type": "debug",
        "z": "a00f5ebc02ec2834",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 60,
        "wires": []
    }
]